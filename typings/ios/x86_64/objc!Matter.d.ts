
declare class AttestationInfo extends NSObject {

	static alloc(): AttestationInfo; // inherited from NSObject

	static new(): AttestationInfo; // inherited from NSObject

	certificationDeclaration: NSData;

	challenge: NSData;

	dac: NSData;

	elements: NSData;

	elementsSignature: NSData;

	firmwareInfo: NSData;

	nonce: NSData;

	pai: NSData;

	constructor(o: { challenge: NSData; nonce: NSData; elements: NSData; elementsSignature: NSData; dac: NSData; pai: NSData; certificationDeclaration: NSData; firmwareInfo: NSData; });

	initWithChallengeNonceElementsElementsSignatureDacPaiCertificationDeclarationFirmwareInfo(challenge: NSData, nonce: NSData, elements: NSData, elementsSignature: NSData, dac: NSData, pai: NSData, certificationDeclaration: NSData, firmwareInfo: NSData): this;
}

declare class CSRInfo extends NSObject {

	static alloc(): CSRInfo; // inherited from NSObject

	static new(): CSRInfo; // inherited from NSObject

	csr: NSData;

	elements: NSData;

	elementsSignature: NSData;

	nonce: NSData;

	constructor(o: { nonce: NSData; elements: NSData; elementsSignature: NSData; csr: NSData; });

	initWithNonceElementsElementsSignatureCsr(nonce: NSData, elements: NSData, elementsSignature: NSData, csr: NSData): this;
}

declare const enum MTRAccessControlAuthMode {

	PASE = 1,

	CASE = 2,

	Group = 3
}

declare const enum MTRAccessControlChangeType {

	Changed = 0,

	Added = 1,

	Removed = 2
}

declare class MTRAccessControlClusterAccessControlEntry extends MTRAccessControlClusterAccessControlEntryStruct {

	static alloc(): MTRAccessControlClusterAccessControlEntry; // inherited from NSObject

	static new(): MTRAccessControlClusterAccessControlEntry; // inherited from NSObject
}

declare class MTRAccessControlClusterAccessControlEntryChangedEvent extends NSObject implements NSCopying {

	static alloc(): MTRAccessControlClusterAccessControlEntryChangedEvent; // inherited from NSObject

	static new(): MTRAccessControlClusterAccessControlEntryChangedEvent; // inherited from NSObject

	adminNodeID: number;

	adminPasscodeID: number;

	changeType: number;

	fabricIndex: number;

	latestValue: MTRAccessControlClusterAccessControlEntryStruct;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRAccessControlClusterAccessControlEntryStruct extends NSObject implements NSCopying {

	static alloc(): MTRAccessControlClusterAccessControlEntryStruct; // inherited from NSObject

	static new(): MTRAccessControlClusterAccessControlEntryStruct; // inherited from NSObject

	authMode: number;

	fabricIndex: number;

	privilege: number;

	subjects: NSArray<any>;

	targets: NSArray<any>;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRAccessControlClusterAccessControlExtensionChangedEvent extends NSObject implements NSCopying {

	static alloc(): MTRAccessControlClusterAccessControlExtensionChangedEvent; // inherited from NSObject

	static new(): MTRAccessControlClusterAccessControlExtensionChangedEvent; // inherited from NSObject

	adminNodeID: number;

	adminPasscodeID: number;

	changeType: number;

	fabricIndex: number;

	latestValue: MTRAccessControlClusterAccessControlExtensionStruct;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRAccessControlClusterAccessControlExtensionStruct extends NSObject implements NSCopying {

	static alloc(): MTRAccessControlClusterAccessControlExtensionStruct; // inherited from NSObject

	static new(): MTRAccessControlClusterAccessControlExtensionStruct; // inherited from NSObject

	data: NSData;

	fabricIndex: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRAccessControlClusterAccessControlTargetStruct extends NSObject implements NSCopying {

	static alloc(): MTRAccessControlClusterAccessControlTargetStruct; // inherited from NSObject

	static new(): MTRAccessControlClusterAccessControlTargetStruct; // inherited from NSObject

	cluster: number;

	deviceType: number;

	endpoint: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRAccessControlClusterExtensionEntry extends MTRAccessControlClusterAccessControlExtensionStruct {

	static alloc(): MTRAccessControlClusterExtensionEntry; // inherited from NSObject

	static new(): MTRAccessControlClusterExtensionEntry; // inherited from NSObject
}

declare class MTRAccessControlClusterTarget extends MTRAccessControlClusterAccessControlTargetStruct {

	static alloc(): MTRAccessControlClusterTarget; // inherited from NSObject

	static new(): MTRAccessControlClusterTarget; // inherited from NSObject
}

declare const enum MTRAccessControlEntryAuthMode {

	PASE = 1,

	CASE = 2,

	Group = 3
}

declare const enum MTRAccessControlEntryPrivilege {

	View = 1,

	ProxyView = 2,

	Operate = 3,

	Manage = 4,

	Administer = 5
}

declare const enum MTRAccessControlPrivilege {

	View = 1,

	ProxyView = 2,

	Operate = 3,

	Manage = 4,

	Administer = 5
}

declare class MTRAccountLoginClusterGetSetupPINParams extends NSObject implements NSCopying {

	static alloc(): MTRAccountLoginClusterGetSetupPINParams; // inherited from NSObject

	static new(): MTRAccountLoginClusterGetSetupPINParams; // inherited from NSObject

	serverSideProcessingTimeout: number;

	tempAccountIdentifier: string;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRAccountLoginClusterGetSetupPINResponseParams extends NSObject implements NSCopying {

	static alloc(): MTRAccountLoginClusterGetSetupPINResponseParams; // inherited from NSObject

	static new(): MTRAccountLoginClusterGetSetupPINResponseParams; // inherited from NSObject

	setupPIN: string;

	timedInvokeTimeoutMs: number;

	constructor(o: { responseValue: NSDictionary<string, any>; });

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;

	initWithResponseValueError(responseValue: NSDictionary<string, any>): this;
}

declare class MTRAccountLoginClusterLoginParams extends NSObject implements NSCopying {

	static alloc(): MTRAccountLoginClusterLoginParams; // inherited from NSObject

	static new(): MTRAccountLoginClusterLoginParams; // inherited from NSObject

	serverSideProcessingTimeout: number;

	setupPIN: string;

	tempAccountIdentifier: string;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRAccountLoginClusterLogoutParams extends NSObject implements NSCopying {

	static alloc(): MTRAccountLoginClusterLogoutParams; // inherited from NSObject

	static new(): MTRAccountLoginClusterLogoutParams; // inherited from NSObject

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare const enum MTRActionsActionError {

	Unknown = 0,

	Interrupted = 1
}

declare const enum MTRActionsActionState {

	Inactive = 0,

	Active = 1,

	Paused = 2,

	Disabled = 3
}

declare const enum MTRActionsActionType {

	Other = 0,

	Scene = 1,

	Sequence = 2,

	Automation = 3,

	Exception = 4,

	Notification = 5,

	Alarm = 6
}

declare class MTRActionsClusterActionFailedEvent extends NSObject implements NSCopying {

	static alloc(): MTRActionsClusterActionFailedEvent; // inherited from NSObject

	static new(): MTRActionsClusterActionFailedEvent; // inherited from NSObject

	actionID: number;

	error: number;

	invokeID: number;

	newState: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRActionsClusterActionStruct extends NSObject implements NSCopying {

	static alloc(): MTRActionsClusterActionStruct; // inherited from NSObject

	static new(): MTRActionsClusterActionStruct; // inherited from NSObject

	actionID: number;

	endpointListID: number;

	name: string;

	state: number;

	supportedCommands: number;

	type: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRActionsClusterDisableActionParams extends NSObject implements NSCopying {

	static alloc(): MTRActionsClusterDisableActionParams; // inherited from NSObject

	static new(): MTRActionsClusterDisableActionParams; // inherited from NSObject

	actionID: number;

	invokeID: number;

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRActionsClusterDisableActionWithDurationParams extends NSObject implements NSCopying {

	static alloc(): MTRActionsClusterDisableActionWithDurationParams; // inherited from NSObject

	static new(): MTRActionsClusterDisableActionWithDurationParams; // inherited from NSObject

	actionID: number;

	duration: number;

	invokeID: number;

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRActionsClusterEnableActionParams extends NSObject implements NSCopying {

	static alloc(): MTRActionsClusterEnableActionParams; // inherited from NSObject

	static new(): MTRActionsClusterEnableActionParams; // inherited from NSObject

	actionID: number;

	invokeID: number;

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRActionsClusterEnableActionWithDurationParams extends NSObject implements NSCopying {

	static alloc(): MTRActionsClusterEnableActionWithDurationParams; // inherited from NSObject

	static new(): MTRActionsClusterEnableActionWithDurationParams; // inherited from NSObject

	actionID: number;

	duration: number;

	invokeID: number;

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRActionsClusterEndpointListStruct extends NSObject implements NSCopying {

	static alloc(): MTRActionsClusterEndpointListStruct; // inherited from NSObject

	static new(): MTRActionsClusterEndpointListStruct; // inherited from NSObject

	endpointListID: number;

	endpoints: NSArray<any>;

	name: string;

	type: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRActionsClusterInstantActionParams extends NSObject implements NSCopying {

	static alloc(): MTRActionsClusterInstantActionParams; // inherited from NSObject

	static new(): MTRActionsClusterInstantActionParams; // inherited from NSObject

	actionID: number;

	invokeID: number;

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRActionsClusterInstantActionWithTransitionParams extends NSObject implements NSCopying {

	static alloc(): MTRActionsClusterInstantActionWithTransitionParams; // inherited from NSObject

	static new(): MTRActionsClusterInstantActionWithTransitionParams; // inherited from NSObject

	actionID: number;

	invokeID: number;

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	transitionTime: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRActionsClusterPauseActionParams extends NSObject implements NSCopying {

	static alloc(): MTRActionsClusterPauseActionParams; // inherited from NSObject

	static new(): MTRActionsClusterPauseActionParams; // inherited from NSObject

	actionID: number;

	invokeID: number;

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRActionsClusterPauseActionWithDurationParams extends NSObject implements NSCopying {

	static alloc(): MTRActionsClusterPauseActionWithDurationParams; // inherited from NSObject

	static new(): MTRActionsClusterPauseActionWithDurationParams; // inherited from NSObject

	actionID: number;

	duration: number;

	invokeID: number;

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRActionsClusterResumeActionParams extends NSObject implements NSCopying {

	static alloc(): MTRActionsClusterResumeActionParams; // inherited from NSObject

	static new(): MTRActionsClusterResumeActionParams; // inherited from NSObject

	actionID: number;

	invokeID: number;

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRActionsClusterStartActionParams extends NSObject implements NSCopying {

	static alloc(): MTRActionsClusterStartActionParams; // inherited from NSObject

	static new(): MTRActionsClusterStartActionParams; // inherited from NSObject

	actionID: number;

	invokeID: number;

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRActionsClusterStartActionWithDurationParams extends NSObject implements NSCopying {

	static alloc(): MTRActionsClusterStartActionWithDurationParams; // inherited from NSObject

	static new(): MTRActionsClusterStartActionWithDurationParams; // inherited from NSObject

	actionID: number;

	duration: number;

	invokeID: number;

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRActionsClusterStateChangedEvent extends NSObject implements NSCopying {

	static alloc(): MTRActionsClusterStateChangedEvent; // inherited from NSObject

	static new(): MTRActionsClusterStateChangedEvent; // inherited from NSObject

	actionID: number;

	invokeID: number;

	newState: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRActionsClusterStopActionParams extends NSObject implements NSCopying {

	static alloc(): MTRActionsClusterStopActionParams; // inherited from NSObject

	static new(): MTRActionsClusterStopActionParams; // inherited from NSObject

	actionID: number;

	invokeID: number;

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare const enum MTRActionsCommandBits {

	InstantAction = 1,

	InstantActionWithTransition = 2,

	StartAction = 4,

	StartActionWithDuration = 8,

	StopAction = 16,

	PauseAction = 32,

	PauseActionWithDuration = 64,

	ResumeAction = 128,

	EnableAction = 256,

	EnableActionWithDuration = 512,

	DisableAction = 1024,

	DisableActionWithDuration = 2048
}

declare const enum MTRActionsEndpointListType {

	Other = 0,

	Room = 1,

	Zone = 2
}

declare class MTRAdministratorCommissioningClusterOpenBasicCommissioningWindowParams extends NSObject implements NSCopying {

	static alloc(): MTRAdministratorCommissioningClusterOpenBasicCommissioningWindowParams; // inherited from NSObject

	static new(): MTRAdministratorCommissioningClusterOpenBasicCommissioningWindowParams; // inherited from NSObject

	commissioningTimeout: number;

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRAdministratorCommissioningClusterOpenCommissioningWindowParams extends NSObject implements NSCopying {

	static alloc(): MTRAdministratorCommissioningClusterOpenCommissioningWindowParams; // inherited from NSObject

	static new(): MTRAdministratorCommissioningClusterOpenCommissioningWindowParams; // inherited from NSObject

	commissioningTimeout: number;

	discriminator: number;

	iterations: number;

	pakePasscodeVerifier: NSData;

	pakeVerifier: NSData;

	salt: NSData;

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRAdministratorCommissioningClusterRevokeCommissioningParams extends NSObject implements NSCopying {

	static alloc(): MTRAdministratorCommissioningClusterRevokeCommissioningParams; // inherited from NSObject

	static new(): MTRAdministratorCommissioningClusterRevokeCommissioningParams; // inherited from NSObject

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare const enum MTRAdministratorCommissioningCommissioningWindowStatus {

	WindowNotOpen = 0,

	EnhancedWindowOpen = 1,

	BasicWindowOpen = 2
}

declare const enum MTRAdministratorCommissioningFeature {

	Basic = 1
}

declare const enum MTRAdministratorCommissioningStatusCode {

	Busy = 2,

	PAKEParameterError = 3,

	WindowNotOpen = 4
}

declare const enum MTRApplicationBasicApplicationStatus {

	Stopped = 0,

	ActiveVisibleFocus = 1,

	ActiveHidden = 2,

	ActiveVisibleNotFocus = 3
}

declare class MTRApplicationBasicClusterApplicationBasicApplication extends MTRApplicationBasicClusterApplicationStruct {

	static alloc(): MTRApplicationBasicClusterApplicationBasicApplication; // inherited from NSObject

	static new(): MTRApplicationBasicClusterApplicationBasicApplication; // inherited from NSObject
}

declare class MTRApplicationBasicClusterApplicationStruct extends NSObject implements NSCopying {

	static alloc(): MTRApplicationBasicClusterApplicationStruct; // inherited from NSObject

	static new(): MTRApplicationBasicClusterApplicationStruct; // inherited from NSObject

	applicationID: string;

	applicationId: string;

	catalogVendorID: number;

	catalogVendorId: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRApplicationLauncherClusterApplication extends MTRApplicationLauncherClusterApplicationStruct {

	static alloc(): MTRApplicationLauncherClusterApplication; // inherited from NSObject

	static new(): MTRApplicationLauncherClusterApplication; // inherited from NSObject
}

declare class MTRApplicationLauncherClusterApplicationEP extends MTRApplicationLauncherClusterApplicationEPStruct {

	static alloc(): MTRApplicationLauncherClusterApplicationEP; // inherited from NSObject

	static new(): MTRApplicationLauncherClusterApplicationEP; // inherited from NSObject
}

declare class MTRApplicationLauncherClusterApplicationEPStruct extends NSObject implements NSCopying {

	static alloc(): MTRApplicationLauncherClusterApplicationEPStruct; // inherited from NSObject

	static new(): MTRApplicationLauncherClusterApplicationEPStruct; // inherited from NSObject

	application: MTRApplicationLauncherClusterApplicationStruct;

	endpoint: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRApplicationLauncherClusterApplicationStruct extends NSObject implements NSCopying {

	static alloc(): MTRApplicationLauncherClusterApplicationStruct; // inherited from NSObject

	static new(): MTRApplicationLauncherClusterApplicationStruct; // inherited from NSObject

	applicationID: string;

	applicationId: string;

	catalogVendorID: number;

	catalogVendorId: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRApplicationLauncherClusterHideAppParams extends NSObject implements NSCopying {

	static alloc(): MTRApplicationLauncherClusterHideAppParams; // inherited from NSObject

	static new(): MTRApplicationLauncherClusterHideAppParams; // inherited from NSObject

	application: MTRApplicationLauncherClusterApplicationStruct;

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRApplicationLauncherClusterLaunchAppParams extends NSObject implements NSCopying {

	static alloc(): MTRApplicationLauncherClusterLaunchAppParams; // inherited from NSObject

	static new(): MTRApplicationLauncherClusterLaunchAppParams; // inherited from NSObject

	application: MTRApplicationLauncherClusterApplicationStruct;

	data: NSData;

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRApplicationLauncherClusterLauncherResponseParams extends NSObject implements NSCopying {

	static alloc(): MTRApplicationLauncherClusterLauncherResponseParams; // inherited from NSObject

	static new(): MTRApplicationLauncherClusterLauncherResponseParams; // inherited from NSObject

	data: NSData;

	status: number;

	timedInvokeTimeoutMs: number;

	constructor(o: { responseValue: NSDictionary<string, any>; });

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;

	initWithResponseValueError(responseValue: NSDictionary<string, any>): this;
}

declare class MTRApplicationLauncherClusterStopAppParams extends NSObject implements NSCopying {

	static alloc(): MTRApplicationLauncherClusterStopAppParams; // inherited from NSObject

	static new(): MTRApplicationLauncherClusterStopAppParams; // inherited from NSObject

	application: MTRApplicationLauncherClusterApplicationStruct;

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare const enum MTRApplicationLauncherFeature {

	ApplicationPlatform = 1
}

declare const enum MTRApplicationLauncherStatus {

	Success = 0,

	AppNotAvailable = 1,

	SystemBusy = 2
}

declare var MTRArrayValueType: string;

declare class MTRAsyncCallbackQueueWorkItem extends NSObject {

	static alloc(): MTRAsyncCallbackQueueWorkItem; // inherited from NSObject

	static new(): MTRAsyncCallbackQueueWorkItem; // inherited from NSObject

	cancelHandler: () => void;

	readyHandler: (p1: any, p2: number) => void;

	constructor(o: { queue: interop.Pointer | interop.Reference<any>; });

	endWork(): void;

	initWithQueue(queue: interop.Pointer | interop.Reference<any>): this;

	retryWork(): void;
}

declare class MTRAsyncCallbackWorkQueue extends NSObject {

	static alloc(): MTRAsyncCallbackWorkQueue; // inherited from NSObject

	static new(): MTRAsyncCallbackWorkQueue; // inherited from NSObject

	constructor(o: { context: any; queue: interop.Pointer | interop.Reference<any>; });

	enqueueWorkItem(item: MTRAsyncCallbackQueueWorkItem): void;

	initWithContextQueue(context: any, queue: interop.Pointer | interop.Reference<any>): this;

	invalidate(): void;
}

declare class MTRAttributeCacheContainer extends NSObject {

	static alloc(): MTRAttributeCacheContainer; // inherited from NSObject

	static new(): MTRAttributeCacheContainer; // inherited from NSObject

	readAttributeWithEndpointIdClusterIdAttributeIdClientQueueCompletion(endpointId: number, clusterId: number, attributeId: number, clientQueue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<NSDictionary<string, any>>, p2: NSError) => void): void;
}

declare const enum MTRAttributeIDType {

	ClusterGlobalAttributeGeneratedCommandListID = 65528,

	ClusterGlobalAttributeAcceptedCommandListID = 65529,

	ClusterGlobalAttributeAttributeListID = 65531,

	ClusterGlobalAttributeFeatureMapID = 65532,

	ClusterGlobalAttributeClusterRevisionID = 65533,

	AttributeIDTypeGlobalAttributeGeneratedCommandListID = 65528,

	AttributeIDTypeGlobalAttributeAcceptedCommandListID = 65529,

	AttributeIDTypeGlobalAttributeEventListID = 65530,

	AttributeIDTypeGlobalAttributeAttributeListID = 65531,

	AttributeIDTypeGlobalAttributeFeatureMapID = 65532,

	AttributeIDTypeGlobalAttributeClusterRevisionID = 65533,

	ClusterIdentifyAttributeIdentifyTimeID = 0,

	ClusterIdentifyAttributeIdentifyTypeID = 1,

	ClusterIdentifyAttributeGeneratedCommandListID = 65528,

	ClusterIdentifyAttributeAcceptedCommandListID = 65529,

	ClusterIdentifyAttributeAttributeListID = 65531,

	ClusterIdentifyAttributeFeatureMapID = 65532,

	ClusterIdentifyAttributeClusterRevisionID = 65533,

	AttributeIDTypeClusterIdentifyAttributeIdentifyTimeID = 0,

	AttributeIDTypeClusterIdentifyAttributeIdentifyTypeID = 1,

	AttributeIDTypeClusterIdentifyAttributeGeneratedCommandListID = 65528,

	AttributeIDTypeClusterIdentifyAttributeAcceptedCommandListID = 65529,

	AttributeIDTypeClusterIdentifyAttributeEventListID = 65530,

	AttributeIDTypeClusterIdentifyAttributeAttributeListID = 65531,

	AttributeIDTypeClusterIdentifyAttributeFeatureMapID = 65532,

	AttributeIDTypeClusterIdentifyAttributeClusterRevisionID = 65533,

	ClusterGroupsAttributeNameSupportID = 0,

	ClusterGroupsAttributeGeneratedCommandListID = 65528,

	ClusterGroupsAttributeAcceptedCommandListID = 65529,

	ClusterGroupsAttributeAttributeListID = 65531,

	ClusterGroupsAttributeFeatureMapID = 65532,

	ClusterGroupsAttributeClusterRevisionID = 65533,

	AttributeIDTypeClusterGroupsAttributeNameSupportID = 0,

	AttributeIDTypeClusterGroupsAttributeGeneratedCommandListID = 65528,

	AttributeIDTypeClusterGroupsAttributeAcceptedCommandListID = 65529,

	AttributeIDTypeClusterGroupsAttributeEventListID = 65530,

	AttributeIDTypeClusterGroupsAttributeAttributeListID = 65531,

	AttributeIDTypeClusterGroupsAttributeFeatureMapID = 65532,

	AttributeIDTypeClusterGroupsAttributeClusterRevisionID = 65533,

	ClusterScenesAttributeSceneCountID = 0,

	ClusterScenesAttributeCurrentSceneID = 1,

	ClusterScenesAttributeCurrentGroupID = 2,

	ClusterScenesAttributeSceneValidID = 3,

	ClusterScenesAttributeNameSupportID = 4,

	ClusterScenesAttributeLastConfiguredByID = 5,

	ClusterScenesAttributeGeneratedCommandListID = 65528,

	ClusterScenesAttributeAcceptedCommandListID = 65529,

	ClusterScenesAttributeAttributeListID = 65531,

	ClusterScenesAttributeFeatureMapID = 65532,

	ClusterScenesAttributeClusterRevisionID = 65533,

	AttributeIDTypeClusterScenesAttributeSceneCountID = 0,

	AttributeIDTypeClusterScenesAttributeCurrentSceneID = 1,

	AttributeIDTypeClusterScenesAttributeCurrentGroupID = 2,

	AttributeIDTypeClusterScenesAttributeSceneValidID = 3,

	AttributeIDTypeClusterScenesAttributeNameSupportID = 4,

	AttributeIDTypeClusterScenesAttributeLastConfiguredByID = 5,

	AttributeIDTypeClusterScenesAttributeSceneTableSizeID = 6,

	AttributeIDTypeClusterScenesAttributeFabricSceneInfoID = 7,

	AttributeIDTypeClusterScenesAttributeGeneratedCommandListID = 65528,

	AttributeIDTypeClusterScenesAttributeAcceptedCommandListID = 65529,

	AttributeIDTypeClusterScenesAttributeEventListID = 65530,

	AttributeIDTypeClusterScenesAttributeAttributeListID = 65531,

	AttributeIDTypeClusterScenesAttributeFeatureMapID = 65532,

	AttributeIDTypeClusterScenesAttributeClusterRevisionID = 65533,

	ClusterOnOffAttributeOnOffID = 0,

	ClusterOnOffAttributeGlobalSceneControlID = 16384,

	ClusterOnOffAttributeOnTimeID = 16385,

	ClusterOnOffAttributeOffWaitTimeID = 16386,

	ClusterOnOffAttributeStartUpOnOffID = 16387,

	ClusterOnOffAttributeGeneratedCommandListID = 65528,

	ClusterOnOffAttributeAcceptedCommandListID = 65529,

	ClusterOnOffAttributeAttributeListID = 65531,

	ClusterOnOffAttributeFeatureMapID = 65532,

	ClusterOnOffAttributeClusterRevisionID = 65533,

	AttributeIDTypeClusterOnOffAttributeOnOffID = 0,

	AttributeIDTypeClusterOnOffAttributeGlobalSceneControlID = 16384,

	AttributeIDTypeClusterOnOffAttributeOnTimeID = 16385,

	AttributeIDTypeClusterOnOffAttributeOffWaitTimeID = 16386,

	AttributeIDTypeClusterOnOffAttributeStartUpOnOffID = 16387,

	AttributeIDTypeClusterOnOffAttributeGeneratedCommandListID = 65528,

	AttributeIDTypeClusterOnOffAttributeAcceptedCommandListID = 65529,

	AttributeIDTypeClusterOnOffAttributeEventListID = 65530,

	AttributeIDTypeClusterOnOffAttributeAttributeListID = 65531,

	AttributeIDTypeClusterOnOffAttributeFeatureMapID = 65532,

	AttributeIDTypeClusterOnOffAttributeClusterRevisionID = 65533,

	ClusterOnOffSwitchConfigurationAttributeSwitchTypeID = 0,

	ClusterOnOffSwitchConfigurationAttributeSwitchActionsID = 16,

	ClusterOnOffSwitchConfigurationAttributeGeneratedCommandListID = 65528,

	ClusterOnOffSwitchConfigurationAttributeAcceptedCommandListID = 65529,

	ClusterOnOffSwitchConfigurationAttributeAttributeListID = 65531,

	ClusterOnOffSwitchConfigurationAttributeFeatureMapID = 65532,

	ClusterOnOffSwitchConfigurationAttributeClusterRevisionID = 65533,

	AttributeIDTypeClusterOnOffSwitchConfigurationAttributeSwitchTypeID = 0,

	AttributeIDTypeClusterOnOffSwitchConfigurationAttributeSwitchActionsID = 16,

	AttributeIDTypeClusterOnOffSwitchConfigurationAttributeGeneratedCommandListID = 65528,

	AttributeIDTypeClusterOnOffSwitchConfigurationAttributeAcceptedCommandListID = 65529,

	AttributeIDTypeClusterOnOffSwitchConfigurationAttributeEventListID = 65530,

	AttributeIDTypeClusterOnOffSwitchConfigurationAttributeAttributeListID = 65531,

	AttributeIDTypeClusterOnOffSwitchConfigurationAttributeFeatureMapID = 65532,

	AttributeIDTypeClusterOnOffSwitchConfigurationAttributeClusterRevisionID = 65533,

	ClusterLevelControlAttributeCurrentLevelID = 0,

	ClusterLevelControlAttributeRemainingTimeID = 1,

	ClusterLevelControlAttributeMinLevelID = 2,

	ClusterLevelControlAttributeMaxLevelID = 3,

	ClusterLevelControlAttributeCurrentFrequencyID = 4,

	ClusterLevelControlAttributeMinFrequencyID = 5,

	ClusterLevelControlAttributeMaxFrequencyID = 6,

	ClusterLevelControlAttributeOptionsID = 15,

	ClusterLevelControlAttributeOnOffTransitionTimeID = 16,

	ClusterLevelControlAttributeOnLevelID = 17,

	ClusterLevelControlAttributeOnTransitionTimeID = 18,

	ClusterLevelControlAttributeOffTransitionTimeID = 19,

	ClusterLevelControlAttributeDefaultMoveRateID = 20,

	ClusterLevelControlAttributeStartUpCurrentLevelID = 16384,

	ClusterLevelControlAttributeGeneratedCommandListID = 65528,

	ClusterLevelControlAttributeAcceptedCommandListID = 65529,

	ClusterLevelControlAttributeAttributeListID = 65531,

	ClusterLevelControlAttributeFeatureMapID = 65532,

	ClusterLevelControlAttributeClusterRevisionID = 65533,

	AttributeIDTypeClusterLevelControlAttributeCurrentLevelID = 0,

	AttributeIDTypeClusterLevelControlAttributeRemainingTimeID = 1,

	AttributeIDTypeClusterLevelControlAttributeMinLevelID = 2,

	AttributeIDTypeClusterLevelControlAttributeMaxLevelID = 3,

	AttributeIDTypeClusterLevelControlAttributeCurrentFrequencyID = 4,

	AttributeIDTypeClusterLevelControlAttributeMinFrequencyID = 5,

	AttributeIDTypeClusterLevelControlAttributeMaxFrequencyID = 6,

	AttributeIDTypeClusterLevelControlAttributeOptionsID = 15,

	AttributeIDTypeClusterLevelControlAttributeOnOffTransitionTimeID = 16,

	AttributeIDTypeClusterLevelControlAttributeOnLevelID = 17,

	AttributeIDTypeClusterLevelControlAttributeOnTransitionTimeID = 18,

	AttributeIDTypeClusterLevelControlAttributeOffTransitionTimeID = 19,

	AttributeIDTypeClusterLevelControlAttributeDefaultMoveRateID = 20,

	AttributeIDTypeClusterLevelControlAttributeStartUpCurrentLevelID = 16384,

	AttributeIDTypeClusterLevelControlAttributeGeneratedCommandListID = 65528,

	AttributeIDTypeClusterLevelControlAttributeAcceptedCommandListID = 65529,

	AttributeIDTypeClusterLevelControlAttributeEventListID = 65530,

	AttributeIDTypeClusterLevelControlAttributeAttributeListID = 65531,

	AttributeIDTypeClusterLevelControlAttributeFeatureMapID = 65532,

	AttributeIDTypeClusterLevelControlAttributeClusterRevisionID = 65533,

	ClusterBinaryInputBasicAttributeActiveTextID = 4,

	ClusterBinaryInputBasicAttributeDescriptionID = 28,

	ClusterBinaryInputBasicAttributeInactiveTextID = 46,

	ClusterBinaryInputBasicAttributeOutOfServiceID = 81,

	ClusterBinaryInputBasicAttributePolarityID = 84,

	ClusterBinaryInputBasicAttributePresentValueID = 85,

	ClusterBinaryInputBasicAttributeReliabilityID = 103,

	ClusterBinaryInputBasicAttributeStatusFlagsID = 111,

	ClusterBinaryInputBasicAttributeApplicationTypeID = 256,

	ClusterBinaryInputBasicAttributeGeneratedCommandListID = 65528,

	ClusterBinaryInputBasicAttributeAcceptedCommandListID = 65529,

	ClusterBinaryInputBasicAttributeAttributeListID = 65531,

	ClusterBinaryInputBasicAttributeFeatureMapID = 65532,

	ClusterBinaryInputBasicAttributeClusterRevisionID = 65533,

	AttributeIDTypeClusterBinaryInputBasicAttributeActiveTextID = 4,

	AttributeIDTypeClusterBinaryInputBasicAttributeDescriptionID = 28,

	AttributeIDTypeClusterBinaryInputBasicAttributeInactiveTextID = 46,

	AttributeIDTypeClusterBinaryInputBasicAttributeOutOfServiceID = 81,

	AttributeIDTypeClusterBinaryInputBasicAttributePolarityID = 84,

	AttributeIDTypeClusterBinaryInputBasicAttributePresentValueID = 85,

	AttributeIDTypeClusterBinaryInputBasicAttributeReliabilityID = 103,

	AttributeIDTypeClusterBinaryInputBasicAttributeStatusFlagsID = 111,

	AttributeIDTypeClusterBinaryInputBasicAttributeApplicationTypeID = 256,

	AttributeIDTypeClusterBinaryInputBasicAttributeGeneratedCommandListID = 65528,

	AttributeIDTypeClusterBinaryInputBasicAttributeAcceptedCommandListID = 65529,

	AttributeIDTypeClusterBinaryInputBasicAttributeEventListID = 65530,

	AttributeIDTypeClusterBinaryInputBasicAttributeAttributeListID = 65531,

	AttributeIDTypeClusterBinaryInputBasicAttributeFeatureMapID = 65532,

	AttributeIDTypeClusterBinaryInputBasicAttributeClusterRevisionID = 65533,

	ClusterPulseWidthModulationAttributeGeneratedCommandListID = 65528,

	ClusterPulseWidthModulationAttributeAcceptedCommandListID = 65529,

	ClusterPulseWidthModulationAttributeAttributeListID = 65531,

	ClusterPulseWidthModulationAttributeFeatureMapID = 65532,

	ClusterPulseWidthModulationAttributeClusterRevisionID = 65533,

	AttributeIDTypeClusterPulseWidthModulationAttributeGeneratedCommandListID = 65528,

	AttributeIDTypeClusterPulseWidthModulationAttributeAcceptedCommandListID = 65529,

	AttributeIDTypeClusterPulseWidthModulationAttributeEventListID = 65530,

	AttributeIDTypeClusterPulseWidthModulationAttributeAttributeListID = 65531,

	AttributeIDTypeClusterPulseWidthModulationAttributeFeatureMapID = 65532,

	AttributeIDTypeClusterPulseWidthModulationAttributeClusterRevisionID = 65533,

	ClusterDescriptorAttributeDeviceTypeListID = 0,

	ClusterDescriptorAttributeDeviceListID = 0,

	ClusterDescriptorAttributeServerListID = 1,

	ClusterDescriptorAttributeClientListID = 2,

	ClusterDescriptorAttributePartsListID = 3,

	ClusterDescriptorAttributeGeneratedCommandListID = 65528,

	ClusterDescriptorAttributeAcceptedCommandListID = 65529,

	ClusterDescriptorAttributeAttributeListID = 65531,

	ClusterDescriptorAttributeFeatureMapID = 65532,

	ClusterDescriptorAttributeClusterRevisionID = 65533,

	AttributeIDTypeClusterDescriptorAttributeDeviceTypeListID = 0,

	AttributeIDTypeClusterDescriptorAttributeServerListID = 1,

	AttributeIDTypeClusterDescriptorAttributeClientListID = 2,

	AttributeIDTypeClusterDescriptorAttributePartsListID = 3,

	AttributeIDTypeClusterDescriptorAttributeTagListID = 4,

	AttributeIDTypeClusterDescriptorAttributeGeneratedCommandListID = 65528,

	AttributeIDTypeClusterDescriptorAttributeAcceptedCommandListID = 65529,

	AttributeIDTypeClusterDescriptorAttributeEventListID = 65530,

	AttributeIDTypeClusterDescriptorAttributeAttributeListID = 65531,

	AttributeIDTypeClusterDescriptorAttributeFeatureMapID = 65532,

	AttributeIDTypeClusterDescriptorAttributeClusterRevisionID = 65533,

	ClusterBindingAttributeBindingID = 0,

	ClusterBindingAttributeGeneratedCommandListID = 65528,

	ClusterBindingAttributeAcceptedCommandListID = 65529,

	ClusterBindingAttributeAttributeListID = 65531,

	ClusterBindingAttributeFeatureMapID = 65532,

	ClusterBindingAttributeClusterRevisionID = 65533,

	AttributeIDTypeClusterBindingAttributeBindingID = 0,

	AttributeIDTypeClusterBindingAttributeGeneratedCommandListID = 65528,

	AttributeIDTypeClusterBindingAttributeAcceptedCommandListID = 65529,

	AttributeIDTypeClusterBindingAttributeEventListID = 65530,

	AttributeIDTypeClusterBindingAttributeAttributeListID = 65531,

	AttributeIDTypeClusterBindingAttributeFeatureMapID = 65532,

	AttributeIDTypeClusterBindingAttributeClusterRevisionID = 65533,

	ClusterAccessControlAttributeAclID = 0,

	ClusterAccessControlAttributeExtensionID = 1,

	ClusterAccessControlAttributeSubjectsPerAccessControlEntryID = 2,

	ClusterAccessControlAttributeTargetsPerAccessControlEntryID = 3,

	ClusterAccessControlAttributeAccessControlEntriesPerFabricID = 4,

	ClusterAccessControlAttributeGeneratedCommandListID = 65528,

	ClusterAccessControlAttributeAcceptedCommandListID = 65529,

	ClusterAccessControlAttributeAttributeListID = 65531,

	ClusterAccessControlAttributeFeatureMapID = 65532,

	ClusterAccessControlAttributeClusterRevisionID = 65533,

	AttributeIDTypeClusterAccessControlAttributeACLID = 0,

	AttributeIDTypeClusterAccessControlAttributeExtensionID = 1,

	AttributeIDTypeClusterAccessControlAttributeSubjectsPerAccessControlEntryID = 2,

	AttributeIDTypeClusterAccessControlAttributeTargetsPerAccessControlEntryID = 3,

	AttributeIDTypeClusterAccessControlAttributeAccessControlEntriesPerFabricID = 4,

	AttributeIDTypeClusterAccessControlAttributeGeneratedCommandListID = 65528,

	AttributeIDTypeClusterAccessControlAttributeAcceptedCommandListID = 65529,

	AttributeIDTypeClusterAccessControlAttributeEventListID = 65530,

	AttributeIDTypeClusterAccessControlAttributeAttributeListID = 65531,

	AttributeIDTypeClusterAccessControlAttributeFeatureMapID = 65532,

	AttributeIDTypeClusterAccessControlAttributeClusterRevisionID = 65533,

	ClusterActionsAttributeActionListID = 0,

	ClusterActionsAttributeEndpointListsID = 1,

	ClusterActionsAttributeSetupURLID = 2,

	ClusterActionsAttributeGeneratedCommandListID = 65528,

	ClusterActionsAttributeAcceptedCommandListID = 65529,

	ClusterActionsAttributeAttributeListID = 65531,

	ClusterActionsAttributeFeatureMapID = 65532,

	ClusterActionsAttributeClusterRevisionID = 65533,

	AttributeIDTypeClusterActionsAttributeActionListID = 0,

	AttributeIDTypeClusterActionsAttributeEndpointListsID = 1,

	AttributeIDTypeClusterActionsAttributeSetupURLID = 2,

	AttributeIDTypeClusterActionsAttributeGeneratedCommandListID = 65528,

	AttributeIDTypeClusterActionsAttributeAcceptedCommandListID = 65529,

	AttributeIDTypeClusterActionsAttributeEventListID = 65530,

	AttributeIDTypeClusterActionsAttributeAttributeListID = 65531,

	AttributeIDTypeClusterActionsAttributeFeatureMapID = 65532,

	AttributeIDTypeClusterActionsAttributeClusterRevisionID = 65533,

	ClusterBasicAttributeDataModelRevisionID = 0,

	ClusterBasicAttributeVendorNameID = 1,

	ClusterBasicAttributeVendorIDID = 2,

	ClusterBasicAttributeProductNameID = 3,

	ClusterBasicAttributeProductIDID = 4,

	ClusterBasicAttributeNodeLabelID = 5,

	ClusterBasicAttributeLocationID = 6,

	ClusterBasicAttributeHardwareVersionID = 7,

	ClusterBasicAttributeHardwareVersionStringID = 8,

	ClusterBasicAttributeSoftwareVersionID = 9,

	ClusterBasicAttributeSoftwareVersionStringID = 10,

	ClusterBasicAttributeManufacturingDateID = 11,

	ClusterBasicAttributePartNumberID = 12,

	ClusterBasicAttributeProductURLID = 13,

	ClusterBasicAttributeProductLabelID = 14,

	ClusterBasicAttributeSerialNumberID = 15,

	ClusterBasicAttributeLocalConfigDisabledID = 16,

	ClusterBasicAttributeReachableID = 17,

	ClusterBasicAttributeUniqueIDID = 18,

	ClusterBasicAttributeCapabilityMinimaID = 19,

	ClusterBasicAttributeGeneratedCommandListID = 65528,

	ClusterBasicAttributeAcceptedCommandListID = 65529,

	ClusterBasicAttributeAttributeListID = 65531,

	ClusterBasicAttributeFeatureMapID = 65532,

	ClusterBasicAttributeClusterRevisionID = 65533,

	AttributeIDTypeClusterBasicInformationAttributeDataModelRevisionID = 0,

	AttributeIDTypeClusterBasicInformationAttributeVendorNameID = 1,

	AttributeIDTypeClusterBasicInformationAttributeVendorIDID = 2,

	AttributeIDTypeClusterBasicInformationAttributeProductNameID = 3,

	AttributeIDTypeClusterBasicInformationAttributeProductIDID = 4,

	AttributeIDTypeClusterBasicInformationAttributeNodeLabelID = 5,

	AttributeIDTypeClusterBasicInformationAttributeLocationID = 6,

	AttributeIDTypeClusterBasicInformationAttributeHardwareVersionID = 7,

	AttributeIDTypeClusterBasicInformationAttributeHardwareVersionStringID = 8,

	AttributeIDTypeClusterBasicInformationAttributeSoftwareVersionID = 9,

	AttributeIDTypeClusterBasicInformationAttributeSoftwareVersionStringID = 10,

	AttributeIDTypeClusterBasicInformationAttributeManufacturingDateID = 11,

	AttributeIDTypeClusterBasicInformationAttributePartNumberID = 12,

	AttributeIDTypeClusterBasicInformationAttributeProductURLID = 13,

	AttributeIDTypeClusterBasicInformationAttributeProductLabelID = 14,

	AttributeIDTypeClusterBasicInformationAttributeSerialNumberID = 15,

	AttributeIDTypeClusterBasicInformationAttributeLocalConfigDisabledID = 16,

	AttributeIDTypeClusterBasicInformationAttributeReachableID = 17,

	AttributeIDTypeClusterBasicInformationAttributeUniqueIDID = 18,

	AttributeIDTypeClusterBasicInformationAttributeCapabilityMinimaID = 19,

	AttributeIDTypeClusterBasicInformationAttributeProductAppearanceID = 20,

	AttributeIDTypeClusterBasicInformationAttributeSpecificationVersionID = 21,

	AttributeIDTypeClusterBasicInformationAttributeMaxPathsPerInvokeID = 22,

	AttributeIDTypeClusterBasicInformationAttributeGeneratedCommandListID = 65528,

	AttributeIDTypeClusterBasicInformationAttributeAcceptedCommandListID = 65529,

	AttributeIDTypeClusterBasicInformationAttributeEventListID = 65530,

	AttributeIDTypeClusterBasicInformationAttributeAttributeListID = 65531,

	AttributeIDTypeClusterBasicInformationAttributeFeatureMapID = 65532,

	AttributeIDTypeClusterBasicInformationAttributeClusterRevisionID = 65533,

	ClusterOtaSoftwareUpdateProviderAttributeGeneratedCommandListID = 65528,

	ClusterOtaSoftwareUpdateProviderAttributeAcceptedCommandListID = 65529,

	ClusterOtaSoftwareUpdateProviderAttributeAttributeListID = 65531,

	ClusterOtaSoftwareUpdateProviderAttributeFeatureMapID = 65532,

	ClusterOtaSoftwareUpdateProviderAttributeClusterRevisionID = 65533,

	AttributeIDTypeClusterOTASoftwareUpdateProviderAttributeGeneratedCommandListID = 65528,

	AttributeIDTypeClusterOTASoftwareUpdateProviderAttributeAcceptedCommandListID = 65529,

	AttributeIDTypeClusterOTASoftwareUpdateProviderAttributeEventListID = 65530,

	AttributeIDTypeClusterOTASoftwareUpdateProviderAttributeAttributeListID = 65531,

	AttributeIDTypeClusterOTASoftwareUpdateProviderAttributeFeatureMapID = 65532,

	AttributeIDTypeClusterOTASoftwareUpdateProviderAttributeClusterRevisionID = 65533,

	ClusterOtaSoftwareUpdateRequestorAttributeDefaultOtaProvidersID = 0,

	ClusterOtaSoftwareUpdateRequestorAttributeUpdatePossibleID = 1,

	ClusterOtaSoftwareUpdateRequestorAttributeUpdateStateID = 2,

	ClusterOtaSoftwareUpdateRequestorAttributeUpdateStateProgressID = 3,

	ClusterOtaSoftwareUpdateRequestorAttributeGeneratedCommandListID = 65528,

	ClusterOtaSoftwareUpdateRequestorAttributeAcceptedCommandListID = 65529,

	ClusterOtaSoftwareUpdateRequestorAttributeAttributeListID = 65531,

	ClusterOtaSoftwareUpdateRequestorAttributeFeatureMapID = 65532,

	ClusterOtaSoftwareUpdateRequestorAttributeClusterRevisionID = 65533,

	AttributeIDTypeClusterOTASoftwareUpdateRequestorAttributeDefaultOTAProvidersID = 0,

	AttributeIDTypeClusterOTASoftwareUpdateRequestorAttributeUpdatePossibleID = 1,

	AttributeIDTypeClusterOTASoftwareUpdateRequestorAttributeUpdateStateID = 2,

	AttributeIDTypeClusterOTASoftwareUpdateRequestorAttributeUpdateStateProgressID = 3,

	AttributeIDTypeClusterOTASoftwareUpdateRequestorAttributeGeneratedCommandListID = 65528,

	AttributeIDTypeClusterOTASoftwareUpdateRequestorAttributeAcceptedCommandListID = 65529,

	AttributeIDTypeClusterOTASoftwareUpdateRequestorAttributeEventListID = 65530,

	AttributeIDTypeClusterOTASoftwareUpdateRequestorAttributeAttributeListID = 65531,

	AttributeIDTypeClusterOTASoftwareUpdateRequestorAttributeFeatureMapID = 65532,

	AttributeIDTypeClusterOTASoftwareUpdateRequestorAttributeClusterRevisionID = 65533,

	ClusterLocalizationConfigurationAttributeActiveLocaleID = 0,

	ClusterLocalizationConfigurationAttributeSupportedLocalesID = 1,

	ClusterLocalizationConfigurationAttributeGeneratedCommandListID = 65528,

	ClusterLocalizationConfigurationAttributeAcceptedCommandListID = 65529,

	ClusterLocalizationConfigurationAttributeAttributeListID = 65531,

	ClusterLocalizationConfigurationAttributeFeatureMapID = 65532,

	ClusterLocalizationConfigurationAttributeClusterRevisionID = 65533,

	AttributeIDTypeClusterLocalizationConfigurationAttributeActiveLocaleID = 0,

	AttributeIDTypeClusterLocalizationConfigurationAttributeSupportedLocalesID = 1,

	AttributeIDTypeClusterLocalizationConfigurationAttributeGeneratedCommandListID = 65528,

	AttributeIDTypeClusterLocalizationConfigurationAttributeAcceptedCommandListID = 65529,

	AttributeIDTypeClusterLocalizationConfigurationAttributeEventListID = 65530,

	AttributeIDTypeClusterLocalizationConfigurationAttributeAttributeListID = 65531,

	AttributeIDTypeClusterLocalizationConfigurationAttributeFeatureMapID = 65532,

	AttributeIDTypeClusterLocalizationConfigurationAttributeClusterRevisionID = 65533,

	ClusterTimeFormatLocalizationAttributeHourFormatID = 0,

	ClusterTimeFormatLocalizationAttributeActiveCalendarTypeID = 1,

	ClusterTimeFormatLocalizationAttributeSupportedCalendarTypesID = 2,

	ClusterTimeFormatLocalizationAttributeGeneratedCommandListID = 65528,

	ClusterTimeFormatLocalizationAttributeAcceptedCommandListID = 65529,

	ClusterTimeFormatLocalizationAttributeAttributeListID = 65531,

	ClusterTimeFormatLocalizationAttributeFeatureMapID = 65532,

	ClusterTimeFormatLocalizationAttributeClusterRevisionID = 65533,

	AttributeIDTypeClusterTimeFormatLocalizationAttributeHourFormatID = 0,

	AttributeIDTypeClusterTimeFormatLocalizationAttributeActiveCalendarTypeID = 1,

	AttributeIDTypeClusterTimeFormatLocalizationAttributeSupportedCalendarTypesID = 2,

	AttributeIDTypeClusterTimeFormatLocalizationAttributeGeneratedCommandListID = 65528,

	AttributeIDTypeClusterTimeFormatLocalizationAttributeAcceptedCommandListID = 65529,

	AttributeIDTypeClusterTimeFormatLocalizationAttributeEventListID = 65530,

	AttributeIDTypeClusterTimeFormatLocalizationAttributeAttributeListID = 65531,

	AttributeIDTypeClusterTimeFormatLocalizationAttributeFeatureMapID = 65532,

	AttributeIDTypeClusterTimeFormatLocalizationAttributeClusterRevisionID = 65533,

	ClusterUnitLocalizationAttributeTemperatureUnitID = 0,

	ClusterUnitLocalizationAttributeGeneratedCommandListID = 65528,

	ClusterUnitLocalizationAttributeAcceptedCommandListID = 65529,

	ClusterUnitLocalizationAttributeAttributeListID = 65531,

	ClusterUnitLocalizationAttributeFeatureMapID = 65532,

	ClusterUnitLocalizationAttributeClusterRevisionID = 65533,

	AttributeIDTypeClusterUnitLocalizationAttributeTemperatureUnitID = 0,

	AttributeIDTypeClusterUnitLocalizationAttributeGeneratedCommandListID = 65528,

	AttributeIDTypeClusterUnitLocalizationAttributeAcceptedCommandListID = 65529,

	AttributeIDTypeClusterUnitLocalizationAttributeEventListID = 65530,

	AttributeIDTypeClusterUnitLocalizationAttributeAttributeListID = 65531,

	AttributeIDTypeClusterUnitLocalizationAttributeFeatureMapID = 65532,

	AttributeIDTypeClusterUnitLocalizationAttributeClusterRevisionID = 65533,

	ClusterPowerSourceConfigurationAttributeSourcesID = 0,

	ClusterPowerSourceConfigurationAttributeGeneratedCommandListID = 65528,

	ClusterPowerSourceConfigurationAttributeAcceptedCommandListID = 65529,

	ClusterPowerSourceConfigurationAttributeAttributeListID = 65531,

	ClusterPowerSourceConfigurationAttributeFeatureMapID = 65532,

	ClusterPowerSourceConfigurationAttributeClusterRevisionID = 65533,

	AttributeIDTypeClusterPowerSourceConfigurationAttributeSourcesID = 0,

	AttributeIDTypeClusterPowerSourceConfigurationAttributeGeneratedCommandListID = 65528,

	AttributeIDTypeClusterPowerSourceConfigurationAttributeAcceptedCommandListID = 65529,

	AttributeIDTypeClusterPowerSourceConfigurationAttributeEventListID = 65530,

	AttributeIDTypeClusterPowerSourceConfigurationAttributeAttributeListID = 65531,

	AttributeIDTypeClusterPowerSourceConfigurationAttributeFeatureMapID = 65532,

	AttributeIDTypeClusterPowerSourceConfigurationAttributeClusterRevisionID = 65533,

	ClusterPowerSourceAttributeStatusID = 0,

	ClusterPowerSourceAttributeOrderID = 1,

	ClusterPowerSourceAttributeDescriptionID = 2,

	ClusterPowerSourceAttributeWiredAssessedInputVoltageID = 3,

	ClusterPowerSourceAttributeWiredAssessedInputFrequencyID = 4,

	ClusterPowerSourceAttributeWiredCurrentTypeID = 5,

	ClusterPowerSourceAttributeWiredAssessedCurrentID = 6,

	ClusterPowerSourceAttributeWiredNominalVoltageID = 7,

	ClusterPowerSourceAttributeWiredMaximumCurrentID = 8,

	ClusterPowerSourceAttributeWiredPresentID = 9,

	ClusterPowerSourceAttributeActiveWiredFaultsID = 10,

	ClusterPowerSourceAttributeBatVoltageID = 11,

	ClusterPowerSourceAttributeBatPercentRemainingID = 12,

	ClusterPowerSourceAttributeBatTimeRemainingID = 13,

	ClusterPowerSourceAttributeBatChargeLevelID = 14,

	ClusterPowerSourceAttributeBatReplacementNeededID = 15,

	ClusterPowerSourceAttributeBatReplaceabilityID = 16,

	ClusterPowerSourceAttributeBatPresentID = 17,

	ClusterPowerSourceAttributeActiveBatFaultsID = 18,

	ClusterPowerSourceAttributeBatReplacementDescriptionID = 19,

	ClusterPowerSourceAttributeBatCommonDesignationID = 20,

	ClusterPowerSourceAttributeBatANSIDesignationID = 21,

	ClusterPowerSourceAttributeBatIECDesignationID = 22,

	ClusterPowerSourceAttributeBatApprovedChemistryID = 23,

	ClusterPowerSourceAttributeBatCapacityID = 24,

	ClusterPowerSourceAttributeBatQuantityID = 25,

	ClusterPowerSourceAttributeBatChargeStateID = 26,

	ClusterPowerSourceAttributeBatTimeToFullChargeID = 27,

	ClusterPowerSourceAttributeBatFunctionalWhileChargingID = 28,

	ClusterPowerSourceAttributeBatChargingCurrentID = 29,

	ClusterPowerSourceAttributeActiveBatChargeFaultsID = 30,

	ClusterPowerSourceAttributeGeneratedCommandListID = 65528,

	ClusterPowerSourceAttributeAcceptedCommandListID = 65529,

	ClusterPowerSourceAttributeAttributeListID = 65531,

	ClusterPowerSourceAttributeFeatureMapID = 65532,

	ClusterPowerSourceAttributeClusterRevisionID = 65533,

	AttributeIDTypeClusterPowerSourceAttributeStatusID = 0,

	AttributeIDTypeClusterPowerSourceAttributeOrderID = 1,

	AttributeIDTypeClusterPowerSourceAttributeDescriptionID = 2,

	AttributeIDTypeClusterPowerSourceAttributeWiredAssessedInputVoltageID = 3,

	AttributeIDTypeClusterPowerSourceAttributeWiredAssessedInputFrequencyID = 4,

	AttributeIDTypeClusterPowerSourceAttributeWiredCurrentTypeID = 5,

	AttributeIDTypeClusterPowerSourceAttributeWiredAssessedCurrentID = 6,

	AttributeIDTypeClusterPowerSourceAttributeWiredNominalVoltageID = 7,

	AttributeIDTypeClusterPowerSourceAttributeWiredMaximumCurrentID = 8,

	AttributeIDTypeClusterPowerSourceAttributeWiredPresentID = 9,

	AttributeIDTypeClusterPowerSourceAttributeActiveWiredFaultsID = 10,

	AttributeIDTypeClusterPowerSourceAttributeBatVoltageID = 11,

	AttributeIDTypeClusterPowerSourceAttributeBatPercentRemainingID = 12,

	AttributeIDTypeClusterPowerSourceAttributeBatTimeRemainingID = 13,

	AttributeIDTypeClusterPowerSourceAttributeBatChargeLevelID = 14,

	AttributeIDTypeClusterPowerSourceAttributeBatReplacementNeededID = 15,

	AttributeIDTypeClusterPowerSourceAttributeBatReplaceabilityID = 16,

	AttributeIDTypeClusterPowerSourceAttributeBatPresentID = 17,

	AttributeIDTypeClusterPowerSourceAttributeActiveBatFaultsID = 18,

	AttributeIDTypeClusterPowerSourceAttributeBatReplacementDescriptionID = 19,

	AttributeIDTypeClusterPowerSourceAttributeBatCommonDesignationID = 20,

	AttributeIDTypeClusterPowerSourceAttributeBatANSIDesignationID = 21,

	AttributeIDTypeClusterPowerSourceAttributeBatIECDesignationID = 22,

	AttributeIDTypeClusterPowerSourceAttributeBatApprovedChemistryID = 23,

	AttributeIDTypeClusterPowerSourceAttributeBatCapacityID = 24,

	AttributeIDTypeClusterPowerSourceAttributeBatQuantityID = 25,

	AttributeIDTypeClusterPowerSourceAttributeBatChargeStateID = 26,

	AttributeIDTypeClusterPowerSourceAttributeBatTimeToFullChargeID = 27,

	AttributeIDTypeClusterPowerSourceAttributeBatFunctionalWhileChargingID = 28,

	AttributeIDTypeClusterPowerSourceAttributeBatChargingCurrentID = 29,

	AttributeIDTypeClusterPowerSourceAttributeActiveBatChargeFaultsID = 30,

	AttributeIDTypeClusterPowerSourceAttributeEndpointListID = 31,

	AttributeIDTypeClusterPowerSourceAttributeGeneratedCommandListID = 65528,

	AttributeIDTypeClusterPowerSourceAttributeAcceptedCommandListID = 65529,

	AttributeIDTypeClusterPowerSourceAttributeEventListID = 65530,

	AttributeIDTypeClusterPowerSourceAttributeAttributeListID = 65531,

	AttributeIDTypeClusterPowerSourceAttributeFeatureMapID = 65532,

	AttributeIDTypeClusterPowerSourceAttributeClusterRevisionID = 65533,

	ClusterGeneralCommissioningAttributeBreadcrumbID = 0,

	ClusterGeneralCommissioningAttributeBasicCommissioningInfoID = 1,

	ClusterGeneralCommissioningAttributeRegulatoryConfigID = 2,

	ClusterGeneralCommissioningAttributeLocationCapabilityID = 3,

	ClusterGeneralCommissioningAttributeSupportsConcurrentConnectionID = 4,

	ClusterGeneralCommissioningAttributeGeneratedCommandListID = 65528,

	ClusterGeneralCommissioningAttributeAcceptedCommandListID = 65529,

	ClusterGeneralCommissioningAttributeAttributeListID = 65531,

	ClusterGeneralCommissioningAttributeFeatureMapID = 65532,

	ClusterGeneralCommissioningAttributeClusterRevisionID = 65533,

	AttributeIDTypeClusterGeneralCommissioningAttributeBreadcrumbID = 0,

	AttributeIDTypeClusterGeneralCommissioningAttributeBasicCommissioningInfoID = 1,

	AttributeIDTypeClusterGeneralCommissioningAttributeRegulatoryConfigID = 2,

	AttributeIDTypeClusterGeneralCommissioningAttributeLocationCapabilityID = 3,

	AttributeIDTypeClusterGeneralCommissioningAttributeSupportsConcurrentConnectionID = 4,

	AttributeIDTypeClusterGeneralCommissioningAttributeGeneratedCommandListID = 65528,

	AttributeIDTypeClusterGeneralCommissioningAttributeAcceptedCommandListID = 65529,

	AttributeIDTypeClusterGeneralCommissioningAttributeEventListID = 65530,

	AttributeIDTypeClusterGeneralCommissioningAttributeAttributeListID = 65531,

	AttributeIDTypeClusterGeneralCommissioningAttributeFeatureMapID = 65532,

	AttributeIDTypeClusterGeneralCommissioningAttributeClusterRevisionID = 65533,

	ClusterNetworkCommissioningAttributeMaxNetworksID = 0,

	ClusterNetworkCommissioningAttributeNetworksID = 1,

	ClusterNetworkCommissioningAttributeScanMaxTimeSecondsID = 2,

	ClusterNetworkCommissioningAttributeConnectMaxTimeSecondsID = 3,

	ClusterNetworkCommissioningAttributeInterfaceEnabledID = 4,

	ClusterNetworkCommissioningAttributeLastNetworkingStatusID = 5,

	ClusterNetworkCommissioningAttributeLastNetworkIDID = 6,

	ClusterNetworkCommissioningAttributeLastConnectErrorValueID = 7,

	ClusterNetworkCommissioningAttributeGeneratedCommandListID = 65528,

	ClusterNetworkCommissioningAttributeAcceptedCommandListID = 65529,

	ClusterNetworkCommissioningAttributeAttributeListID = 65531,

	ClusterNetworkCommissioningAttributeFeatureMapID = 65532,

	ClusterNetworkCommissioningAttributeClusterRevisionID = 65533,

	AttributeIDTypeClusterNetworkCommissioningAttributeMaxNetworksID = 0,

	AttributeIDTypeClusterNetworkCommissioningAttributeNetworksID = 1,

	AttributeIDTypeClusterNetworkCommissioningAttributeScanMaxTimeSecondsID = 2,

	AttributeIDTypeClusterNetworkCommissioningAttributeConnectMaxTimeSecondsID = 3,

	AttributeIDTypeClusterNetworkCommissioningAttributeInterfaceEnabledID = 4,

	AttributeIDTypeClusterNetworkCommissioningAttributeLastNetworkingStatusID = 5,

	AttributeIDTypeClusterNetworkCommissioningAttributeLastNetworkIDID = 6,

	AttributeIDTypeClusterNetworkCommissioningAttributeLastConnectErrorValueID = 7,

	AttributeIDTypeClusterNetworkCommissioningAttributeSupportedWiFiBandsID = 8,

	AttributeIDTypeClusterNetworkCommissioningAttributeSupportedThreadFeaturesID = 9,

	AttributeIDTypeClusterNetworkCommissioningAttributeThreadVersionID = 10,

	AttributeIDTypeClusterNetworkCommissioningAttributeGeneratedCommandListID = 65528,

	AttributeIDTypeClusterNetworkCommissioningAttributeAcceptedCommandListID = 65529,

	AttributeIDTypeClusterNetworkCommissioningAttributeEventListID = 65530,

	AttributeIDTypeClusterNetworkCommissioningAttributeAttributeListID = 65531,

	AttributeIDTypeClusterNetworkCommissioningAttributeFeatureMapID = 65532,

	AttributeIDTypeClusterNetworkCommissioningAttributeClusterRevisionID = 65533,

	ClusterDiagnosticLogsAttributeGeneratedCommandListID = 65528,

	ClusterDiagnosticLogsAttributeAcceptedCommandListID = 65529,

	ClusterDiagnosticLogsAttributeAttributeListID = 65531,

	ClusterDiagnosticLogsAttributeFeatureMapID = 65532,

	ClusterDiagnosticLogsAttributeClusterRevisionID = 65533,

	AttributeIDTypeClusterDiagnosticLogsAttributeGeneratedCommandListID = 65528,

	AttributeIDTypeClusterDiagnosticLogsAttributeAcceptedCommandListID = 65529,

	AttributeIDTypeClusterDiagnosticLogsAttributeEventListID = 65530,

	AttributeIDTypeClusterDiagnosticLogsAttributeAttributeListID = 65531,

	AttributeIDTypeClusterDiagnosticLogsAttributeFeatureMapID = 65532,

	AttributeIDTypeClusterDiagnosticLogsAttributeClusterRevisionID = 65533,

	ClusterGeneralDiagnosticsAttributeNetworkInterfacesID = 0,

	ClusterGeneralDiagnosticsAttributeRebootCountID = 1,

	ClusterGeneralDiagnosticsAttributeUpTimeID = 2,

	ClusterGeneralDiagnosticsAttributeTotalOperationalHoursID = 3,

	ClusterGeneralDiagnosticsAttributeBootReasonsID = 4,

	ClusterGeneralDiagnosticsAttributeActiveHardwareFaultsID = 5,

	ClusterGeneralDiagnosticsAttributeActiveRadioFaultsID = 6,

	ClusterGeneralDiagnosticsAttributeActiveNetworkFaultsID = 7,

	ClusterGeneralDiagnosticsAttributeTestEventTriggersEnabledID = 8,

	ClusterGeneralDiagnosticsAttributeGeneratedCommandListID = 65528,

	ClusterGeneralDiagnosticsAttributeAcceptedCommandListID = 65529,

	ClusterGeneralDiagnosticsAttributeAttributeListID = 65531,

	ClusterGeneralDiagnosticsAttributeFeatureMapID = 65532,

	ClusterGeneralDiagnosticsAttributeClusterRevisionID = 65533,

	AttributeIDTypeClusterGeneralDiagnosticsAttributeNetworkInterfacesID = 0,

	AttributeIDTypeClusterGeneralDiagnosticsAttributeRebootCountID = 1,

	AttributeIDTypeClusterGeneralDiagnosticsAttributeUpTimeID = 2,

	AttributeIDTypeClusterGeneralDiagnosticsAttributeTotalOperationalHoursID = 3,

	AttributeIDTypeClusterGeneralDiagnosticsAttributeBootReasonID = 4,

	AttributeIDTypeClusterGeneralDiagnosticsAttributeActiveHardwareFaultsID = 5,

	AttributeIDTypeClusterGeneralDiagnosticsAttributeActiveRadioFaultsID = 6,

	AttributeIDTypeClusterGeneralDiagnosticsAttributeActiveNetworkFaultsID = 7,

	AttributeIDTypeClusterGeneralDiagnosticsAttributeTestEventTriggersEnabledID = 8,

	AttributeIDTypeClusterGeneralDiagnosticsAttributeGeneratedCommandListID = 65528,

	AttributeIDTypeClusterGeneralDiagnosticsAttributeAcceptedCommandListID = 65529,

	AttributeIDTypeClusterGeneralDiagnosticsAttributeEventListID = 65530,

	AttributeIDTypeClusterGeneralDiagnosticsAttributeAttributeListID = 65531,

	AttributeIDTypeClusterGeneralDiagnosticsAttributeFeatureMapID = 65532,

	AttributeIDTypeClusterGeneralDiagnosticsAttributeClusterRevisionID = 65533,

	ClusterSoftwareDiagnosticsAttributeThreadMetricsID = 0,

	ClusterSoftwareDiagnosticsAttributeCurrentHeapFreeID = 1,

	ClusterSoftwareDiagnosticsAttributeCurrentHeapUsedID = 2,

	ClusterSoftwareDiagnosticsAttributeCurrentHeapHighWatermarkID = 3,

	ClusterSoftwareDiagnosticsAttributeGeneratedCommandListID = 65528,

	ClusterSoftwareDiagnosticsAttributeAcceptedCommandListID = 65529,

	ClusterSoftwareDiagnosticsAttributeAttributeListID = 65531,

	ClusterSoftwareDiagnosticsAttributeFeatureMapID = 65532,

	ClusterSoftwareDiagnosticsAttributeClusterRevisionID = 65533,

	AttributeIDTypeClusterSoftwareDiagnosticsAttributeThreadMetricsID = 0,

	AttributeIDTypeClusterSoftwareDiagnosticsAttributeCurrentHeapFreeID = 1,

	AttributeIDTypeClusterSoftwareDiagnosticsAttributeCurrentHeapUsedID = 2,

	AttributeIDTypeClusterSoftwareDiagnosticsAttributeCurrentHeapHighWatermarkID = 3,

	AttributeIDTypeClusterSoftwareDiagnosticsAttributeGeneratedCommandListID = 65528,

	AttributeIDTypeClusterSoftwareDiagnosticsAttributeAcceptedCommandListID = 65529,

	AttributeIDTypeClusterSoftwareDiagnosticsAttributeEventListID = 65530,

	AttributeIDTypeClusterSoftwareDiagnosticsAttributeAttributeListID = 65531,

	AttributeIDTypeClusterSoftwareDiagnosticsAttributeFeatureMapID = 65532,

	AttributeIDTypeClusterSoftwareDiagnosticsAttributeClusterRevisionID = 65533,

	ClusterThreadNetworkDiagnosticsAttributeChannelID = 0,

	ClusterThreadNetworkDiagnosticsAttributeRoutingRoleID = 1,

	ClusterThreadNetworkDiagnosticsAttributeNetworkNameID = 2,

	ClusterThreadNetworkDiagnosticsAttributePanIdID = 3,

	ClusterThreadNetworkDiagnosticsAttributeExtendedPanIdID = 4,

	ClusterThreadNetworkDiagnosticsAttributeMeshLocalPrefixID = 5,

	ClusterThreadNetworkDiagnosticsAttributeOverrunCountID = 6,

	ClusterThreadNetworkDiagnosticsAttributeNeighborTableListID = 7,

	ClusterThreadNetworkDiagnosticsAttributeRouteTableListID = 8,

	ClusterThreadNetworkDiagnosticsAttributePartitionIdID = 9,

	ClusterThreadNetworkDiagnosticsAttributeWeightingID = 10,

	ClusterThreadNetworkDiagnosticsAttributeDataVersionID = 11,

	ClusterThreadNetworkDiagnosticsAttributeStableDataVersionID = 12,

	ClusterThreadNetworkDiagnosticsAttributeLeaderRouterIdID = 13,

	ClusterThreadNetworkDiagnosticsAttributeDetachedRoleCountID = 14,

	ClusterThreadNetworkDiagnosticsAttributeChildRoleCountID = 15,

	ClusterThreadNetworkDiagnosticsAttributeRouterRoleCountID = 16,

	ClusterThreadNetworkDiagnosticsAttributeLeaderRoleCountID = 17,

	ClusterThreadNetworkDiagnosticsAttributeAttachAttemptCountID = 18,

	ClusterThreadNetworkDiagnosticsAttributePartitionIdChangeCountID = 19,

	ClusterThreadNetworkDiagnosticsAttributeBetterPartitionAttachAttemptCountID = 20,

	ClusterThreadNetworkDiagnosticsAttributeParentChangeCountID = 21,

	ClusterThreadNetworkDiagnosticsAttributeTxTotalCountID = 22,

	ClusterThreadNetworkDiagnosticsAttributeTxUnicastCountID = 23,

	ClusterThreadNetworkDiagnosticsAttributeTxBroadcastCountID = 24,

	ClusterThreadNetworkDiagnosticsAttributeTxAckRequestedCountID = 25,

	ClusterThreadNetworkDiagnosticsAttributeTxAckedCountID = 26,

	ClusterThreadNetworkDiagnosticsAttributeTxNoAckRequestedCountID = 27,

	ClusterThreadNetworkDiagnosticsAttributeTxDataCountID = 28,

	ClusterThreadNetworkDiagnosticsAttributeTxDataPollCountID = 29,

	ClusterThreadNetworkDiagnosticsAttributeTxBeaconCountID = 30,

	ClusterThreadNetworkDiagnosticsAttributeTxBeaconRequestCountID = 31,

	ClusterThreadNetworkDiagnosticsAttributeTxOtherCountID = 32,

	ClusterThreadNetworkDiagnosticsAttributeTxRetryCountID = 33,

	ClusterThreadNetworkDiagnosticsAttributeTxDirectMaxRetryExpiryCountID = 34,

	ClusterThreadNetworkDiagnosticsAttributeTxIndirectMaxRetryExpiryCountID = 35,

	ClusterThreadNetworkDiagnosticsAttributeTxErrCcaCountID = 36,

	ClusterThreadNetworkDiagnosticsAttributeTxErrAbortCountID = 37,

	ClusterThreadNetworkDiagnosticsAttributeTxErrBusyChannelCountID = 38,

	ClusterThreadNetworkDiagnosticsAttributeRxTotalCountID = 39,

	ClusterThreadNetworkDiagnosticsAttributeRxUnicastCountID = 40,

	ClusterThreadNetworkDiagnosticsAttributeRxBroadcastCountID = 41,

	ClusterThreadNetworkDiagnosticsAttributeRxDataCountID = 42,

	ClusterThreadNetworkDiagnosticsAttributeRxDataPollCountID = 43,

	ClusterThreadNetworkDiagnosticsAttributeRxBeaconCountID = 44,

	ClusterThreadNetworkDiagnosticsAttributeRxBeaconRequestCountID = 45,

	ClusterThreadNetworkDiagnosticsAttributeRxOtherCountID = 46,

	ClusterThreadNetworkDiagnosticsAttributeRxAddressFilteredCountID = 47,

	ClusterThreadNetworkDiagnosticsAttributeRxDestAddrFilteredCountID = 48,

	ClusterThreadNetworkDiagnosticsAttributeRxDuplicatedCountID = 49,

	ClusterThreadNetworkDiagnosticsAttributeRxErrNoFrameCountID = 50,

	ClusterThreadNetworkDiagnosticsAttributeRxErrUnknownNeighborCountID = 51,

	ClusterThreadNetworkDiagnosticsAttributeRxErrInvalidSrcAddrCountID = 52,

	ClusterThreadNetworkDiagnosticsAttributeRxErrSecCountID = 53,

	ClusterThreadNetworkDiagnosticsAttributeRxErrFcsCountID = 54,

	ClusterThreadNetworkDiagnosticsAttributeRxErrOtherCountID = 55,

	ClusterThreadNetworkDiagnosticsAttributeActiveTimestampID = 56,

	ClusterThreadNetworkDiagnosticsAttributePendingTimestampID = 57,

	ClusterThreadNetworkDiagnosticsAttributeDelayID = 58,

	ClusterThreadNetworkDiagnosticsAttributeSecurityPolicyID = 59,

	ClusterThreadNetworkDiagnosticsAttributeChannelPage0MaskID = 60,

	ClusterThreadNetworkDiagnosticsAttributeOperationalDatasetComponentsID = 61,

	ClusterThreadNetworkDiagnosticsAttributeActiveNetworkFaultsListID = 62,

	ClusterThreadNetworkDiagnosticsAttributeGeneratedCommandListID = 65528,

	ClusterThreadNetworkDiagnosticsAttributeAcceptedCommandListID = 65529,

	ClusterThreadNetworkDiagnosticsAttributeAttributeListID = 65531,

	ClusterThreadNetworkDiagnosticsAttributeFeatureMapID = 65532,

	ClusterThreadNetworkDiagnosticsAttributeClusterRevisionID = 65533,

	AttributeIDTypeClusterThreadNetworkDiagnosticsAttributeChannelID = 0,

	AttributeIDTypeClusterThreadNetworkDiagnosticsAttributeRoutingRoleID = 1,

	AttributeIDTypeClusterThreadNetworkDiagnosticsAttributeNetworkNameID = 2,

	AttributeIDTypeClusterThreadNetworkDiagnosticsAttributePanIdID = 3,

	AttributeIDTypeClusterThreadNetworkDiagnosticsAttributeExtendedPanIdID = 4,

	AttributeIDTypeClusterThreadNetworkDiagnosticsAttributeMeshLocalPrefixID = 5,

	AttributeIDTypeClusterThreadNetworkDiagnosticsAttributeOverrunCountID = 6,

	AttributeIDTypeClusterThreadNetworkDiagnosticsAttributeNeighborTableID = 7,

	AttributeIDTypeClusterThreadNetworkDiagnosticsAttributeRouteTableID = 8,

	AttributeIDTypeClusterThreadNetworkDiagnosticsAttributePartitionIdID = 9,

	AttributeIDTypeClusterThreadNetworkDiagnosticsAttributeWeightingID = 10,

	AttributeIDTypeClusterThreadNetworkDiagnosticsAttributeDataVersionID = 11,

	AttributeIDTypeClusterThreadNetworkDiagnosticsAttributeStableDataVersionID = 12,

	AttributeIDTypeClusterThreadNetworkDiagnosticsAttributeLeaderRouterIdID = 13,

	AttributeIDTypeClusterThreadNetworkDiagnosticsAttributeDetachedRoleCountID = 14,

	AttributeIDTypeClusterThreadNetworkDiagnosticsAttributeChildRoleCountID = 15,

	AttributeIDTypeClusterThreadNetworkDiagnosticsAttributeRouterRoleCountID = 16,

	AttributeIDTypeClusterThreadNetworkDiagnosticsAttributeLeaderRoleCountID = 17,

	AttributeIDTypeClusterThreadNetworkDiagnosticsAttributeAttachAttemptCountID = 18,

	AttributeIDTypeClusterThreadNetworkDiagnosticsAttributePartitionIdChangeCountID = 19,

	AttributeIDTypeClusterThreadNetworkDiagnosticsAttributeBetterPartitionAttachAttemptCountID = 20,

	AttributeIDTypeClusterThreadNetworkDiagnosticsAttributeParentChangeCountID = 21,

	AttributeIDTypeClusterThreadNetworkDiagnosticsAttributeTxTotalCountID = 22,

	AttributeIDTypeClusterThreadNetworkDiagnosticsAttributeTxUnicastCountID = 23,

	AttributeIDTypeClusterThreadNetworkDiagnosticsAttributeTxBroadcastCountID = 24,

	AttributeIDTypeClusterThreadNetworkDiagnosticsAttributeTxAckRequestedCountID = 25,

	AttributeIDTypeClusterThreadNetworkDiagnosticsAttributeTxAckedCountID = 26,

	AttributeIDTypeClusterThreadNetworkDiagnosticsAttributeTxNoAckRequestedCountID = 27,

	AttributeIDTypeClusterThreadNetworkDiagnosticsAttributeTxDataCountID = 28,

	AttributeIDTypeClusterThreadNetworkDiagnosticsAttributeTxDataPollCountID = 29,

	AttributeIDTypeClusterThreadNetworkDiagnosticsAttributeTxBeaconCountID = 30,

	AttributeIDTypeClusterThreadNetworkDiagnosticsAttributeTxBeaconRequestCountID = 31,

	AttributeIDTypeClusterThreadNetworkDiagnosticsAttributeTxOtherCountID = 32,

	AttributeIDTypeClusterThreadNetworkDiagnosticsAttributeTxRetryCountID = 33,

	AttributeIDTypeClusterThreadNetworkDiagnosticsAttributeTxDirectMaxRetryExpiryCountID = 34,

	AttributeIDTypeClusterThreadNetworkDiagnosticsAttributeTxIndirectMaxRetryExpiryCountID = 35,

	AttributeIDTypeClusterThreadNetworkDiagnosticsAttributeTxErrCcaCountID = 36,

	AttributeIDTypeClusterThreadNetworkDiagnosticsAttributeTxErrAbortCountID = 37,

	AttributeIDTypeClusterThreadNetworkDiagnosticsAttributeTxErrBusyChannelCountID = 38,

	AttributeIDTypeClusterThreadNetworkDiagnosticsAttributeRxTotalCountID = 39,

	AttributeIDTypeClusterThreadNetworkDiagnosticsAttributeRxUnicastCountID = 40,

	AttributeIDTypeClusterThreadNetworkDiagnosticsAttributeRxBroadcastCountID = 41,

	AttributeIDTypeClusterThreadNetworkDiagnosticsAttributeRxDataCountID = 42,

	AttributeIDTypeClusterThreadNetworkDiagnosticsAttributeRxDataPollCountID = 43,

	AttributeIDTypeClusterThreadNetworkDiagnosticsAttributeRxBeaconCountID = 44,

	AttributeIDTypeClusterThreadNetworkDiagnosticsAttributeRxBeaconRequestCountID = 45,

	AttributeIDTypeClusterThreadNetworkDiagnosticsAttributeRxOtherCountID = 46,

	AttributeIDTypeClusterThreadNetworkDiagnosticsAttributeRxAddressFilteredCountID = 47,

	AttributeIDTypeClusterThreadNetworkDiagnosticsAttributeRxDestAddrFilteredCountID = 48,

	AttributeIDTypeClusterThreadNetworkDiagnosticsAttributeRxDuplicatedCountID = 49,

	AttributeIDTypeClusterThreadNetworkDiagnosticsAttributeRxErrNoFrameCountID = 50,

	AttributeIDTypeClusterThreadNetworkDiagnosticsAttributeRxErrUnknownNeighborCountID = 51,

	AttributeIDTypeClusterThreadNetworkDiagnosticsAttributeRxErrInvalidSrcAddrCountID = 52,

	AttributeIDTypeClusterThreadNetworkDiagnosticsAttributeRxErrSecCountID = 53,

	AttributeIDTypeClusterThreadNetworkDiagnosticsAttributeRxErrFcsCountID = 54,

	AttributeIDTypeClusterThreadNetworkDiagnosticsAttributeRxErrOtherCountID = 55,

	AttributeIDTypeClusterThreadNetworkDiagnosticsAttributeActiveTimestampID = 56,

	AttributeIDTypeClusterThreadNetworkDiagnosticsAttributePendingTimestampID = 57,

	AttributeIDTypeClusterThreadNetworkDiagnosticsAttributeDelayID = 58,

	AttributeIDTypeClusterThreadNetworkDiagnosticsAttributeSecurityPolicyID = 59,

	AttributeIDTypeClusterThreadNetworkDiagnosticsAttributeChannelPage0MaskID = 60,

	AttributeIDTypeClusterThreadNetworkDiagnosticsAttributeOperationalDatasetComponentsID = 61,

	AttributeIDTypeClusterThreadNetworkDiagnosticsAttributeActiveNetworkFaultsListID = 62,

	AttributeIDTypeClusterThreadNetworkDiagnosticsAttributeGeneratedCommandListID = 65528,

	AttributeIDTypeClusterThreadNetworkDiagnosticsAttributeAcceptedCommandListID = 65529,

	AttributeIDTypeClusterThreadNetworkDiagnosticsAttributeEventListID = 65530,

	AttributeIDTypeClusterThreadNetworkDiagnosticsAttributeAttributeListID = 65531,

	AttributeIDTypeClusterThreadNetworkDiagnosticsAttributeFeatureMapID = 65532,

	AttributeIDTypeClusterThreadNetworkDiagnosticsAttributeClusterRevisionID = 65533,

	ClusterWiFiNetworkDiagnosticsAttributeBssidID = 0,

	ClusterWiFiNetworkDiagnosticsAttributeSecurityTypeID = 1,

	ClusterWiFiNetworkDiagnosticsAttributeWiFiVersionID = 2,

	ClusterWiFiNetworkDiagnosticsAttributeChannelNumberID = 3,

	ClusterWiFiNetworkDiagnosticsAttributeRssiID = 4,

	ClusterWiFiNetworkDiagnosticsAttributeBeaconLostCountID = 5,

	ClusterWiFiNetworkDiagnosticsAttributeBeaconRxCountID = 6,

	ClusterWiFiNetworkDiagnosticsAttributePacketMulticastRxCountID = 7,

	ClusterWiFiNetworkDiagnosticsAttributePacketMulticastTxCountID = 8,

	ClusterWiFiNetworkDiagnosticsAttributePacketUnicastRxCountID = 9,

	ClusterWiFiNetworkDiagnosticsAttributePacketUnicastTxCountID = 10,

	ClusterWiFiNetworkDiagnosticsAttributeCurrentMaxRateID = 11,

	ClusterWiFiNetworkDiagnosticsAttributeOverrunCountID = 12,

	ClusterWiFiNetworkDiagnosticsAttributeGeneratedCommandListID = 65528,

	ClusterWiFiNetworkDiagnosticsAttributeAcceptedCommandListID = 65529,

	ClusterWiFiNetworkDiagnosticsAttributeAttributeListID = 65531,

	ClusterWiFiNetworkDiagnosticsAttributeFeatureMapID = 65532,

	ClusterWiFiNetworkDiagnosticsAttributeClusterRevisionID = 65533,

	AttributeIDTypeClusterWiFiNetworkDiagnosticsAttributeBSSIDID = 0,

	AttributeIDTypeClusterWiFiNetworkDiagnosticsAttributeSecurityTypeID = 1,

	AttributeIDTypeClusterWiFiNetworkDiagnosticsAttributeWiFiVersionID = 2,

	AttributeIDTypeClusterWiFiNetworkDiagnosticsAttributeChannelNumberID = 3,

	AttributeIDTypeClusterWiFiNetworkDiagnosticsAttributeRSSIID = 4,

	AttributeIDTypeClusterWiFiNetworkDiagnosticsAttributeBeaconLostCountID = 5,

	AttributeIDTypeClusterWiFiNetworkDiagnosticsAttributeBeaconRxCountID = 6,

	AttributeIDTypeClusterWiFiNetworkDiagnosticsAttributePacketMulticastRxCountID = 7,

	AttributeIDTypeClusterWiFiNetworkDiagnosticsAttributePacketMulticastTxCountID = 8,

	AttributeIDTypeClusterWiFiNetworkDiagnosticsAttributePacketUnicastRxCountID = 9,

	AttributeIDTypeClusterWiFiNetworkDiagnosticsAttributePacketUnicastTxCountID = 10,

	AttributeIDTypeClusterWiFiNetworkDiagnosticsAttributeCurrentMaxRateID = 11,

	AttributeIDTypeClusterWiFiNetworkDiagnosticsAttributeOverrunCountID = 12,

	AttributeIDTypeClusterWiFiNetworkDiagnosticsAttributeGeneratedCommandListID = 65528,

	AttributeIDTypeClusterWiFiNetworkDiagnosticsAttributeAcceptedCommandListID = 65529,

	AttributeIDTypeClusterWiFiNetworkDiagnosticsAttributeEventListID = 65530,

	AttributeIDTypeClusterWiFiNetworkDiagnosticsAttributeAttributeListID = 65531,

	AttributeIDTypeClusterWiFiNetworkDiagnosticsAttributeFeatureMapID = 65532,

	AttributeIDTypeClusterWiFiNetworkDiagnosticsAttributeClusterRevisionID = 65533,

	ClusterEthernetNetworkDiagnosticsAttributePHYRateID = 0,

	ClusterEthernetNetworkDiagnosticsAttributeFullDuplexID = 1,

	ClusterEthernetNetworkDiagnosticsAttributePacketRxCountID = 2,

	ClusterEthernetNetworkDiagnosticsAttributePacketTxCountID = 3,

	ClusterEthernetNetworkDiagnosticsAttributeTxErrCountID = 4,

	ClusterEthernetNetworkDiagnosticsAttributeCollisionCountID = 5,

	ClusterEthernetNetworkDiagnosticsAttributeOverrunCountID = 6,

	ClusterEthernetNetworkDiagnosticsAttributeCarrierDetectID = 7,

	ClusterEthernetNetworkDiagnosticsAttributeTimeSinceResetID = 8,

	ClusterEthernetNetworkDiagnosticsAttributeGeneratedCommandListID = 65528,

	ClusterEthernetNetworkDiagnosticsAttributeAcceptedCommandListID = 65529,

	ClusterEthernetNetworkDiagnosticsAttributeAttributeListID = 65531,

	ClusterEthernetNetworkDiagnosticsAttributeFeatureMapID = 65532,

	ClusterEthernetNetworkDiagnosticsAttributeClusterRevisionID = 65533,

	AttributeIDTypeClusterEthernetNetworkDiagnosticsAttributePHYRateID = 0,

	AttributeIDTypeClusterEthernetNetworkDiagnosticsAttributeFullDuplexID = 1,

	AttributeIDTypeClusterEthernetNetworkDiagnosticsAttributePacketRxCountID = 2,

	AttributeIDTypeClusterEthernetNetworkDiagnosticsAttributePacketTxCountID = 3,

	AttributeIDTypeClusterEthernetNetworkDiagnosticsAttributeTxErrCountID = 4,

	AttributeIDTypeClusterEthernetNetworkDiagnosticsAttributeCollisionCountID = 5,

	AttributeIDTypeClusterEthernetNetworkDiagnosticsAttributeOverrunCountID = 6,

	AttributeIDTypeClusterEthernetNetworkDiagnosticsAttributeCarrierDetectID = 7,

	AttributeIDTypeClusterEthernetNetworkDiagnosticsAttributeTimeSinceResetID = 8,

	AttributeIDTypeClusterEthernetNetworkDiagnosticsAttributeGeneratedCommandListID = 65528,

	AttributeIDTypeClusterEthernetNetworkDiagnosticsAttributeAcceptedCommandListID = 65529,

	AttributeIDTypeClusterEthernetNetworkDiagnosticsAttributeEventListID = 65530,

	AttributeIDTypeClusterEthernetNetworkDiagnosticsAttributeAttributeListID = 65531,

	AttributeIDTypeClusterEthernetNetworkDiagnosticsAttributeFeatureMapID = 65532,

	AttributeIDTypeClusterEthernetNetworkDiagnosticsAttributeClusterRevisionID = 65533,

	ClusterTimeSynchronizationAttributeUTCTimeID = 0,

	ClusterTimeSynchronizationAttributeGranularityID = 1,

	ClusterTimeSynchronizationAttributeTimeSourceID = 2,

	ClusterTimeSynchronizationAttributeTrustedTimeNodeIdID = 3,

	ClusterTimeSynchronizationAttributeDefaultNtpID = 4,

	ClusterTimeSynchronizationAttributeTimeZoneID = 5,

	ClusterTimeSynchronizationAttributeDstOffsetID = 6,

	ClusterTimeSynchronizationAttributeLocalTimeID = 7,

	ClusterTimeSynchronizationAttributeTimeZoneDatabaseID = 8,

	ClusterTimeSynchronizationAttributeNtpServerPortID = 9,

	ClusterTimeSynchronizationAttributeGeneratedCommandListID = 65528,

	ClusterTimeSynchronizationAttributeAcceptedCommandListID = 65529,

	ClusterTimeSynchronizationAttributeAttributeListID = 65531,

	ClusterTimeSynchronizationAttributeFeatureMapID = 65532,

	ClusterTimeSynchronizationAttributeClusterRevisionID = 65533,

	AttributeIDTypeClusterTimeSynchronizationAttributeUTCTimeID = 0,

	AttributeIDTypeClusterTimeSynchronizationAttributeGranularityID = 1,

	AttributeIDTypeClusterTimeSynchronizationAttributeTimeSourceID = 2,

	AttributeIDTypeClusterTimeSynchronizationAttributeTrustedTimeSourceID = 3,

	AttributeIDTypeClusterTimeSynchronizationAttributeTrustedTimeNodeIdID = 3,

	AttributeIDTypeClusterTimeSynchronizationAttributeDefaultNTPID = 4,

	AttributeIDTypeClusterTimeSynchronizationAttributeDefaultNtpID = 4,

	AttributeIDTypeClusterTimeSynchronizationAttributeTimeZoneID = 5,

	AttributeIDTypeClusterTimeSynchronizationAttributeDSTOffsetID = 6,

	AttributeIDTypeClusterTimeSynchronizationAttributeDstOffsetID = 6,

	AttributeIDTypeClusterTimeSynchronizationAttributeLocalTimeID = 7,

	AttributeIDTypeClusterTimeSynchronizationAttributeTimeZoneDatabaseID = 8,

	AttributeIDTypeClusterTimeSynchronizationAttributeNTPServerAvailableID = 9,

	AttributeIDTypeClusterTimeSynchronizationAttributeNtpServerPortID = 9,

	AttributeIDTypeClusterTimeSynchronizationAttributeTimeZoneListMaxSizeID = 10,

	AttributeIDTypeClusterTimeSynchronizationAttributeDSTOffsetListMaxSizeID = 11,

	AttributeIDTypeClusterTimeSynchronizationAttributeSupportsDNSResolveID = 12,

	AttributeIDTypeClusterTimeSynchronizationAttributeGeneratedCommandListID = 65528,

	AttributeIDTypeClusterTimeSynchronizationAttributeAcceptedCommandListID = 65529,

	AttributeIDTypeClusterTimeSynchronizationAttributeEventListID = 65530,

	AttributeIDTypeClusterTimeSynchronizationAttributeAttributeListID = 65531,

	AttributeIDTypeClusterTimeSynchronizationAttributeFeatureMapID = 65532,

	AttributeIDTypeClusterTimeSynchronizationAttributeClusterRevisionID = 65533,

	ClusterBridgedDeviceBasicAttributeVendorNameID = 1,

	ClusterBridgedDeviceBasicAttributeVendorIDID = 2,

	ClusterBridgedDeviceBasicAttributeProductNameID = 3,

	ClusterBridgedDeviceBasicAttributeNodeLabelID = 5,

	ClusterBridgedDeviceBasicAttributeHardwareVersionID = 7,

	ClusterBridgedDeviceBasicAttributeHardwareVersionStringID = 8,

	ClusterBridgedDeviceBasicAttributeSoftwareVersionID = 9,

	ClusterBridgedDeviceBasicAttributeSoftwareVersionStringID = 10,

	ClusterBridgedDeviceBasicAttributeManufacturingDateID = 11,

	ClusterBridgedDeviceBasicAttributePartNumberID = 12,

	ClusterBridgedDeviceBasicAttributeProductURLID = 13,

	ClusterBridgedDeviceBasicAttributeProductLabelID = 14,

	ClusterBridgedDeviceBasicAttributeSerialNumberID = 15,

	ClusterBridgedDeviceBasicAttributeReachableID = 17,

	ClusterBridgedDeviceBasicAttributeUniqueIDID = 18,

	ClusterBridgedDeviceBasicAttributeGeneratedCommandListID = 65528,

	ClusterBridgedDeviceBasicAttributeAcceptedCommandListID = 65529,

	ClusterBridgedDeviceBasicAttributeAttributeListID = 65531,

	ClusterBridgedDeviceBasicAttributeFeatureMapID = 65532,

	ClusterBridgedDeviceBasicAttributeClusterRevisionID = 65533,

	AttributeIDTypeClusterBridgedDeviceBasicInformationAttributeVendorNameID = 1,

	AttributeIDTypeClusterBridgedDeviceBasicInformationAttributeVendorIDID = 2,

	AttributeIDTypeClusterBridgedDeviceBasicInformationAttributeProductNameID = 3,

	AttributeIDTypeClusterBridgedDeviceBasicInformationAttributeNodeLabelID = 5,

	AttributeIDTypeClusterBridgedDeviceBasicInformationAttributeHardwareVersionID = 7,

	AttributeIDTypeClusterBridgedDeviceBasicInformationAttributeHardwareVersionStringID = 8,

	AttributeIDTypeClusterBridgedDeviceBasicInformationAttributeSoftwareVersionID = 9,

	AttributeIDTypeClusterBridgedDeviceBasicInformationAttributeSoftwareVersionStringID = 10,

	AttributeIDTypeClusterBridgedDeviceBasicInformationAttributeManufacturingDateID = 11,

	AttributeIDTypeClusterBridgedDeviceBasicInformationAttributePartNumberID = 12,

	AttributeIDTypeClusterBridgedDeviceBasicInformationAttributeProductURLID = 13,

	AttributeIDTypeClusterBridgedDeviceBasicInformationAttributeProductLabelID = 14,

	AttributeIDTypeClusterBridgedDeviceBasicInformationAttributeSerialNumberID = 15,

	AttributeIDTypeClusterBridgedDeviceBasicInformationAttributeReachableID = 17,

	AttributeIDTypeClusterBridgedDeviceBasicInformationAttributeUniqueIDID = 18,

	AttributeIDTypeClusterBridgedDeviceBasicInformationAttributeProductAppearanceID = 20,

	AttributeIDTypeClusterBridgedDeviceBasicInformationAttributeGeneratedCommandListID = 65528,

	AttributeIDTypeClusterBridgedDeviceBasicInformationAttributeAcceptedCommandListID = 65529,

	AttributeIDTypeClusterBridgedDeviceBasicInformationAttributeEventListID = 65530,

	AttributeIDTypeClusterBridgedDeviceBasicInformationAttributeAttributeListID = 65531,

	AttributeIDTypeClusterBridgedDeviceBasicInformationAttributeFeatureMapID = 65532,

	AttributeIDTypeClusterBridgedDeviceBasicInformationAttributeClusterRevisionID = 65533,

	ClusterSwitchAttributeNumberOfPositionsID = 0,

	ClusterSwitchAttributeCurrentPositionID = 1,

	ClusterSwitchAttributeMultiPressMaxID = 2,

	ClusterSwitchAttributeGeneratedCommandListID = 65528,

	ClusterSwitchAttributeAcceptedCommandListID = 65529,

	ClusterSwitchAttributeAttributeListID = 65531,

	ClusterSwitchAttributeFeatureMapID = 65532,

	ClusterSwitchAttributeClusterRevisionID = 65533,

	AttributeIDTypeClusterSwitchAttributeNumberOfPositionsID = 0,

	AttributeIDTypeClusterSwitchAttributeCurrentPositionID = 1,

	AttributeIDTypeClusterSwitchAttributeMultiPressMaxID = 2,

	AttributeIDTypeClusterSwitchAttributeGeneratedCommandListID = 65528,

	AttributeIDTypeClusterSwitchAttributeAcceptedCommandListID = 65529,

	AttributeIDTypeClusterSwitchAttributeEventListID = 65530,

	AttributeIDTypeClusterSwitchAttributeAttributeListID = 65531,

	AttributeIDTypeClusterSwitchAttributeFeatureMapID = 65532,

	AttributeIDTypeClusterSwitchAttributeClusterRevisionID = 65533,

	ClusterAdministratorCommissioningAttributeWindowStatusID = 0,

	ClusterAdministratorCommissioningAttributeAdminFabricIndexID = 1,

	ClusterAdministratorCommissioningAttributeAdminVendorIdID = 2,

	ClusterAdministratorCommissioningAttributeGeneratedCommandListID = 65528,

	ClusterAdministratorCommissioningAttributeAcceptedCommandListID = 65529,

	ClusterAdministratorCommissioningAttributeAttributeListID = 65531,

	ClusterAdministratorCommissioningAttributeFeatureMapID = 65532,

	ClusterAdministratorCommissioningAttributeClusterRevisionID = 65533,

	AttributeIDTypeClusterAdministratorCommissioningAttributeWindowStatusID = 0,

	AttributeIDTypeClusterAdministratorCommissioningAttributeAdminFabricIndexID = 1,

	AttributeIDTypeClusterAdministratorCommissioningAttributeAdminVendorIdID = 2,

	AttributeIDTypeClusterAdministratorCommissioningAttributeGeneratedCommandListID = 65528,

	AttributeIDTypeClusterAdministratorCommissioningAttributeAcceptedCommandListID = 65529,

	AttributeIDTypeClusterAdministratorCommissioningAttributeEventListID = 65530,

	AttributeIDTypeClusterAdministratorCommissioningAttributeAttributeListID = 65531,

	AttributeIDTypeClusterAdministratorCommissioningAttributeFeatureMapID = 65532,

	AttributeIDTypeClusterAdministratorCommissioningAttributeClusterRevisionID = 65533,

	ClusterOperationalCredentialsAttributeNOCsID = 0,

	ClusterOperationalCredentialsAttributeFabricsID = 1,

	ClusterOperationalCredentialsAttributeSupportedFabricsID = 2,

	ClusterOperationalCredentialsAttributeCommissionedFabricsID = 3,

	ClusterOperationalCredentialsAttributeTrustedRootCertificatesID = 4,

	ClusterOperationalCredentialsAttributeCurrentFabricIndexID = 5,

	ClusterOperationalCredentialsAttributeGeneratedCommandListID = 65528,

	ClusterOperationalCredentialsAttributeAcceptedCommandListID = 65529,

	ClusterOperationalCredentialsAttributeAttributeListID = 65531,

	ClusterOperationalCredentialsAttributeFeatureMapID = 65532,

	ClusterOperationalCredentialsAttributeClusterRevisionID = 65533,

	AttributeIDTypeClusterOperationalCredentialsAttributeNOCsID = 0,

	AttributeIDTypeClusterOperationalCredentialsAttributeFabricsID = 1,

	AttributeIDTypeClusterOperationalCredentialsAttributeSupportedFabricsID = 2,

	AttributeIDTypeClusterOperationalCredentialsAttributeCommissionedFabricsID = 3,

	AttributeIDTypeClusterOperationalCredentialsAttributeTrustedRootCertificatesID = 4,

	AttributeIDTypeClusterOperationalCredentialsAttributeCurrentFabricIndexID = 5,

	AttributeIDTypeClusterOperationalCredentialsAttributeGeneratedCommandListID = 65528,

	AttributeIDTypeClusterOperationalCredentialsAttributeAcceptedCommandListID = 65529,

	AttributeIDTypeClusterOperationalCredentialsAttributeEventListID = 65530,

	AttributeIDTypeClusterOperationalCredentialsAttributeAttributeListID = 65531,

	AttributeIDTypeClusterOperationalCredentialsAttributeFeatureMapID = 65532,

	AttributeIDTypeClusterOperationalCredentialsAttributeClusterRevisionID = 65533,

	ClusterGroupKeyManagementAttributeGroupKeyMapID = 0,

	ClusterGroupKeyManagementAttributeGroupTableID = 1,

	ClusterGroupKeyManagementAttributeMaxGroupsPerFabricID = 2,

	ClusterGroupKeyManagementAttributeMaxGroupKeysPerFabricID = 3,

	ClusterGroupKeyManagementAttributeGeneratedCommandListID = 65528,

	ClusterGroupKeyManagementAttributeAcceptedCommandListID = 65529,

	ClusterGroupKeyManagementAttributeAttributeListID = 65531,

	ClusterGroupKeyManagementAttributeFeatureMapID = 65532,

	ClusterGroupKeyManagementAttributeClusterRevisionID = 65533,

	AttributeIDTypeClusterGroupKeyManagementAttributeGroupKeyMapID = 0,

	AttributeIDTypeClusterGroupKeyManagementAttributeGroupTableID = 1,

	AttributeIDTypeClusterGroupKeyManagementAttributeMaxGroupsPerFabricID = 2,

	AttributeIDTypeClusterGroupKeyManagementAttributeMaxGroupKeysPerFabricID = 3,

	AttributeIDTypeClusterGroupKeyManagementAttributeGeneratedCommandListID = 65528,

	AttributeIDTypeClusterGroupKeyManagementAttributeAcceptedCommandListID = 65529,

	AttributeIDTypeClusterGroupKeyManagementAttributeEventListID = 65530,

	AttributeIDTypeClusterGroupKeyManagementAttributeAttributeListID = 65531,

	AttributeIDTypeClusterGroupKeyManagementAttributeFeatureMapID = 65532,

	AttributeIDTypeClusterGroupKeyManagementAttributeClusterRevisionID = 65533,

	ClusterFixedLabelAttributeLabelListID = 0,

	ClusterFixedLabelAttributeGeneratedCommandListID = 65528,

	ClusterFixedLabelAttributeAcceptedCommandListID = 65529,

	ClusterFixedLabelAttributeAttributeListID = 65531,

	ClusterFixedLabelAttributeFeatureMapID = 65532,

	ClusterFixedLabelAttributeClusterRevisionID = 65533,

	AttributeIDTypeClusterFixedLabelAttributeLabelListID = 0,

	AttributeIDTypeClusterFixedLabelAttributeGeneratedCommandListID = 65528,

	AttributeIDTypeClusterFixedLabelAttributeAcceptedCommandListID = 65529,

	AttributeIDTypeClusterFixedLabelAttributeEventListID = 65530,

	AttributeIDTypeClusterFixedLabelAttributeAttributeListID = 65531,

	AttributeIDTypeClusterFixedLabelAttributeFeatureMapID = 65532,

	AttributeIDTypeClusterFixedLabelAttributeClusterRevisionID = 65533,

	ClusterUserLabelAttributeLabelListID = 0,

	ClusterUserLabelAttributeGeneratedCommandListID = 65528,

	ClusterUserLabelAttributeAcceptedCommandListID = 65529,

	ClusterUserLabelAttributeAttributeListID = 65531,

	ClusterUserLabelAttributeFeatureMapID = 65532,

	ClusterUserLabelAttributeClusterRevisionID = 65533,

	AttributeIDTypeClusterUserLabelAttributeLabelListID = 0,

	AttributeIDTypeClusterUserLabelAttributeGeneratedCommandListID = 65528,

	AttributeIDTypeClusterUserLabelAttributeAcceptedCommandListID = 65529,

	AttributeIDTypeClusterUserLabelAttributeEventListID = 65530,

	AttributeIDTypeClusterUserLabelAttributeAttributeListID = 65531,

	AttributeIDTypeClusterUserLabelAttributeFeatureMapID = 65532,

	AttributeIDTypeClusterUserLabelAttributeClusterRevisionID = 65533,

	ClusterBooleanStateAttributeStateValueID = 0,

	ClusterBooleanStateAttributeGeneratedCommandListID = 65528,

	ClusterBooleanStateAttributeAcceptedCommandListID = 65529,

	ClusterBooleanStateAttributeAttributeListID = 65531,

	ClusterBooleanStateAttributeFeatureMapID = 65532,

	ClusterBooleanStateAttributeClusterRevisionID = 65533,

	AttributeIDTypeClusterBooleanStateAttributeStateValueID = 0,

	AttributeIDTypeClusterBooleanStateAttributeGeneratedCommandListID = 65528,

	AttributeIDTypeClusterBooleanStateAttributeAcceptedCommandListID = 65529,

	AttributeIDTypeClusterBooleanStateAttributeEventListID = 65530,

	AttributeIDTypeClusterBooleanStateAttributeAttributeListID = 65531,

	AttributeIDTypeClusterBooleanStateAttributeFeatureMapID = 65532,

	AttributeIDTypeClusterBooleanStateAttributeClusterRevisionID = 65533,

	AttributeIDTypeClusterICDManagementAttributeIdleModeDurationID = 0,

	AttributeIDTypeClusterICDManagementAttributeActiveModeDurationID = 1,

	AttributeIDTypeClusterICDManagementAttributeActiveModeThresholdID = 2,

	AttributeIDTypeClusterICDManagementAttributeRegisteredClientsID = 3,

	AttributeIDTypeClusterICDManagementAttributeICDCounterID = 4,

	AttributeIDTypeClusterICDManagementAttributeClientsSupportedPerFabricID = 5,

	AttributeIDTypeClusterICDManagementAttributeUserActiveModeTriggerHintID = 6,

	AttributeIDTypeClusterICDManagementAttributeUserActiveModeTriggerInstructionID = 7,

	AttributeIDTypeClusterICDManagementAttributeGeneratedCommandListID = 65528,

	AttributeIDTypeClusterICDManagementAttributeAcceptedCommandListID = 65529,

	AttributeIDTypeClusterICDManagementAttributeEventListID = 65530,

	AttributeIDTypeClusterICDManagementAttributeAttributeListID = 65531,

	AttributeIDTypeClusterICDManagementAttributeFeatureMapID = 65532,

	AttributeIDTypeClusterICDManagementAttributeClusterRevisionID = 65533,

	AttributeIDTypeClusterTimerAttributeSetTimeID = 0,

	AttributeIDTypeClusterTimerAttributeTimeRemainingID = 1,

	AttributeIDTypeClusterTimerAttributeTimerStateID = 2,

	AttributeIDTypeClusterTimerAttributeGeneratedCommandListID = 65528,

	AttributeIDTypeClusterTimerAttributeAcceptedCommandListID = 65529,

	AttributeIDTypeClusterTimerAttributeEventListID = 65530,

	AttributeIDTypeClusterTimerAttributeAttributeListID = 65531,

	AttributeIDTypeClusterTimerAttributeFeatureMapID = 65532,

	AttributeIDTypeClusterTimerAttributeClusterRevisionID = 65533,

	AttributeIDTypeClusterOvenCavityOperationalStateAttributePhaseListID = 0,

	AttributeIDTypeClusterOvenCavityOperationalStateAttributeCurrentPhaseID = 1,

	AttributeIDTypeClusterOvenCavityOperationalStateAttributeCountdownTimeID = 2,

	AttributeIDTypeClusterOvenCavityOperationalStateAttributeOperationalStateListID = 3,

	AttributeIDTypeClusterOvenCavityOperationalStateAttributeOperationalStateID = 4,

	AttributeIDTypeClusterOvenCavityOperationalStateAttributeOperationalErrorID = 5,

	AttributeIDTypeClusterOvenCavityOperationalStateAttributeGeneratedCommandListID = 65528,

	AttributeIDTypeClusterOvenCavityOperationalStateAttributeAcceptedCommandListID = 65529,

	AttributeIDTypeClusterOvenCavityOperationalStateAttributeEventListID = 65530,

	AttributeIDTypeClusterOvenCavityOperationalStateAttributeAttributeListID = 65531,

	AttributeIDTypeClusterOvenCavityOperationalStateAttributeFeatureMapID = 65532,

	AttributeIDTypeClusterOvenCavityOperationalStateAttributeClusterRevisionID = 65533,

	AttributeIDTypeClusterOvenModeAttributeSupportedModesID = 0,

	AttributeIDTypeClusterOvenModeAttributeCurrentModeID = 1,

	AttributeIDTypeClusterOvenModeAttributeStartUpModeID = 2,

	AttributeIDTypeClusterOvenModeAttributeOnModeID = 3,

	AttributeIDTypeClusterOvenModeAttributeGeneratedCommandListID = 65528,

	AttributeIDTypeClusterOvenModeAttributeAcceptedCommandListID = 65529,

	AttributeIDTypeClusterOvenModeAttributeEventListID = 65530,

	AttributeIDTypeClusterOvenModeAttributeAttributeListID = 65531,

	AttributeIDTypeClusterOvenModeAttributeFeatureMapID = 65532,

	AttributeIDTypeClusterOvenModeAttributeClusterRevisionID = 65533,

	AttributeIDTypeClusterLaundryDryerControlsAttributeSupportedDrynessLevelsID = 0,

	AttributeIDTypeClusterLaundryDryerControlsAttributeSelectedDrynessLevelID = 1,

	AttributeIDTypeClusterLaundryDryerControlsAttributeGeneratedCommandListID = 65528,

	AttributeIDTypeClusterLaundryDryerControlsAttributeAcceptedCommandListID = 65529,

	AttributeIDTypeClusterLaundryDryerControlsAttributeEventListID = 65530,

	AttributeIDTypeClusterLaundryDryerControlsAttributeAttributeListID = 65531,

	AttributeIDTypeClusterLaundryDryerControlsAttributeFeatureMapID = 65532,

	AttributeIDTypeClusterLaundryDryerControlsAttributeClusterRevisionID = 65533,

	ClusterModeSelectAttributeDescriptionID = 0,

	ClusterModeSelectAttributeStandardNamespaceID = 1,

	ClusterModeSelectAttributeSupportedModesID = 2,

	ClusterModeSelectAttributeCurrentModeID = 3,

	ClusterModeSelectAttributeStartUpModeID = 4,

	ClusterModeSelectAttributeOnModeID = 5,

	ClusterModeSelectAttributeGeneratedCommandListID = 65528,

	ClusterModeSelectAttributeAcceptedCommandListID = 65529,

	ClusterModeSelectAttributeAttributeListID = 65531,

	ClusterModeSelectAttributeFeatureMapID = 65532,

	ClusterModeSelectAttributeClusterRevisionID = 65533,

	AttributeIDTypeClusterModeSelectAttributeDescriptionID = 0,

	AttributeIDTypeClusterModeSelectAttributeStandardNamespaceID = 1,

	AttributeIDTypeClusterModeSelectAttributeSupportedModesID = 2,

	AttributeIDTypeClusterModeSelectAttributeCurrentModeID = 3,

	AttributeIDTypeClusterModeSelectAttributeStartUpModeID = 4,

	AttributeIDTypeClusterModeSelectAttributeOnModeID = 5,

	AttributeIDTypeClusterModeSelectAttributeGeneratedCommandListID = 65528,

	AttributeIDTypeClusterModeSelectAttributeAcceptedCommandListID = 65529,

	AttributeIDTypeClusterModeSelectAttributeEventListID = 65530,

	AttributeIDTypeClusterModeSelectAttributeAttributeListID = 65531,

	AttributeIDTypeClusterModeSelectAttributeFeatureMapID = 65532,

	AttributeIDTypeClusterModeSelectAttributeClusterRevisionID = 65533,

	AttributeIDTypeClusterLaundryWasherModeAttributeSupportedModesID = 0,

	AttributeIDTypeClusterLaundryWasherModeAttributeCurrentModeID = 1,

	AttributeIDTypeClusterLaundryWasherModeAttributeStartUpModeID = 2,

	AttributeIDTypeClusterLaundryWasherModeAttributeOnModeID = 3,

	AttributeIDTypeClusterLaundryWasherModeAttributeGeneratedCommandListID = 65528,

	AttributeIDTypeClusterLaundryWasherModeAttributeAcceptedCommandListID = 65529,

	AttributeIDTypeClusterLaundryWasherModeAttributeEventListID = 65530,

	AttributeIDTypeClusterLaundryWasherModeAttributeAttributeListID = 65531,

	AttributeIDTypeClusterLaundryWasherModeAttributeFeatureMapID = 65532,

	AttributeIDTypeClusterLaundryWasherModeAttributeClusterRevisionID = 65533,

	AttributeIDTypeClusterRefrigeratorAndTemperatureControlledCabinetModeAttributeSupportedModesID = 0,

	AttributeIDTypeClusterRefrigeratorAndTemperatureControlledCabinetModeAttributeCurrentModeID = 1,

	AttributeIDTypeClusterRefrigeratorAndTemperatureControlledCabinetModeAttributeStartUpModeID = 2,

	AttributeIDTypeClusterRefrigeratorAndTemperatureControlledCabinetModeAttributeOnModeID = 3,

	AttributeIDTypeClusterRefrigeratorAndTemperatureControlledCabinetModeAttributeGeneratedCommandListID = 65528,

	AttributeIDTypeClusterRefrigeratorAndTemperatureControlledCabinetModeAttributeAcceptedCommandListID = 65529,

	AttributeIDTypeClusterRefrigeratorAndTemperatureControlledCabinetModeAttributeEventListID = 65530,

	AttributeIDTypeClusterRefrigeratorAndTemperatureControlledCabinetModeAttributeAttributeListID = 65531,

	AttributeIDTypeClusterRefrigeratorAndTemperatureControlledCabinetModeAttributeFeatureMapID = 65532,

	AttributeIDTypeClusterRefrigeratorAndTemperatureControlledCabinetModeAttributeClusterRevisionID = 65533,

	AttributeIDTypeClusterLaundryWasherControlsAttributeSpinSpeedsID = 0,

	AttributeIDTypeClusterLaundryWasherControlsAttributeSpinSpeedCurrentID = 1,

	AttributeIDTypeClusterLaundryWasherControlsAttributeNumberOfRinsesID = 2,

	AttributeIDTypeClusterLaundryWasherControlsAttributeSupportedRinsesID = 3,

	AttributeIDTypeClusterLaundryWasherControlsAttributeGeneratedCommandListID = 65528,

	AttributeIDTypeClusterLaundryWasherControlsAttributeAcceptedCommandListID = 65529,

	AttributeIDTypeClusterLaundryWasherControlsAttributeEventListID = 65530,

	AttributeIDTypeClusterLaundryWasherControlsAttributeAttributeListID = 65531,

	AttributeIDTypeClusterLaundryWasherControlsAttributeFeatureMapID = 65532,

	AttributeIDTypeClusterLaundryWasherControlsAttributeClusterRevisionID = 65533,

	AttributeIDTypeClusterRVCRunModeAttributeSupportedModesID = 0,

	AttributeIDTypeClusterRVCRunModeAttributeCurrentModeID = 1,

	AttributeIDTypeClusterRVCRunModeAttributeOnModeID = 3,

	AttributeIDTypeClusterRVCRunModeAttributeGeneratedCommandListID = 65528,

	AttributeIDTypeClusterRVCRunModeAttributeAcceptedCommandListID = 65529,

	AttributeIDTypeClusterRVCRunModeAttributeEventListID = 65530,

	AttributeIDTypeClusterRVCRunModeAttributeAttributeListID = 65531,

	AttributeIDTypeClusterRVCRunModeAttributeFeatureMapID = 65532,

	AttributeIDTypeClusterRVCRunModeAttributeClusterRevisionID = 65533,

	AttributeIDTypeClusterRVCCleanModeAttributeSupportedModesID = 0,

	AttributeIDTypeClusterRVCCleanModeAttributeCurrentModeID = 1,

	AttributeIDTypeClusterRVCCleanModeAttributeOnModeID = 3,

	AttributeIDTypeClusterRVCCleanModeAttributeGeneratedCommandListID = 65528,

	AttributeIDTypeClusterRVCCleanModeAttributeAcceptedCommandListID = 65529,

	AttributeIDTypeClusterRVCCleanModeAttributeEventListID = 65530,

	AttributeIDTypeClusterRVCCleanModeAttributeAttributeListID = 65531,

	AttributeIDTypeClusterRVCCleanModeAttributeFeatureMapID = 65532,

	AttributeIDTypeClusterRVCCleanModeAttributeClusterRevisionID = 65533,

	AttributeIDTypeClusterTemperatureControlAttributeTemperatureSetpointID = 0,

	AttributeIDTypeClusterTemperatureControlAttributeMinTemperatureID = 1,

	AttributeIDTypeClusterTemperatureControlAttributeMaxTemperatureID = 2,

	AttributeIDTypeClusterTemperatureControlAttributeStepID = 3,

	AttributeIDTypeClusterTemperatureControlAttributeSelectedTemperatureLevelID = 4,

	AttributeIDTypeClusterTemperatureControlAttributeSupportedTemperatureLevelsID = 5,

	AttributeIDTypeClusterTemperatureControlAttributeGeneratedCommandListID = 65528,

	AttributeIDTypeClusterTemperatureControlAttributeAcceptedCommandListID = 65529,

	AttributeIDTypeClusterTemperatureControlAttributeEventListID = 65530,

	AttributeIDTypeClusterTemperatureControlAttributeAttributeListID = 65531,

	AttributeIDTypeClusterTemperatureControlAttributeFeatureMapID = 65532,

	AttributeIDTypeClusterTemperatureControlAttributeClusterRevisionID = 65533,

	AttributeIDTypeClusterRefrigeratorAlarmAttributeMaskID = 0,

	AttributeIDTypeClusterRefrigeratorAlarmAttributeStateID = 2,

	AttributeIDTypeClusterRefrigeratorAlarmAttributeSupportedID = 3,

	AttributeIDTypeClusterRefrigeratorAlarmAttributeGeneratedCommandListID = 65528,

	AttributeIDTypeClusterRefrigeratorAlarmAttributeAcceptedCommandListID = 65529,

	AttributeIDTypeClusterRefrigeratorAlarmAttributeEventListID = 65530,

	AttributeIDTypeClusterRefrigeratorAlarmAttributeAttributeListID = 65531,

	AttributeIDTypeClusterRefrigeratorAlarmAttributeFeatureMapID = 65532,

	AttributeIDTypeClusterRefrigeratorAlarmAttributeClusterRevisionID = 65533,

	AttributeIDTypeClusterDishwasherModeAttributeSupportedModesID = 0,

	AttributeIDTypeClusterDishwasherModeAttributeCurrentModeID = 1,

	AttributeIDTypeClusterDishwasherModeAttributeStartUpModeID = 2,

	AttributeIDTypeClusterDishwasherModeAttributeOnModeID = 3,

	AttributeIDTypeClusterDishwasherModeAttributeGeneratedCommandListID = 65528,

	AttributeIDTypeClusterDishwasherModeAttributeAcceptedCommandListID = 65529,

	AttributeIDTypeClusterDishwasherModeAttributeEventListID = 65530,

	AttributeIDTypeClusterDishwasherModeAttributeAttributeListID = 65531,

	AttributeIDTypeClusterDishwasherModeAttributeFeatureMapID = 65532,

	AttributeIDTypeClusterDishwasherModeAttributeClusterRevisionID = 65533,

	AttributeIDTypeClusterAirQualityAttributeAirQualityID = 0,

	AttributeIDTypeClusterAirQualityAttributeGeneratedCommandListID = 65528,

	AttributeIDTypeClusterAirQualityAttributeAcceptedCommandListID = 65529,

	AttributeIDTypeClusterAirQualityAttributeEventListID = 65530,

	AttributeIDTypeClusterAirQualityAttributeAttributeListID = 65531,

	AttributeIDTypeClusterAirQualityAttributeFeatureMapID = 65532,

	AttributeIDTypeClusterAirQualityAttributeClusterRevisionID = 65533,

	AttributeIDTypeClusterSmokeCOAlarmAttributeExpressedStateID = 0,

	AttributeIDTypeClusterSmokeCOAlarmAttributeSmokeStateID = 1,

	AttributeIDTypeClusterSmokeCOAlarmAttributeCOStateID = 2,

	AttributeIDTypeClusterSmokeCOAlarmAttributeBatteryAlertID = 3,

	AttributeIDTypeClusterSmokeCOAlarmAttributeDeviceMutedID = 4,

	AttributeIDTypeClusterSmokeCOAlarmAttributeTestInProgressID = 5,

	AttributeIDTypeClusterSmokeCOAlarmAttributeHardwareFaultAlertID = 6,

	AttributeIDTypeClusterSmokeCOAlarmAttributeEndOfServiceAlertID = 7,

	AttributeIDTypeClusterSmokeCOAlarmAttributeInterconnectSmokeAlarmID = 8,

	AttributeIDTypeClusterSmokeCOAlarmAttributeInterconnectCOAlarmID = 9,

	AttributeIDTypeClusterSmokeCOAlarmAttributeContaminationStateID = 10,

	AttributeIDTypeClusterSmokeCOAlarmAttributeSmokeSensitivityLevelID = 11,

	AttributeIDTypeClusterSmokeCOAlarmAttributeExpiryDateID = 12,

	AttributeIDTypeClusterSmokeCOAlarmAttributeGeneratedCommandListID = 65528,

	AttributeIDTypeClusterSmokeCOAlarmAttributeAcceptedCommandListID = 65529,

	AttributeIDTypeClusterSmokeCOAlarmAttributeEventListID = 65530,

	AttributeIDTypeClusterSmokeCOAlarmAttributeAttributeListID = 65531,

	AttributeIDTypeClusterSmokeCOAlarmAttributeFeatureMapID = 65532,

	AttributeIDTypeClusterSmokeCOAlarmAttributeClusterRevisionID = 65533,

	AttributeIDTypeClusterDishwasherAlarmAttributeMaskID = 0,

	AttributeIDTypeClusterDishwasherAlarmAttributeLatchID = 1,

	AttributeIDTypeClusterDishwasherAlarmAttributeStateID = 2,

	AttributeIDTypeClusterDishwasherAlarmAttributeSupportedID = 3,

	AttributeIDTypeClusterDishwasherAlarmAttributeGeneratedCommandListID = 65528,

	AttributeIDTypeClusterDishwasherAlarmAttributeAcceptedCommandListID = 65529,

	AttributeIDTypeClusterDishwasherAlarmAttributeEventListID = 65530,

	AttributeIDTypeClusterDishwasherAlarmAttributeAttributeListID = 65531,

	AttributeIDTypeClusterDishwasherAlarmAttributeFeatureMapID = 65532,

	AttributeIDTypeClusterDishwasherAlarmAttributeClusterRevisionID = 65533,

	AttributeIDTypeClusterMicrowaveOvenModeAttributeSupportedModesID = 0,

	AttributeIDTypeClusterMicrowaveOvenModeAttributeCurrentModeID = 1,

	AttributeIDTypeClusterMicrowaveOvenModeAttributeGeneratedCommandListID = 65528,

	AttributeIDTypeClusterMicrowaveOvenModeAttributeAcceptedCommandListID = 65529,

	AttributeIDTypeClusterMicrowaveOvenModeAttributeEventListID = 65530,

	AttributeIDTypeClusterMicrowaveOvenModeAttributeAttributeListID = 65531,

	AttributeIDTypeClusterMicrowaveOvenModeAttributeFeatureMapID = 65532,

	AttributeIDTypeClusterMicrowaveOvenModeAttributeClusterRevisionID = 65533,

	AttributeIDTypeClusterMicrowaveOvenControlAttributeCookTimeID = 1,

	AttributeIDTypeClusterMicrowaveOvenControlAttributePowerSettingID = 2,

	AttributeIDTypeClusterMicrowaveOvenControlAttributeMinPowerID = 3,

	AttributeIDTypeClusterMicrowaveOvenControlAttributeMaxPowerID = 4,

	AttributeIDTypeClusterMicrowaveOvenControlAttributePowerStepID = 5,

	AttributeIDTypeClusterMicrowaveOvenControlAttributeGeneratedCommandListID = 65528,

	AttributeIDTypeClusterMicrowaveOvenControlAttributeAcceptedCommandListID = 65529,

	AttributeIDTypeClusterMicrowaveOvenControlAttributeEventListID = 65530,

	AttributeIDTypeClusterMicrowaveOvenControlAttributeAttributeListID = 65531,

	AttributeIDTypeClusterMicrowaveOvenControlAttributeFeatureMapID = 65532,

	AttributeIDTypeClusterMicrowaveOvenControlAttributeClusterRevisionID = 65533,

	AttributeIDTypeClusterOperationalStateAttributePhaseListID = 0,

	AttributeIDTypeClusterOperationalStateAttributeCurrentPhaseID = 1,

	AttributeIDTypeClusterOperationalStateAttributeCountdownTimeID = 2,

	AttributeIDTypeClusterOperationalStateAttributeOperationalStateListID = 3,

	AttributeIDTypeClusterOperationalStateAttributeOperationalStateID = 4,

	AttributeIDTypeClusterOperationalStateAttributeOperationalErrorID = 5,

	AttributeIDTypeClusterOperationalStateAttributeGeneratedCommandListID = 65528,

	AttributeIDTypeClusterOperationalStateAttributeAcceptedCommandListID = 65529,

	AttributeIDTypeClusterOperationalStateAttributeEventListID = 65530,

	AttributeIDTypeClusterOperationalStateAttributeAttributeListID = 65531,

	AttributeIDTypeClusterOperationalStateAttributeFeatureMapID = 65532,

	AttributeIDTypeClusterOperationalStateAttributeClusterRevisionID = 65533,

	AttributeIDTypeClusterRVCOperationalStateAttributePhaseListID = 0,

	AttributeIDTypeClusterRVCOperationalStateAttributeCurrentPhaseID = 1,

	AttributeIDTypeClusterRVCOperationalStateAttributeCountdownTimeID = 2,

	AttributeIDTypeClusterRVCOperationalStateAttributeOperationalStateListID = 3,

	AttributeIDTypeClusterRVCOperationalStateAttributeOperationalStateID = 4,

	AttributeIDTypeClusterRVCOperationalStateAttributeOperationalErrorID = 5,

	AttributeIDTypeClusterRVCOperationalStateAttributeGeneratedCommandListID = 65528,

	AttributeIDTypeClusterRVCOperationalStateAttributeAcceptedCommandListID = 65529,

	AttributeIDTypeClusterRVCOperationalStateAttributeEventListID = 65530,

	AttributeIDTypeClusterRVCOperationalStateAttributeAttributeListID = 65531,

	AttributeIDTypeClusterRVCOperationalStateAttributeFeatureMapID = 65532,

	AttributeIDTypeClusterRVCOperationalStateAttributeClusterRevisionID = 65533,

	AttributeIDTypeClusterHEPAFilterMonitoringAttributeConditionID = 0,

	AttributeIDTypeClusterHEPAFilterMonitoringAttributeDegradationDirectionID = 1,

	AttributeIDTypeClusterHEPAFilterMonitoringAttributeChangeIndicationID = 2,

	AttributeIDTypeClusterHEPAFilterMonitoringAttributeInPlaceIndicatorID = 3,

	AttributeIDTypeClusterHEPAFilterMonitoringAttributeLastChangedTimeID = 4,

	AttributeIDTypeClusterHEPAFilterMonitoringAttributeReplacementProductListID = 5,

	AttributeIDTypeClusterHEPAFilterMonitoringAttributeGeneratedCommandListID = 65528,

	AttributeIDTypeClusterHEPAFilterMonitoringAttributeAcceptedCommandListID = 65529,

	AttributeIDTypeClusterHEPAFilterMonitoringAttributeEventListID = 65530,

	AttributeIDTypeClusterHEPAFilterMonitoringAttributeAttributeListID = 65531,

	AttributeIDTypeClusterHEPAFilterMonitoringAttributeFeatureMapID = 65532,

	AttributeIDTypeClusterHEPAFilterMonitoringAttributeClusterRevisionID = 65533,

	AttributeIDTypeClusterActivatedCarbonFilterMonitoringAttributeConditionID = 0,

	AttributeIDTypeClusterActivatedCarbonFilterMonitoringAttributeDegradationDirectionID = 1,

	AttributeIDTypeClusterActivatedCarbonFilterMonitoringAttributeChangeIndicationID = 2,

	AttributeIDTypeClusterActivatedCarbonFilterMonitoringAttributeInPlaceIndicatorID = 3,

	AttributeIDTypeClusterActivatedCarbonFilterMonitoringAttributeLastChangedTimeID = 4,

	AttributeIDTypeClusterActivatedCarbonFilterMonitoringAttributeReplacementProductListID = 5,

	AttributeIDTypeClusterActivatedCarbonFilterMonitoringAttributeGeneratedCommandListID = 65528,

	AttributeIDTypeClusterActivatedCarbonFilterMonitoringAttributeAcceptedCommandListID = 65529,

	AttributeIDTypeClusterActivatedCarbonFilterMonitoringAttributeEventListID = 65530,

	AttributeIDTypeClusterActivatedCarbonFilterMonitoringAttributeAttributeListID = 65531,

	AttributeIDTypeClusterActivatedCarbonFilterMonitoringAttributeFeatureMapID = 65532,

	AttributeIDTypeClusterActivatedCarbonFilterMonitoringAttributeClusterRevisionID = 65533,

	AttributeIDTypeClusterBooleanStateConfigurationAttributeCurrentSensitivityLevelID = 0,

	AttributeIDTypeClusterBooleanStateConfigurationAttributeSupportedSensitivityLevelsID = 1,

	AttributeIDTypeClusterBooleanStateConfigurationAttributeDefaultSensitivityLevelID = 2,

	AttributeIDTypeClusterBooleanStateConfigurationAttributeAlarmsActiveID = 3,

	AttributeIDTypeClusterBooleanStateConfigurationAttributeAlarmsSuppressedID = 4,

	AttributeIDTypeClusterBooleanStateConfigurationAttributeAlarmsEnabledID = 5,

	AttributeIDTypeClusterBooleanStateConfigurationAttributeAlarmsSupportedID = 6,

	AttributeIDTypeClusterBooleanStateConfigurationAttributeSensorFaultID = 7,

	AttributeIDTypeClusterBooleanStateConfigurationAttributeGeneratedCommandListID = 65528,

	AttributeIDTypeClusterBooleanStateConfigurationAttributeAcceptedCommandListID = 65529,

	AttributeIDTypeClusterBooleanStateConfigurationAttributeEventListID = 65530,

	AttributeIDTypeClusterBooleanStateConfigurationAttributeAttributeListID = 65531,

	AttributeIDTypeClusterBooleanStateConfigurationAttributeFeatureMapID = 65532,

	AttributeIDTypeClusterBooleanStateConfigurationAttributeClusterRevisionID = 65533,

	AttributeIDTypeClusterValveConfigurationAndControlAttributeOpenDurationID = 0,

	AttributeIDTypeClusterValveConfigurationAndControlAttributeDefaultOpenDurationID = 1,

	AttributeIDTypeClusterValveConfigurationAndControlAttributeAutoCloseTimeID = 2,

	AttributeIDTypeClusterValveConfigurationAndControlAttributeRemainingDurationID = 3,

	AttributeIDTypeClusterValveConfigurationAndControlAttributeCurrentStateID = 4,

	AttributeIDTypeClusterValveConfigurationAndControlAttributeTargetStateID = 5,

	AttributeIDTypeClusterValveConfigurationAndControlAttributeCurrentLevelID = 6,

	AttributeIDTypeClusterValveConfigurationAndControlAttributeTargetLevelID = 7,

	AttributeIDTypeClusterValveConfigurationAndControlAttributeDefaultOpenLevelID = 8,

	AttributeIDTypeClusterValveConfigurationAndControlAttributeValveFaultID = 9,

	AttributeIDTypeClusterValveConfigurationAndControlAttributeGeneratedCommandListID = 65528,

	AttributeIDTypeClusterValveConfigurationAndControlAttributeAcceptedCommandListID = 65529,

	AttributeIDTypeClusterValveConfigurationAndControlAttributeEventListID = 65530,

	AttributeIDTypeClusterValveConfigurationAndControlAttributeAttributeListID = 65531,

	AttributeIDTypeClusterValveConfigurationAndControlAttributeFeatureMapID = 65532,

	AttributeIDTypeClusterValveConfigurationAndControlAttributeClusterRevisionID = 65533,

	AttributeIDTypeClusterElectricalEnergyMeasurementAttributeAccuracyID = 0,

	AttributeIDTypeClusterElectricalEnergyMeasurementAttributeCumulativeEnergyImportedID = 1,

	AttributeIDTypeClusterElectricalEnergyMeasurementAttributeCumulativeEnergyExportedID = 2,

	AttributeIDTypeClusterElectricalEnergyMeasurementAttributePeriodicEnergyImportedID = 3,

	AttributeIDTypeClusterElectricalEnergyMeasurementAttributePeriodicEnergyExportedID = 4,

	AttributeIDTypeClusterElectricalEnergyMeasurementAttributeGeneratedCommandListID = 65528,

	AttributeIDTypeClusterElectricalEnergyMeasurementAttributeAcceptedCommandListID = 65529,

	AttributeIDTypeClusterElectricalEnergyMeasurementAttributeEventListID = 65530,

	AttributeIDTypeClusterElectricalEnergyMeasurementAttributeAttributeListID = 65531,

	AttributeIDTypeClusterElectricalEnergyMeasurementAttributeFeatureMapID = 65532,

	AttributeIDTypeClusterElectricalEnergyMeasurementAttributeClusterRevisionID = 65533,

	AttributeIDTypeClusterDemandResponseLoadControlAttributeLoadControlProgramsID = 0,

	AttributeIDTypeClusterDemandResponseLoadControlAttributeNumberOfLoadControlProgramsID = 1,

	AttributeIDTypeClusterDemandResponseLoadControlAttributeEventsID = 2,

	AttributeIDTypeClusterDemandResponseLoadControlAttributeActiveEventsID = 3,

	AttributeIDTypeClusterDemandResponseLoadControlAttributeNumberOfEventsPerProgramID = 4,

	AttributeIDTypeClusterDemandResponseLoadControlAttributeNumberOfTransitionsID = 5,

	AttributeIDTypeClusterDemandResponseLoadControlAttributeDefaultRandomStartID = 6,

	AttributeIDTypeClusterDemandResponseLoadControlAttributeDefaultRandomDurationID = 7,

	AttributeIDTypeClusterDemandResponseLoadControlAttributeGeneratedCommandListID = 65528,

	AttributeIDTypeClusterDemandResponseLoadControlAttributeAcceptedCommandListID = 65529,

	AttributeIDTypeClusterDemandResponseLoadControlAttributeEventListID = 65530,

	AttributeIDTypeClusterDemandResponseLoadControlAttributeAttributeListID = 65531,

	AttributeIDTypeClusterDemandResponseLoadControlAttributeFeatureMapID = 65532,

	AttributeIDTypeClusterDemandResponseLoadControlAttributeClusterRevisionID = 65533,

	AttributeIDTypeClusterDeviceEnergyManagementAttributeESATypeID = 0,

	AttributeIDTypeClusterDeviceEnergyManagementAttributeESACanGenerateID = 1,

	AttributeIDTypeClusterDeviceEnergyManagementAttributeESAStateID = 2,

	AttributeIDTypeClusterDeviceEnergyManagementAttributeAbsMinPowerID = 3,

	AttributeIDTypeClusterDeviceEnergyManagementAttributeAbsMaxPowerID = 4,

	AttributeIDTypeClusterDeviceEnergyManagementAttributePowerAdjustmentCapabilityID = 5,

	AttributeIDTypeClusterDeviceEnergyManagementAttributeForecastID = 6,

	AttributeIDTypeClusterDeviceEnergyManagementAttributeGeneratedCommandListID = 65528,

	AttributeIDTypeClusterDeviceEnergyManagementAttributeAcceptedCommandListID = 65529,

	AttributeIDTypeClusterDeviceEnergyManagementAttributeEventListID = 65530,

	AttributeIDTypeClusterDeviceEnergyManagementAttributeAttributeListID = 65531,

	AttributeIDTypeClusterDeviceEnergyManagementAttributeFeatureMapID = 65532,

	AttributeIDTypeClusterDeviceEnergyManagementAttributeClusterRevisionID = 65533,

	AttributeIDTypeClusterEnergyEVSEAttributeStateID = 0,

	AttributeIDTypeClusterEnergyEVSEAttributeSupplyStateID = 1,

	AttributeIDTypeClusterEnergyEVSEAttributeFaultStateID = 2,

	AttributeIDTypeClusterEnergyEVSEAttributeChargingEnabledUntilID = 3,

	AttributeIDTypeClusterEnergyEVSEAttributeDischargingEnabledUntilID = 4,

	AttributeIDTypeClusterEnergyEVSEAttributeCircuitCapacityID = 5,

	AttributeIDTypeClusterEnergyEVSEAttributeMinimumChargeCurrentID = 6,

	AttributeIDTypeClusterEnergyEVSEAttributeMaximumChargeCurrentID = 7,

	AttributeIDTypeClusterEnergyEVSEAttributeMaximumDischargeCurrentID = 8,

	AttributeIDTypeClusterEnergyEVSEAttributeUserMaximumChargeCurrentID = 9,

	AttributeIDTypeClusterEnergyEVSEAttributeRandomizationDelayWindowID = 10,

	AttributeIDTypeClusterEnergyEVSEAttributeNumberOfWeeklyTargetsID = 33,

	AttributeIDTypeClusterEnergyEVSEAttributeNumberOfDailyTargetsID = 34,

	AttributeIDTypeClusterEnergyEVSEAttributeNextChargeStartTimeID = 35,

	AttributeIDTypeClusterEnergyEVSEAttributeNextChargeTargetTimeID = 36,

	AttributeIDTypeClusterEnergyEVSEAttributeNextChargeRequiredEnergyID = 37,

	AttributeIDTypeClusterEnergyEVSEAttributeNextChargeTargetSoCID = 38,

	AttributeIDTypeClusterEnergyEVSEAttributeApproximateEVEfficiencyID = 39,

	AttributeIDTypeClusterEnergyEVSEAttributeStateOfChargeID = 48,

	AttributeIDTypeClusterEnergyEVSEAttributeBatteryCapacityID = 49,

	AttributeIDTypeClusterEnergyEVSEAttributeVehicleIDID = 50,

	AttributeIDTypeClusterEnergyEVSEAttributeSessionIDID = 64,

	AttributeIDTypeClusterEnergyEVSEAttributeSessionDurationID = 65,

	AttributeIDTypeClusterEnergyEVSEAttributeSessionEnergyChargedID = 66,

	AttributeIDTypeClusterEnergyEVSEAttributeSessionEnergyDischargedID = 67,

	AttributeIDTypeClusterEnergyEVSEAttributeGeneratedCommandListID = 65528,

	AttributeIDTypeClusterEnergyEVSEAttributeAcceptedCommandListID = 65529,

	AttributeIDTypeClusterEnergyEVSEAttributeEventListID = 65530,

	AttributeIDTypeClusterEnergyEVSEAttributeAttributeListID = 65531,

	AttributeIDTypeClusterEnergyEVSEAttributeFeatureMapID = 65532,

	AttributeIDTypeClusterEnergyEVSEAttributeClusterRevisionID = 65533,

	AttributeIDTypeClusterEnergyPreferenceAttributeEnergyBalancesID = 0,

	AttributeIDTypeClusterEnergyPreferenceAttributeCurrentEnergyBalanceID = 1,

	AttributeIDTypeClusterEnergyPreferenceAttributeEnergyPrioritiesID = 2,

	AttributeIDTypeClusterEnergyPreferenceAttributeLowPowerModeSensitivitiesID = 3,

	AttributeIDTypeClusterEnergyPreferenceAttributeCurrentLowPowerModeSensitivityID = 4,

	AttributeIDTypeClusterEnergyPreferenceAttributeGeneratedCommandListID = 65528,

	AttributeIDTypeClusterEnergyPreferenceAttributeAcceptedCommandListID = 65529,

	AttributeIDTypeClusterEnergyPreferenceAttributeEventListID = 65530,

	AttributeIDTypeClusterEnergyPreferenceAttributeAttributeListID = 65531,

	AttributeIDTypeClusterEnergyPreferenceAttributeFeatureMapID = 65532,

	AttributeIDTypeClusterEnergyPreferenceAttributeClusterRevisionID = 65533,

	ClusterDoorLockAttributeLockStateID = 0,

	ClusterDoorLockAttributeLockTypeID = 1,

	ClusterDoorLockAttributeActuatorEnabledID = 2,

	ClusterDoorLockAttributeDoorStateID = 3,

	ClusterDoorLockAttributeDoorOpenEventsID = 4,

	ClusterDoorLockAttributeDoorClosedEventsID = 5,

	ClusterDoorLockAttributeOpenPeriodID = 6,

	ClusterDoorLockAttributeNumberOfTotalUsersSupportedID = 17,

	ClusterDoorLockAttributeNumberOfPINUsersSupportedID = 18,

	ClusterDoorLockAttributeNumberOfRFIDUsersSupportedID = 19,

	ClusterDoorLockAttributeNumberOfWeekDaySchedulesSupportedPerUserID = 20,

	ClusterDoorLockAttributeNumberOfYearDaySchedulesSupportedPerUserID = 21,

	ClusterDoorLockAttributeNumberOfHolidaySchedulesSupportedID = 22,

	ClusterDoorLockAttributeMaxPINCodeLengthID = 23,

	ClusterDoorLockAttributeMinPINCodeLengthID = 24,

	ClusterDoorLockAttributeMaxRFIDCodeLengthID = 25,

	ClusterDoorLockAttributeMinRFIDCodeLengthID = 26,

	ClusterDoorLockAttributeCredentialRulesSupportID = 27,

	ClusterDoorLockAttributeNumberOfCredentialsSupportedPerUserID = 28,

	ClusterDoorLockAttributeLanguageID = 33,

	ClusterDoorLockAttributeLEDSettingsID = 34,

	ClusterDoorLockAttributeAutoRelockTimeID = 35,

	ClusterDoorLockAttributeSoundVolumeID = 36,

	ClusterDoorLockAttributeOperatingModeID = 37,

	ClusterDoorLockAttributeSupportedOperatingModesID = 38,

	ClusterDoorLockAttributeDefaultConfigurationRegisterID = 39,

	ClusterDoorLockAttributeEnableLocalProgrammingID = 40,

	ClusterDoorLockAttributeEnableOneTouchLockingID = 41,

	ClusterDoorLockAttributeEnableInsideStatusLEDID = 42,

	ClusterDoorLockAttributeEnablePrivacyModeButtonID = 43,

	ClusterDoorLockAttributeLocalProgrammingFeaturesID = 44,

	ClusterDoorLockAttributeWrongCodeEntryLimitID = 48,

	ClusterDoorLockAttributeUserCodeTemporaryDisableTimeID = 49,

	ClusterDoorLockAttributeSendPINOverTheAirID = 50,

	ClusterDoorLockAttributeRequirePINforRemoteOperationID = 51,

	ClusterDoorLockAttributeExpiringUserTimeoutID = 53,

	ClusterDoorLockAttributeGeneratedCommandListID = 65528,

	ClusterDoorLockAttributeAcceptedCommandListID = 65529,

	ClusterDoorLockAttributeAttributeListID = 65531,

	ClusterDoorLockAttributeFeatureMapID = 65532,

	ClusterDoorLockAttributeClusterRevisionID = 65533,

	AttributeIDTypeClusterDoorLockAttributeLockStateID = 0,

	AttributeIDTypeClusterDoorLockAttributeLockTypeID = 1,

	AttributeIDTypeClusterDoorLockAttributeActuatorEnabledID = 2,

	AttributeIDTypeClusterDoorLockAttributeDoorStateID = 3,

	AttributeIDTypeClusterDoorLockAttributeDoorOpenEventsID = 4,

	AttributeIDTypeClusterDoorLockAttributeDoorClosedEventsID = 5,

	AttributeIDTypeClusterDoorLockAttributeOpenPeriodID = 6,

	AttributeIDTypeClusterDoorLockAttributeNumberOfTotalUsersSupportedID = 17,

	AttributeIDTypeClusterDoorLockAttributeNumberOfPINUsersSupportedID = 18,

	AttributeIDTypeClusterDoorLockAttributeNumberOfRFIDUsersSupportedID = 19,

	AttributeIDTypeClusterDoorLockAttributeNumberOfWeekDaySchedulesSupportedPerUserID = 20,

	AttributeIDTypeClusterDoorLockAttributeNumberOfYearDaySchedulesSupportedPerUserID = 21,

	AttributeIDTypeClusterDoorLockAttributeNumberOfHolidaySchedulesSupportedID = 22,

	AttributeIDTypeClusterDoorLockAttributeMaxPINCodeLengthID = 23,

	AttributeIDTypeClusterDoorLockAttributeMinPINCodeLengthID = 24,

	AttributeIDTypeClusterDoorLockAttributeMaxRFIDCodeLengthID = 25,

	AttributeIDTypeClusterDoorLockAttributeMinRFIDCodeLengthID = 26,

	AttributeIDTypeClusterDoorLockAttributeCredentialRulesSupportID = 27,

	AttributeIDTypeClusterDoorLockAttributeNumberOfCredentialsSupportedPerUserID = 28,

	AttributeIDTypeClusterDoorLockAttributeLanguageID = 33,

	AttributeIDTypeClusterDoorLockAttributeLEDSettingsID = 34,

	AttributeIDTypeClusterDoorLockAttributeAutoRelockTimeID = 35,

	AttributeIDTypeClusterDoorLockAttributeSoundVolumeID = 36,

	AttributeIDTypeClusterDoorLockAttributeOperatingModeID = 37,

	AttributeIDTypeClusterDoorLockAttributeSupportedOperatingModesID = 38,

	AttributeIDTypeClusterDoorLockAttributeDefaultConfigurationRegisterID = 39,

	AttributeIDTypeClusterDoorLockAttributeEnableLocalProgrammingID = 40,

	AttributeIDTypeClusterDoorLockAttributeEnableOneTouchLockingID = 41,

	AttributeIDTypeClusterDoorLockAttributeEnableInsideStatusLEDID = 42,

	AttributeIDTypeClusterDoorLockAttributeEnablePrivacyModeButtonID = 43,

	AttributeIDTypeClusterDoorLockAttributeLocalProgrammingFeaturesID = 44,

	AttributeIDTypeClusterDoorLockAttributeWrongCodeEntryLimitID = 48,

	AttributeIDTypeClusterDoorLockAttributeUserCodeTemporaryDisableTimeID = 49,

	AttributeIDTypeClusterDoorLockAttributeSendPINOverTheAirID = 50,

	AttributeIDTypeClusterDoorLockAttributeRequirePINforRemoteOperationID = 51,

	AttributeIDTypeClusterDoorLockAttributeExpiringUserTimeoutID = 53,

	AttributeIDTypeClusterDoorLockAttributeGeneratedCommandListID = 65528,

	AttributeIDTypeClusterDoorLockAttributeAcceptedCommandListID = 65529,

	AttributeIDTypeClusterDoorLockAttributeEventListID = 65530,

	AttributeIDTypeClusterDoorLockAttributeAttributeListID = 65531,

	AttributeIDTypeClusterDoorLockAttributeFeatureMapID = 65532,

	AttributeIDTypeClusterDoorLockAttributeClusterRevisionID = 65533,

	ClusterWindowCoveringAttributeTypeID = 0,

	ClusterWindowCoveringAttributePhysicalClosedLimitLiftID = 1,

	ClusterWindowCoveringAttributePhysicalClosedLimitTiltID = 2,

	ClusterWindowCoveringAttributeCurrentPositionLiftID = 3,

	ClusterWindowCoveringAttributeCurrentPositionTiltID = 4,

	ClusterWindowCoveringAttributeNumberOfActuationsLiftID = 5,

	ClusterWindowCoveringAttributeNumberOfActuationsTiltID = 6,

	ClusterWindowCoveringAttributeConfigStatusID = 7,

	ClusterWindowCoveringAttributeCurrentPositionLiftPercentageID = 8,

	ClusterWindowCoveringAttributeCurrentPositionTiltPercentageID = 9,

	ClusterWindowCoveringAttributeOperationalStatusID = 10,

	ClusterWindowCoveringAttributeTargetPositionLiftPercent100thsID = 11,

	ClusterWindowCoveringAttributeTargetPositionTiltPercent100thsID = 12,

	ClusterWindowCoveringAttributeEndProductTypeID = 13,

	ClusterWindowCoveringAttributeCurrentPositionLiftPercent100thsID = 14,

	ClusterWindowCoveringAttributeCurrentPositionTiltPercent100thsID = 15,

	ClusterWindowCoveringAttributeInstalledOpenLimitLiftID = 16,

	ClusterWindowCoveringAttributeInstalledClosedLimitLiftID = 17,

	ClusterWindowCoveringAttributeInstalledOpenLimitTiltID = 18,

	ClusterWindowCoveringAttributeInstalledClosedLimitTiltID = 19,

	ClusterWindowCoveringAttributeModeID = 23,

	ClusterWindowCoveringAttributeSafetyStatusID = 26,

	ClusterWindowCoveringAttributeGeneratedCommandListID = 65528,

	ClusterWindowCoveringAttributeAcceptedCommandListID = 65529,

	ClusterWindowCoveringAttributeAttributeListID = 65531,

	ClusterWindowCoveringAttributeFeatureMapID = 65532,

	ClusterWindowCoveringAttributeClusterRevisionID = 65533,

	AttributeIDTypeClusterWindowCoveringAttributeTypeID = 0,

	AttributeIDTypeClusterWindowCoveringAttributePhysicalClosedLimitLiftID = 1,

	AttributeIDTypeClusterWindowCoveringAttributePhysicalClosedLimitTiltID = 2,

	AttributeIDTypeClusterWindowCoveringAttributeCurrentPositionLiftID = 3,

	AttributeIDTypeClusterWindowCoveringAttributeCurrentPositionTiltID = 4,

	AttributeIDTypeClusterWindowCoveringAttributeNumberOfActuationsLiftID = 5,

	AttributeIDTypeClusterWindowCoveringAttributeNumberOfActuationsTiltID = 6,

	AttributeIDTypeClusterWindowCoveringAttributeConfigStatusID = 7,

	AttributeIDTypeClusterWindowCoveringAttributeCurrentPositionLiftPercentageID = 8,

	AttributeIDTypeClusterWindowCoveringAttributeCurrentPositionTiltPercentageID = 9,

	AttributeIDTypeClusterWindowCoveringAttributeOperationalStatusID = 10,

	AttributeIDTypeClusterWindowCoveringAttributeTargetPositionLiftPercent100thsID = 11,

	AttributeIDTypeClusterWindowCoveringAttributeTargetPositionTiltPercent100thsID = 12,

	AttributeIDTypeClusterWindowCoveringAttributeEndProductTypeID = 13,

	AttributeIDTypeClusterWindowCoveringAttributeCurrentPositionLiftPercent100thsID = 14,

	AttributeIDTypeClusterWindowCoveringAttributeCurrentPositionTiltPercent100thsID = 15,

	AttributeIDTypeClusterWindowCoveringAttributeInstalledOpenLimitLiftID = 16,

	AttributeIDTypeClusterWindowCoveringAttributeInstalledClosedLimitLiftID = 17,

	AttributeIDTypeClusterWindowCoveringAttributeInstalledOpenLimitTiltID = 18,

	AttributeIDTypeClusterWindowCoveringAttributeInstalledClosedLimitTiltID = 19,

	AttributeIDTypeClusterWindowCoveringAttributeModeID = 23,

	AttributeIDTypeClusterWindowCoveringAttributeSafetyStatusID = 26,

	AttributeIDTypeClusterWindowCoveringAttributeGeneratedCommandListID = 65528,

	AttributeIDTypeClusterWindowCoveringAttributeAcceptedCommandListID = 65529,

	AttributeIDTypeClusterWindowCoveringAttributeEventListID = 65530,

	AttributeIDTypeClusterWindowCoveringAttributeAttributeListID = 65531,

	AttributeIDTypeClusterWindowCoveringAttributeFeatureMapID = 65532,

	AttributeIDTypeClusterWindowCoveringAttributeClusterRevisionID = 65533,

	ClusterBarrierControlAttributeBarrierMovingStateID = 1,

	ClusterBarrierControlAttributeBarrierSafetyStatusID = 2,

	ClusterBarrierControlAttributeBarrierCapabilitiesID = 3,

	ClusterBarrierControlAttributeBarrierOpenEventsID = 4,

	ClusterBarrierControlAttributeBarrierCloseEventsID = 5,

	ClusterBarrierControlAttributeBarrierCommandOpenEventsID = 6,

	ClusterBarrierControlAttributeBarrierCommandCloseEventsID = 7,

	ClusterBarrierControlAttributeBarrierOpenPeriodID = 8,

	ClusterBarrierControlAttributeBarrierClosePeriodID = 9,

	ClusterBarrierControlAttributeBarrierPositionID = 10,

	ClusterBarrierControlAttributeGeneratedCommandListID = 65528,

	ClusterBarrierControlAttributeAcceptedCommandListID = 65529,

	ClusterBarrierControlAttributeAttributeListID = 65531,

	ClusterBarrierControlAttributeFeatureMapID = 65532,

	ClusterBarrierControlAttributeClusterRevisionID = 65533,

	AttributeIDTypeClusterBarrierControlAttributeBarrierMovingStateID = 1,

	AttributeIDTypeClusterBarrierControlAttributeBarrierSafetyStatusID = 2,

	AttributeIDTypeClusterBarrierControlAttributeBarrierCapabilitiesID = 3,

	AttributeIDTypeClusterBarrierControlAttributeBarrierOpenEventsID = 4,

	AttributeIDTypeClusterBarrierControlAttributeBarrierCloseEventsID = 5,

	AttributeIDTypeClusterBarrierControlAttributeBarrierCommandOpenEventsID = 6,

	AttributeIDTypeClusterBarrierControlAttributeBarrierCommandCloseEventsID = 7,

	AttributeIDTypeClusterBarrierControlAttributeBarrierOpenPeriodID = 8,

	AttributeIDTypeClusterBarrierControlAttributeBarrierClosePeriodID = 9,

	AttributeIDTypeClusterBarrierControlAttributeBarrierPositionID = 10,

	AttributeIDTypeClusterBarrierControlAttributeGeneratedCommandListID = 65528,

	AttributeIDTypeClusterBarrierControlAttributeAcceptedCommandListID = 65529,

	AttributeIDTypeClusterBarrierControlAttributeEventListID = 65530,

	AttributeIDTypeClusterBarrierControlAttributeAttributeListID = 65531,

	AttributeIDTypeClusterBarrierControlAttributeFeatureMapID = 65532,

	AttributeIDTypeClusterBarrierControlAttributeClusterRevisionID = 65533,

	ClusterPumpConfigurationAndControlAttributeMaxPressureID = 0,

	ClusterPumpConfigurationAndControlAttributeMaxSpeedID = 1,

	ClusterPumpConfigurationAndControlAttributeMaxFlowID = 2,

	ClusterPumpConfigurationAndControlAttributeMinConstPressureID = 3,

	ClusterPumpConfigurationAndControlAttributeMaxConstPressureID = 4,

	ClusterPumpConfigurationAndControlAttributeMinCompPressureID = 5,

	ClusterPumpConfigurationAndControlAttributeMaxCompPressureID = 6,

	ClusterPumpConfigurationAndControlAttributeMinConstSpeedID = 7,

	ClusterPumpConfigurationAndControlAttributeMaxConstSpeedID = 8,

	ClusterPumpConfigurationAndControlAttributeMinConstFlowID = 9,

	ClusterPumpConfigurationAndControlAttributeMaxConstFlowID = 10,

	ClusterPumpConfigurationAndControlAttributeMinConstTempID = 11,

	ClusterPumpConfigurationAndControlAttributeMaxConstTempID = 12,

	ClusterPumpConfigurationAndControlAttributePumpStatusID = 16,

	ClusterPumpConfigurationAndControlAttributeEffectiveOperationModeID = 17,

	ClusterPumpConfigurationAndControlAttributeEffectiveControlModeID = 18,

	ClusterPumpConfigurationAndControlAttributeCapacityID = 19,

	ClusterPumpConfigurationAndControlAttributeSpeedID = 20,

	ClusterPumpConfigurationAndControlAttributeLifetimeRunningHoursID = 21,

	ClusterPumpConfigurationAndControlAttributePowerID = 22,

	ClusterPumpConfigurationAndControlAttributeLifetimeEnergyConsumedID = 23,

	ClusterPumpConfigurationAndControlAttributeOperationModeID = 32,

	ClusterPumpConfigurationAndControlAttributeControlModeID = 33,

	ClusterPumpConfigurationAndControlAttributeGeneratedCommandListID = 65528,

	ClusterPumpConfigurationAndControlAttributeAcceptedCommandListID = 65529,

	ClusterPumpConfigurationAndControlAttributeAttributeListID = 65531,

	ClusterPumpConfigurationAndControlAttributeFeatureMapID = 65532,

	ClusterPumpConfigurationAndControlAttributeClusterRevisionID = 65533,

	AttributeIDTypeClusterPumpConfigurationAndControlAttributeMaxPressureID = 0,

	AttributeIDTypeClusterPumpConfigurationAndControlAttributeMaxSpeedID = 1,

	AttributeIDTypeClusterPumpConfigurationAndControlAttributeMaxFlowID = 2,

	AttributeIDTypeClusterPumpConfigurationAndControlAttributeMinConstPressureID = 3,

	AttributeIDTypeClusterPumpConfigurationAndControlAttributeMaxConstPressureID = 4,

	AttributeIDTypeClusterPumpConfigurationAndControlAttributeMinCompPressureID = 5,

	AttributeIDTypeClusterPumpConfigurationAndControlAttributeMaxCompPressureID = 6,

	AttributeIDTypeClusterPumpConfigurationAndControlAttributeMinConstSpeedID = 7,

	AttributeIDTypeClusterPumpConfigurationAndControlAttributeMaxConstSpeedID = 8,

	AttributeIDTypeClusterPumpConfigurationAndControlAttributeMinConstFlowID = 9,

	AttributeIDTypeClusterPumpConfigurationAndControlAttributeMaxConstFlowID = 10,

	AttributeIDTypeClusterPumpConfigurationAndControlAttributeMinConstTempID = 11,

	AttributeIDTypeClusterPumpConfigurationAndControlAttributeMaxConstTempID = 12,

	AttributeIDTypeClusterPumpConfigurationAndControlAttributePumpStatusID = 16,

	AttributeIDTypeClusterPumpConfigurationAndControlAttributeEffectiveOperationModeID = 17,

	AttributeIDTypeClusterPumpConfigurationAndControlAttributeEffectiveControlModeID = 18,

	AttributeIDTypeClusterPumpConfigurationAndControlAttributeCapacityID = 19,

	AttributeIDTypeClusterPumpConfigurationAndControlAttributeSpeedID = 20,

	AttributeIDTypeClusterPumpConfigurationAndControlAttributeLifetimeRunningHoursID = 21,

	AttributeIDTypeClusterPumpConfigurationAndControlAttributePowerID = 22,

	AttributeIDTypeClusterPumpConfigurationAndControlAttributeLifetimeEnergyConsumedID = 23,

	AttributeIDTypeClusterPumpConfigurationAndControlAttributeOperationModeID = 32,

	AttributeIDTypeClusterPumpConfigurationAndControlAttributeControlModeID = 33,

	AttributeIDTypeClusterPumpConfigurationAndControlAttributeGeneratedCommandListID = 65528,

	AttributeIDTypeClusterPumpConfigurationAndControlAttributeAcceptedCommandListID = 65529,

	AttributeIDTypeClusterPumpConfigurationAndControlAttributeEventListID = 65530,

	AttributeIDTypeClusterPumpConfigurationAndControlAttributeAttributeListID = 65531,

	AttributeIDTypeClusterPumpConfigurationAndControlAttributeFeatureMapID = 65532,

	AttributeIDTypeClusterPumpConfigurationAndControlAttributeClusterRevisionID = 65533,

	ClusterThermostatAttributeLocalTemperatureID = 0,

	ClusterThermostatAttributeOutdoorTemperatureID = 1,

	ClusterThermostatAttributeOccupancyID = 2,

	ClusterThermostatAttributeAbsMinHeatSetpointLimitID = 3,

	ClusterThermostatAttributeAbsMaxHeatSetpointLimitID = 4,

	ClusterThermostatAttributeAbsMinCoolSetpointLimitID = 5,

	ClusterThermostatAttributeAbsMaxCoolSetpointLimitID = 6,

	ClusterThermostatAttributePICoolingDemandID = 7,

	ClusterThermostatAttributePIHeatingDemandID = 8,

	ClusterThermostatAttributeHVACSystemTypeConfigurationID = 9,

	ClusterThermostatAttributeLocalTemperatureCalibrationID = 16,

	ClusterThermostatAttributeOccupiedCoolingSetpointID = 17,

	ClusterThermostatAttributeOccupiedHeatingSetpointID = 18,

	ClusterThermostatAttributeUnoccupiedCoolingSetpointID = 19,

	ClusterThermostatAttributeUnoccupiedHeatingSetpointID = 20,

	ClusterThermostatAttributeMinHeatSetpointLimitID = 21,

	ClusterThermostatAttributeMaxHeatSetpointLimitID = 22,

	ClusterThermostatAttributeMinCoolSetpointLimitID = 23,

	ClusterThermostatAttributeMaxCoolSetpointLimitID = 24,

	ClusterThermostatAttributeMinSetpointDeadBandID = 25,

	ClusterThermostatAttributeRemoteSensingID = 26,

	ClusterThermostatAttributeControlSequenceOfOperationID = 27,

	ClusterThermostatAttributeSystemModeID = 28,

	ClusterThermostatAttributeThermostatRunningModeID = 30,

	ClusterThermostatAttributeStartOfWeekID = 32,

	ClusterThermostatAttributeNumberOfWeeklyTransitionsID = 33,

	ClusterThermostatAttributeNumberOfDailyTransitionsID = 34,

	ClusterThermostatAttributeTemperatureSetpointHoldID = 35,

	ClusterThermostatAttributeTemperatureSetpointHoldDurationID = 36,

	ClusterThermostatAttributeThermostatProgrammingOperationModeID = 37,

	ClusterThermostatAttributeThermostatRunningStateID = 41,

	ClusterThermostatAttributeSetpointChangeSourceID = 48,

	ClusterThermostatAttributeSetpointChangeAmountID = 49,

	ClusterThermostatAttributeSetpointChangeSourceTimestampID = 50,

	ClusterThermostatAttributeOccupiedSetbackID = 52,

	ClusterThermostatAttributeOccupiedSetbackMinID = 53,

	ClusterThermostatAttributeOccupiedSetbackMaxID = 54,

	ClusterThermostatAttributeUnoccupiedSetbackID = 55,

	ClusterThermostatAttributeUnoccupiedSetbackMinID = 56,

	ClusterThermostatAttributeUnoccupiedSetbackMaxID = 57,

	ClusterThermostatAttributeEmergencyHeatDeltaID = 58,

	ClusterThermostatAttributeACTypeID = 64,

	ClusterThermostatAttributeACCapacityID = 65,

	ClusterThermostatAttributeACRefrigerantTypeID = 66,

	ClusterThermostatAttributeACCompressorTypeID = 67,

	ClusterThermostatAttributeACErrorCodeID = 68,

	ClusterThermostatAttributeACLouverPositionID = 69,

	ClusterThermostatAttributeACCoilTemperatureID = 70,

	ClusterThermostatAttributeACCapacityformatID = 71,

	ClusterThermostatAttributeGeneratedCommandListID = 65528,

	ClusterThermostatAttributeAcceptedCommandListID = 65529,

	ClusterThermostatAttributeAttributeListID = 65531,

	ClusterThermostatAttributeFeatureMapID = 65532,

	ClusterThermostatAttributeClusterRevisionID = 65533,

	AttributeIDTypeClusterThermostatAttributeLocalTemperatureID = 0,

	AttributeIDTypeClusterThermostatAttributeOutdoorTemperatureID = 1,

	AttributeIDTypeClusterThermostatAttributeOccupancyID = 2,

	AttributeIDTypeClusterThermostatAttributeAbsMinHeatSetpointLimitID = 3,

	AttributeIDTypeClusterThermostatAttributeAbsMaxHeatSetpointLimitID = 4,

	AttributeIDTypeClusterThermostatAttributeAbsMinCoolSetpointLimitID = 5,

	AttributeIDTypeClusterThermostatAttributeAbsMaxCoolSetpointLimitID = 6,

	AttributeIDTypeClusterThermostatAttributePICoolingDemandID = 7,

	AttributeIDTypeClusterThermostatAttributePIHeatingDemandID = 8,

	AttributeIDTypeClusterThermostatAttributeHVACSystemTypeConfigurationID = 9,

	AttributeIDTypeClusterThermostatAttributeLocalTemperatureCalibrationID = 16,

	AttributeIDTypeClusterThermostatAttributeOccupiedCoolingSetpointID = 17,

	AttributeIDTypeClusterThermostatAttributeOccupiedHeatingSetpointID = 18,

	AttributeIDTypeClusterThermostatAttributeUnoccupiedCoolingSetpointID = 19,

	AttributeIDTypeClusterThermostatAttributeUnoccupiedHeatingSetpointID = 20,

	AttributeIDTypeClusterThermostatAttributeMinHeatSetpointLimitID = 21,

	AttributeIDTypeClusterThermostatAttributeMaxHeatSetpointLimitID = 22,

	AttributeIDTypeClusterThermostatAttributeMinCoolSetpointLimitID = 23,

	AttributeIDTypeClusterThermostatAttributeMaxCoolSetpointLimitID = 24,

	AttributeIDTypeClusterThermostatAttributeMinSetpointDeadBandID = 25,

	AttributeIDTypeClusterThermostatAttributeRemoteSensingID = 26,

	AttributeIDTypeClusterThermostatAttributeControlSequenceOfOperationID = 27,

	AttributeIDTypeClusterThermostatAttributeSystemModeID = 28,

	AttributeIDTypeClusterThermostatAttributeThermostatRunningModeID = 30,

	AttributeIDTypeClusterThermostatAttributeStartOfWeekID = 32,

	AttributeIDTypeClusterThermostatAttributeNumberOfWeeklyTransitionsID = 33,

	AttributeIDTypeClusterThermostatAttributeNumberOfDailyTransitionsID = 34,

	AttributeIDTypeClusterThermostatAttributeTemperatureSetpointHoldID = 35,

	AttributeIDTypeClusterThermostatAttributeTemperatureSetpointHoldDurationID = 36,

	AttributeIDTypeClusterThermostatAttributeThermostatProgrammingOperationModeID = 37,

	AttributeIDTypeClusterThermostatAttributeThermostatRunningStateID = 41,

	AttributeIDTypeClusterThermostatAttributeSetpointChangeSourceID = 48,

	AttributeIDTypeClusterThermostatAttributeSetpointChangeAmountID = 49,

	AttributeIDTypeClusterThermostatAttributeSetpointChangeSourceTimestampID = 50,

	AttributeIDTypeClusterThermostatAttributeOccupiedSetbackID = 52,

	AttributeIDTypeClusterThermostatAttributeOccupiedSetbackMinID = 53,

	AttributeIDTypeClusterThermostatAttributeOccupiedSetbackMaxID = 54,

	AttributeIDTypeClusterThermostatAttributeUnoccupiedSetbackID = 55,

	AttributeIDTypeClusterThermostatAttributeUnoccupiedSetbackMinID = 56,

	AttributeIDTypeClusterThermostatAttributeUnoccupiedSetbackMaxID = 57,

	AttributeIDTypeClusterThermostatAttributeEmergencyHeatDeltaID = 58,

	AttributeIDTypeClusterThermostatAttributeACTypeID = 64,

	AttributeIDTypeClusterThermostatAttributeACCapacityID = 65,

	AttributeIDTypeClusterThermostatAttributeACRefrigerantTypeID = 66,

	AttributeIDTypeClusterThermostatAttributeACCompressorTypeID = 67,

	AttributeIDTypeClusterThermostatAttributeACErrorCodeID = 68,

	AttributeIDTypeClusterThermostatAttributeACLouverPositionID = 69,

	AttributeIDTypeClusterThermostatAttributeACCoilTemperatureID = 70,

	AttributeIDTypeClusterThermostatAttributeACCapacityformatID = 71,

	AttributeIDTypeClusterThermostatAttributeGeneratedCommandListID = 65528,

	AttributeIDTypeClusterThermostatAttributeAcceptedCommandListID = 65529,

	AttributeIDTypeClusterThermostatAttributeEventListID = 65530,

	AttributeIDTypeClusterThermostatAttributeAttributeListID = 65531,

	AttributeIDTypeClusterThermostatAttributeFeatureMapID = 65532,

	AttributeIDTypeClusterThermostatAttributeClusterRevisionID = 65533,

	ClusterFanControlAttributeFanModeID = 0,

	ClusterFanControlAttributeFanModeSequenceID = 1,

	ClusterFanControlAttributePercentSettingID = 2,

	ClusterFanControlAttributePercentCurrentID = 3,

	ClusterFanControlAttributeSpeedMaxID = 4,

	ClusterFanControlAttributeSpeedSettingID = 5,

	ClusterFanControlAttributeSpeedCurrentID = 6,

	ClusterFanControlAttributeRockSupportID = 7,

	ClusterFanControlAttributeRockSettingID = 8,

	ClusterFanControlAttributeWindSupportID = 9,

	ClusterFanControlAttributeWindSettingID = 10,

	ClusterFanControlAttributeGeneratedCommandListID = 65528,

	ClusterFanControlAttributeAcceptedCommandListID = 65529,

	ClusterFanControlAttributeAttributeListID = 65531,

	ClusterFanControlAttributeFeatureMapID = 65532,

	ClusterFanControlAttributeClusterRevisionID = 65533,

	AttributeIDTypeClusterFanControlAttributeFanModeID = 0,

	AttributeIDTypeClusterFanControlAttributeFanModeSequenceID = 1,

	AttributeIDTypeClusterFanControlAttributePercentSettingID = 2,

	AttributeIDTypeClusterFanControlAttributePercentCurrentID = 3,

	AttributeIDTypeClusterFanControlAttributeSpeedMaxID = 4,

	AttributeIDTypeClusterFanControlAttributeSpeedSettingID = 5,

	AttributeIDTypeClusterFanControlAttributeSpeedCurrentID = 6,

	AttributeIDTypeClusterFanControlAttributeRockSupportID = 7,

	AttributeIDTypeClusterFanControlAttributeRockSettingID = 8,

	AttributeIDTypeClusterFanControlAttributeWindSupportID = 9,

	AttributeIDTypeClusterFanControlAttributeWindSettingID = 10,

	AttributeIDTypeClusterFanControlAttributeAirflowDirectionID = 11,

	AttributeIDTypeClusterFanControlAttributeGeneratedCommandListID = 65528,

	AttributeIDTypeClusterFanControlAttributeAcceptedCommandListID = 65529,

	AttributeIDTypeClusterFanControlAttributeEventListID = 65530,

	AttributeIDTypeClusterFanControlAttributeAttributeListID = 65531,

	AttributeIDTypeClusterFanControlAttributeFeatureMapID = 65532,

	AttributeIDTypeClusterFanControlAttributeClusterRevisionID = 65533,

	ClusterThermostatUserInterfaceConfigurationAttributeTemperatureDisplayModeID = 0,

	ClusterThermostatUserInterfaceConfigurationAttributeKeypadLockoutID = 1,

	ClusterThermostatUserInterfaceConfigurationAttributeScheduleProgrammingVisibilityID = 2,

	ClusterThermostatUserInterfaceConfigurationAttributeGeneratedCommandListID = 65528,

	ClusterThermostatUserInterfaceConfigurationAttributeAcceptedCommandListID = 65529,

	ClusterThermostatUserInterfaceConfigurationAttributeAttributeListID = 65531,

	ClusterThermostatUserInterfaceConfigurationAttributeFeatureMapID = 65532,

	ClusterThermostatUserInterfaceConfigurationAttributeClusterRevisionID = 65533,

	AttributeIDTypeClusterThermostatUserInterfaceConfigurationAttributeTemperatureDisplayModeID = 0,

	AttributeIDTypeClusterThermostatUserInterfaceConfigurationAttributeKeypadLockoutID = 1,

	AttributeIDTypeClusterThermostatUserInterfaceConfigurationAttributeScheduleProgrammingVisibilityID = 2,

	AttributeIDTypeClusterThermostatUserInterfaceConfigurationAttributeGeneratedCommandListID = 65528,

	AttributeIDTypeClusterThermostatUserInterfaceConfigurationAttributeAcceptedCommandListID = 65529,

	AttributeIDTypeClusterThermostatUserInterfaceConfigurationAttributeEventListID = 65530,

	AttributeIDTypeClusterThermostatUserInterfaceConfigurationAttributeAttributeListID = 65531,

	AttributeIDTypeClusterThermostatUserInterfaceConfigurationAttributeFeatureMapID = 65532,

	AttributeIDTypeClusterThermostatUserInterfaceConfigurationAttributeClusterRevisionID = 65533,

	ClusterColorControlAttributeCurrentHueID = 0,

	ClusterColorControlAttributeCurrentSaturationID = 1,

	ClusterColorControlAttributeRemainingTimeID = 2,

	ClusterColorControlAttributeCurrentXID = 3,

	ClusterColorControlAttributeCurrentYID = 4,

	ClusterColorControlAttributeDriftCompensationID = 5,

	ClusterColorControlAttributeCompensationTextID = 6,

	ClusterColorControlAttributeColorTemperatureMiredsID = 7,

	ClusterColorControlAttributeColorModeID = 8,

	ClusterColorControlAttributeOptionsID = 15,

	ClusterColorControlAttributeNumberOfPrimariesID = 16,

	ClusterColorControlAttributePrimary1XID = 17,

	ClusterColorControlAttributePrimary1YID = 18,

	ClusterColorControlAttributePrimary1IntensityID = 19,

	ClusterColorControlAttributePrimary2XID = 21,

	ClusterColorControlAttributePrimary2YID = 22,

	ClusterColorControlAttributePrimary2IntensityID = 23,

	ClusterColorControlAttributePrimary3XID = 25,

	ClusterColorControlAttributePrimary3YID = 26,

	ClusterColorControlAttributePrimary3IntensityID = 27,

	ClusterColorControlAttributePrimary4XID = 32,

	ClusterColorControlAttributePrimary4YID = 33,

	ClusterColorControlAttributePrimary4IntensityID = 34,

	ClusterColorControlAttributePrimary5XID = 36,

	ClusterColorControlAttributePrimary5YID = 37,

	ClusterColorControlAttributePrimary5IntensityID = 38,

	ClusterColorControlAttributePrimary6XID = 40,

	ClusterColorControlAttributePrimary6YID = 41,

	ClusterColorControlAttributePrimary6IntensityID = 42,

	ClusterColorControlAttributeWhitePointXID = 48,

	ClusterColorControlAttributeWhitePointYID = 49,

	ClusterColorControlAttributeColorPointRXID = 50,

	ClusterColorControlAttributeColorPointRYID = 51,

	ClusterColorControlAttributeColorPointRIntensityID = 52,

	ClusterColorControlAttributeColorPointGXID = 54,

	ClusterColorControlAttributeColorPointGYID = 55,

	ClusterColorControlAttributeColorPointGIntensityID = 56,

	ClusterColorControlAttributeColorPointBXID = 58,

	ClusterColorControlAttributeColorPointBYID = 59,

	ClusterColorControlAttributeColorPointBIntensityID = 60,

	ClusterColorControlAttributeEnhancedCurrentHueID = 16384,

	ClusterColorControlAttributeEnhancedColorModeID = 16385,

	ClusterColorControlAttributeColorLoopActiveID = 16386,

	ClusterColorControlAttributeColorLoopDirectionID = 16387,

	ClusterColorControlAttributeColorLoopTimeID = 16388,

	ClusterColorControlAttributeColorLoopStartEnhancedHueID = 16389,

	ClusterColorControlAttributeColorLoopStoredEnhancedHueID = 16390,

	ClusterColorControlAttributeColorCapabilitiesID = 16394,

	ClusterColorControlAttributeColorTempPhysicalMinMiredsID = 16395,

	ClusterColorControlAttributeColorTempPhysicalMaxMiredsID = 16396,

	ClusterColorControlAttributeCoupleColorTempToLevelMinMiredsID = 16397,

	ClusterColorControlAttributeStartUpColorTemperatureMiredsID = 16400,

	ClusterColorControlAttributeGeneratedCommandListID = 65528,

	ClusterColorControlAttributeAcceptedCommandListID = 65529,

	ClusterColorControlAttributeAttributeListID = 65531,

	ClusterColorControlAttributeFeatureMapID = 65532,

	ClusterColorControlAttributeClusterRevisionID = 65533,

	AttributeIDTypeClusterColorControlAttributeCurrentHueID = 0,

	AttributeIDTypeClusterColorControlAttributeCurrentSaturationID = 1,

	AttributeIDTypeClusterColorControlAttributeRemainingTimeID = 2,

	AttributeIDTypeClusterColorControlAttributeCurrentXID = 3,

	AttributeIDTypeClusterColorControlAttributeCurrentYID = 4,

	AttributeIDTypeClusterColorControlAttributeDriftCompensationID = 5,

	AttributeIDTypeClusterColorControlAttributeCompensationTextID = 6,

	AttributeIDTypeClusterColorControlAttributeColorTemperatureMiredsID = 7,

	AttributeIDTypeClusterColorControlAttributeColorModeID = 8,

	AttributeIDTypeClusterColorControlAttributeOptionsID = 15,

	AttributeIDTypeClusterColorControlAttributeNumberOfPrimariesID = 16,

	AttributeIDTypeClusterColorControlAttributePrimary1XID = 17,

	AttributeIDTypeClusterColorControlAttributePrimary1YID = 18,

	AttributeIDTypeClusterColorControlAttributePrimary1IntensityID = 19,

	AttributeIDTypeClusterColorControlAttributePrimary2XID = 21,

	AttributeIDTypeClusterColorControlAttributePrimary2YID = 22,

	AttributeIDTypeClusterColorControlAttributePrimary2IntensityID = 23,

	AttributeIDTypeClusterColorControlAttributePrimary3XID = 25,

	AttributeIDTypeClusterColorControlAttributePrimary3YID = 26,

	AttributeIDTypeClusterColorControlAttributePrimary3IntensityID = 27,

	AttributeIDTypeClusterColorControlAttributePrimary4XID = 32,

	AttributeIDTypeClusterColorControlAttributePrimary4YID = 33,

	AttributeIDTypeClusterColorControlAttributePrimary4IntensityID = 34,

	AttributeIDTypeClusterColorControlAttributePrimary5XID = 36,

	AttributeIDTypeClusterColorControlAttributePrimary5YID = 37,

	AttributeIDTypeClusterColorControlAttributePrimary5IntensityID = 38,

	AttributeIDTypeClusterColorControlAttributePrimary6XID = 40,

	AttributeIDTypeClusterColorControlAttributePrimary6YID = 41,

	AttributeIDTypeClusterColorControlAttributePrimary6IntensityID = 42,

	AttributeIDTypeClusterColorControlAttributeWhitePointXID = 48,

	AttributeIDTypeClusterColorControlAttributeWhitePointYID = 49,

	AttributeIDTypeClusterColorControlAttributeColorPointRXID = 50,

	AttributeIDTypeClusterColorControlAttributeColorPointRYID = 51,

	AttributeIDTypeClusterColorControlAttributeColorPointRIntensityID = 52,

	AttributeIDTypeClusterColorControlAttributeColorPointGXID = 54,

	AttributeIDTypeClusterColorControlAttributeColorPointGYID = 55,

	AttributeIDTypeClusterColorControlAttributeColorPointGIntensityID = 56,

	AttributeIDTypeClusterColorControlAttributeColorPointBXID = 58,

	AttributeIDTypeClusterColorControlAttributeColorPointBYID = 59,

	AttributeIDTypeClusterColorControlAttributeColorPointBIntensityID = 60,

	AttributeIDTypeClusterColorControlAttributeEnhancedCurrentHueID = 16384,

	AttributeIDTypeClusterColorControlAttributeEnhancedColorModeID = 16385,

	AttributeIDTypeClusterColorControlAttributeColorLoopActiveID = 16386,

	AttributeIDTypeClusterColorControlAttributeColorLoopDirectionID = 16387,

	AttributeIDTypeClusterColorControlAttributeColorLoopTimeID = 16388,

	AttributeIDTypeClusterColorControlAttributeColorLoopStartEnhancedHueID = 16389,

	AttributeIDTypeClusterColorControlAttributeColorLoopStoredEnhancedHueID = 16390,

	AttributeIDTypeClusterColorControlAttributeColorCapabilitiesID = 16394,

	AttributeIDTypeClusterColorControlAttributeColorTempPhysicalMinMiredsID = 16395,

	AttributeIDTypeClusterColorControlAttributeColorTempPhysicalMaxMiredsID = 16396,

	AttributeIDTypeClusterColorControlAttributeCoupleColorTempToLevelMinMiredsID = 16397,

	AttributeIDTypeClusterColorControlAttributeStartUpColorTemperatureMiredsID = 16400,

	AttributeIDTypeClusterColorControlAttributeGeneratedCommandListID = 65528,

	AttributeIDTypeClusterColorControlAttributeAcceptedCommandListID = 65529,

	AttributeIDTypeClusterColorControlAttributeEventListID = 65530,

	AttributeIDTypeClusterColorControlAttributeAttributeListID = 65531,

	AttributeIDTypeClusterColorControlAttributeFeatureMapID = 65532,

	AttributeIDTypeClusterColorControlAttributeClusterRevisionID = 65533,

	ClusterBallastConfigurationAttributePhysicalMinLevelID = 0,

	ClusterBallastConfigurationAttributePhysicalMaxLevelID = 1,

	ClusterBallastConfigurationAttributeBallastStatusID = 2,

	ClusterBallastConfigurationAttributeMinLevelID = 16,

	ClusterBallastConfigurationAttributeMaxLevelID = 17,

	ClusterBallastConfigurationAttributeIntrinsicBalanceFactorID = 20,

	ClusterBallastConfigurationAttributeBallastFactorAdjustmentID = 21,

	ClusterBallastConfigurationAttributeLampQuantityID = 32,

	ClusterBallastConfigurationAttributeLampTypeID = 48,

	ClusterBallastConfigurationAttributeLampManufacturerID = 49,

	ClusterBallastConfigurationAttributeLampRatedHoursID = 50,

	ClusterBallastConfigurationAttributeLampBurnHoursID = 51,

	ClusterBallastConfigurationAttributeLampAlarmModeID = 52,

	ClusterBallastConfigurationAttributeLampBurnHoursTripPointID = 53,

	ClusterBallastConfigurationAttributeGeneratedCommandListID = 65528,

	ClusterBallastConfigurationAttributeAcceptedCommandListID = 65529,

	ClusterBallastConfigurationAttributeAttributeListID = 65531,

	ClusterBallastConfigurationAttributeFeatureMapID = 65532,

	ClusterBallastConfigurationAttributeClusterRevisionID = 65533,

	AttributeIDTypeClusterBallastConfigurationAttributePhysicalMinLevelID = 0,

	AttributeIDTypeClusterBallastConfigurationAttributePhysicalMaxLevelID = 1,

	AttributeIDTypeClusterBallastConfigurationAttributeBallastStatusID = 2,

	AttributeIDTypeClusterBallastConfigurationAttributeMinLevelID = 16,

	AttributeIDTypeClusterBallastConfigurationAttributeMaxLevelID = 17,

	AttributeIDTypeClusterBallastConfigurationAttributeIntrinsicBallastFactorID = 20,

	AttributeIDTypeClusterBallastConfigurationAttributeBallastFactorAdjustmentID = 21,

	AttributeIDTypeClusterBallastConfigurationAttributeLampQuantityID = 32,

	AttributeIDTypeClusterBallastConfigurationAttributeLampTypeID = 48,

	AttributeIDTypeClusterBallastConfigurationAttributeLampManufacturerID = 49,

	AttributeIDTypeClusterBallastConfigurationAttributeLampRatedHoursID = 50,

	AttributeIDTypeClusterBallastConfigurationAttributeLampBurnHoursID = 51,

	AttributeIDTypeClusterBallastConfigurationAttributeLampAlarmModeID = 52,

	AttributeIDTypeClusterBallastConfigurationAttributeLampBurnHoursTripPointID = 53,

	AttributeIDTypeClusterBallastConfigurationAttributeGeneratedCommandListID = 65528,

	AttributeIDTypeClusterBallastConfigurationAttributeAcceptedCommandListID = 65529,

	AttributeIDTypeClusterBallastConfigurationAttributeEventListID = 65530,

	AttributeIDTypeClusterBallastConfigurationAttributeAttributeListID = 65531,

	AttributeIDTypeClusterBallastConfigurationAttributeFeatureMapID = 65532,

	AttributeIDTypeClusterBallastConfigurationAttributeClusterRevisionID = 65533,

	ClusterIlluminanceMeasurementAttributeMeasuredValueID = 0,

	ClusterIlluminanceMeasurementAttributeMinMeasuredValueID = 1,

	ClusterIlluminanceMeasurementAttributeMaxMeasuredValueID = 2,

	ClusterIlluminanceMeasurementAttributeToleranceID = 3,

	ClusterIlluminanceMeasurementAttributeLightSensorTypeID = 4,

	ClusterIlluminanceMeasurementAttributeGeneratedCommandListID = 65528,

	ClusterIlluminanceMeasurementAttributeAcceptedCommandListID = 65529,

	ClusterIlluminanceMeasurementAttributeAttributeListID = 65531,

	ClusterIlluminanceMeasurementAttributeFeatureMapID = 65532,

	ClusterIlluminanceMeasurementAttributeClusterRevisionID = 65533,

	AttributeIDTypeClusterIlluminanceMeasurementAttributeMeasuredValueID = 0,

	AttributeIDTypeClusterIlluminanceMeasurementAttributeMinMeasuredValueID = 1,

	AttributeIDTypeClusterIlluminanceMeasurementAttributeMaxMeasuredValueID = 2,

	AttributeIDTypeClusterIlluminanceMeasurementAttributeToleranceID = 3,

	AttributeIDTypeClusterIlluminanceMeasurementAttributeLightSensorTypeID = 4,

	AttributeIDTypeClusterIlluminanceMeasurementAttributeGeneratedCommandListID = 65528,

	AttributeIDTypeClusterIlluminanceMeasurementAttributeAcceptedCommandListID = 65529,

	AttributeIDTypeClusterIlluminanceMeasurementAttributeEventListID = 65530,

	AttributeIDTypeClusterIlluminanceMeasurementAttributeAttributeListID = 65531,

	AttributeIDTypeClusterIlluminanceMeasurementAttributeFeatureMapID = 65532,

	AttributeIDTypeClusterIlluminanceMeasurementAttributeClusterRevisionID = 65533,

	ClusterTemperatureMeasurementAttributeMeasuredValueID = 0,

	ClusterTemperatureMeasurementAttributeMinMeasuredValueID = 1,

	ClusterTemperatureMeasurementAttributeMaxMeasuredValueID = 2,

	ClusterTemperatureMeasurementAttributeToleranceID = 3,

	ClusterTemperatureMeasurementAttributeGeneratedCommandListID = 65528,

	ClusterTemperatureMeasurementAttributeAcceptedCommandListID = 65529,

	ClusterTemperatureMeasurementAttributeAttributeListID = 65531,

	ClusterTemperatureMeasurementAttributeFeatureMapID = 65532,

	ClusterTemperatureMeasurementAttributeClusterRevisionID = 65533,

	AttributeIDTypeClusterTemperatureMeasurementAttributeMeasuredValueID = 0,

	AttributeIDTypeClusterTemperatureMeasurementAttributeMinMeasuredValueID = 1,

	AttributeIDTypeClusterTemperatureMeasurementAttributeMaxMeasuredValueID = 2,

	AttributeIDTypeClusterTemperatureMeasurementAttributeToleranceID = 3,

	AttributeIDTypeClusterTemperatureMeasurementAttributeGeneratedCommandListID = 65528,

	AttributeIDTypeClusterTemperatureMeasurementAttributeAcceptedCommandListID = 65529,

	AttributeIDTypeClusterTemperatureMeasurementAttributeEventListID = 65530,

	AttributeIDTypeClusterTemperatureMeasurementAttributeAttributeListID = 65531,

	AttributeIDTypeClusterTemperatureMeasurementAttributeFeatureMapID = 65532,

	AttributeIDTypeClusterTemperatureMeasurementAttributeClusterRevisionID = 65533,

	ClusterPressureMeasurementAttributeMeasuredValueID = 0,

	ClusterPressureMeasurementAttributeMinMeasuredValueID = 1,

	ClusterPressureMeasurementAttributeMaxMeasuredValueID = 2,

	ClusterPressureMeasurementAttributeToleranceID = 3,

	ClusterPressureMeasurementAttributeScaledValueID = 16,

	ClusterPressureMeasurementAttributeMinScaledValueID = 17,

	ClusterPressureMeasurementAttributeMaxScaledValueID = 18,

	ClusterPressureMeasurementAttributeScaledToleranceID = 19,

	ClusterPressureMeasurementAttributeScaleID = 20,

	ClusterPressureMeasurementAttributeGeneratedCommandListID = 65528,

	ClusterPressureMeasurementAttributeAcceptedCommandListID = 65529,

	ClusterPressureMeasurementAttributeAttributeListID = 65531,

	ClusterPressureMeasurementAttributeFeatureMapID = 65532,

	ClusterPressureMeasurementAttributeClusterRevisionID = 65533,

	AttributeIDTypeClusterPressureMeasurementAttributeMeasuredValueID = 0,

	AttributeIDTypeClusterPressureMeasurementAttributeMinMeasuredValueID = 1,

	AttributeIDTypeClusterPressureMeasurementAttributeMaxMeasuredValueID = 2,

	AttributeIDTypeClusterPressureMeasurementAttributeToleranceID = 3,

	AttributeIDTypeClusterPressureMeasurementAttributeScaledValueID = 16,

	AttributeIDTypeClusterPressureMeasurementAttributeMinScaledValueID = 17,

	AttributeIDTypeClusterPressureMeasurementAttributeMaxScaledValueID = 18,

	AttributeIDTypeClusterPressureMeasurementAttributeScaledToleranceID = 19,

	AttributeIDTypeClusterPressureMeasurementAttributeScaleID = 20,

	AttributeIDTypeClusterPressureMeasurementAttributeGeneratedCommandListID = 65528,

	AttributeIDTypeClusterPressureMeasurementAttributeAcceptedCommandListID = 65529,

	AttributeIDTypeClusterPressureMeasurementAttributeEventListID = 65530,

	AttributeIDTypeClusterPressureMeasurementAttributeAttributeListID = 65531,

	AttributeIDTypeClusterPressureMeasurementAttributeFeatureMapID = 65532,

	AttributeIDTypeClusterPressureMeasurementAttributeClusterRevisionID = 65533,

	ClusterFlowMeasurementAttributeMeasuredValueID = 0,

	ClusterFlowMeasurementAttributeMinMeasuredValueID = 1,

	ClusterFlowMeasurementAttributeMaxMeasuredValueID = 2,

	ClusterFlowMeasurementAttributeToleranceID = 3,

	ClusterFlowMeasurementAttributeGeneratedCommandListID = 65528,

	ClusterFlowMeasurementAttributeAcceptedCommandListID = 65529,

	ClusterFlowMeasurementAttributeAttributeListID = 65531,

	ClusterFlowMeasurementAttributeFeatureMapID = 65532,

	ClusterFlowMeasurementAttributeClusterRevisionID = 65533,

	AttributeIDTypeClusterFlowMeasurementAttributeMeasuredValueID = 0,

	AttributeIDTypeClusterFlowMeasurementAttributeMinMeasuredValueID = 1,

	AttributeIDTypeClusterFlowMeasurementAttributeMaxMeasuredValueID = 2,

	AttributeIDTypeClusterFlowMeasurementAttributeToleranceID = 3,

	AttributeIDTypeClusterFlowMeasurementAttributeGeneratedCommandListID = 65528,

	AttributeIDTypeClusterFlowMeasurementAttributeAcceptedCommandListID = 65529,

	AttributeIDTypeClusterFlowMeasurementAttributeEventListID = 65530,

	AttributeIDTypeClusterFlowMeasurementAttributeAttributeListID = 65531,

	AttributeIDTypeClusterFlowMeasurementAttributeFeatureMapID = 65532,

	AttributeIDTypeClusterFlowMeasurementAttributeClusterRevisionID = 65533,

	ClusterRelativeHumidityMeasurementAttributeMeasuredValueID = 0,

	ClusterRelativeHumidityMeasurementAttributeMinMeasuredValueID = 1,

	ClusterRelativeHumidityMeasurementAttributeMaxMeasuredValueID = 2,

	ClusterRelativeHumidityMeasurementAttributeToleranceID = 3,

	ClusterRelativeHumidityMeasurementAttributeGeneratedCommandListID = 65528,

	ClusterRelativeHumidityMeasurementAttributeAcceptedCommandListID = 65529,

	ClusterRelativeHumidityMeasurementAttributeAttributeListID = 65531,

	ClusterRelativeHumidityMeasurementAttributeFeatureMapID = 65532,

	ClusterRelativeHumidityMeasurementAttributeClusterRevisionID = 65533,

	AttributeIDTypeClusterRelativeHumidityMeasurementAttributeMeasuredValueID = 0,

	AttributeIDTypeClusterRelativeHumidityMeasurementAttributeMinMeasuredValueID = 1,

	AttributeIDTypeClusterRelativeHumidityMeasurementAttributeMaxMeasuredValueID = 2,

	AttributeIDTypeClusterRelativeHumidityMeasurementAttributeToleranceID = 3,

	AttributeIDTypeClusterRelativeHumidityMeasurementAttributeGeneratedCommandListID = 65528,

	AttributeIDTypeClusterRelativeHumidityMeasurementAttributeAcceptedCommandListID = 65529,

	AttributeIDTypeClusterRelativeHumidityMeasurementAttributeEventListID = 65530,

	AttributeIDTypeClusterRelativeHumidityMeasurementAttributeAttributeListID = 65531,

	AttributeIDTypeClusterRelativeHumidityMeasurementAttributeFeatureMapID = 65532,

	AttributeIDTypeClusterRelativeHumidityMeasurementAttributeClusterRevisionID = 65533,

	ClusterOccupancySensingAttributeOccupancyID = 0,

	ClusterOccupancySensingAttributeOccupancySensorTypeID = 1,

	ClusterOccupancySensingAttributeOccupancySensorTypeBitmapID = 2,

	ClusterOccupancySensingAttributePirOccupiedToUnoccupiedDelayID = 16,

	ClusterOccupancySensingAttributePirUnoccupiedToOccupiedDelayID = 17,

	ClusterOccupancySensingAttributePirUnoccupiedToOccupiedThresholdID = 18,

	ClusterOccupancySensingAttributeUltrasonicOccupiedToUnoccupiedDelayID = 32,

	ClusterOccupancySensingAttributeUltrasonicUnoccupiedToOccupiedDelayID = 33,

	ClusterOccupancySensingAttributeUltrasonicUnoccupiedToOccupiedThresholdID = 34,

	ClusterOccupancySensingAttributePhysicalContactOccupiedToUnoccupiedDelayID = 48,

	ClusterOccupancySensingAttributePhysicalContactUnoccupiedToOccupiedDelayID = 49,

	ClusterOccupancySensingAttributePhysicalContactUnoccupiedToOccupiedThresholdID = 50,

	ClusterOccupancySensingAttributeGeneratedCommandListID = 65528,

	ClusterOccupancySensingAttributeAcceptedCommandListID = 65529,

	ClusterOccupancySensingAttributeAttributeListID = 65531,

	ClusterOccupancySensingAttributeFeatureMapID = 65532,

	ClusterOccupancySensingAttributeClusterRevisionID = 65533,

	AttributeIDTypeClusterOccupancySensingAttributeOccupancyID = 0,

	AttributeIDTypeClusterOccupancySensingAttributeOccupancySensorTypeID = 1,

	AttributeIDTypeClusterOccupancySensingAttributeOccupancySensorTypeBitmapID = 2,

	AttributeIDTypeClusterOccupancySensingAttributePIROccupiedToUnoccupiedDelayID = 16,

	AttributeIDTypeClusterOccupancySensingAttributePIRUnoccupiedToOccupiedDelayID = 17,

	AttributeIDTypeClusterOccupancySensingAttributePIRUnoccupiedToOccupiedThresholdID = 18,

	AttributeIDTypeClusterOccupancySensingAttributeUltrasonicOccupiedToUnoccupiedDelayID = 32,

	AttributeIDTypeClusterOccupancySensingAttributeUltrasonicUnoccupiedToOccupiedDelayID = 33,

	AttributeIDTypeClusterOccupancySensingAttributeUltrasonicUnoccupiedToOccupiedThresholdID = 34,

	AttributeIDTypeClusterOccupancySensingAttributePhysicalContactOccupiedToUnoccupiedDelayID = 48,

	AttributeIDTypeClusterOccupancySensingAttributePhysicalContactUnoccupiedToOccupiedDelayID = 49,

	AttributeIDTypeClusterOccupancySensingAttributePhysicalContactUnoccupiedToOccupiedThresholdID = 50,

	AttributeIDTypeClusterOccupancySensingAttributeGeneratedCommandListID = 65528,

	AttributeIDTypeClusterOccupancySensingAttributeAcceptedCommandListID = 65529,

	AttributeIDTypeClusterOccupancySensingAttributeEventListID = 65530,

	AttributeIDTypeClusterOccupancySensingAttributeAttributeListID = 65531,

	AttributeIDTypeClusterOccupancySensingAttributeFeatureMapID = 65532,

	AttributeIDTypeClusterOccupancySensingAttributeClusterRevisionID = 65533,

	AttributeIDTypeClusterCarbonMonoxideConcentrationMeasurementAttributeMeasuredValueID = 0,

	AttributeIDTypeClusterCarbonMonoxideConcentrationMeasurementAttributeMinMeasuredValueID = 1,

	AttributeIDTypeClusterCarbonMonoxideConcentrationMeasurementAttributeMaxMeasuredValueID = 2,

	AttributeIDTypeClusterCarbonMonoxideConcentrationMeasurementAttributePeakMeasuredValueID = 3,

	AttributeIDTypeClusterCarbonMonoxideConcentrationMeasurementAttributePeakMeasuredValueWindowID = 4,

	AttributeIDTypeClusterCarbonMonoxideConcentrationMeasurementAttributeAverageMeasuredValueID = 5,

	AttributeIDTypeClusterCarbonMonoxideConcentrationMeasurementAttributeAverageMeasuredValueWindowID = 6,

	AttributeIDTypeClusterCarbonMonoxideConcentrationMeasurementAttributeUncertaintyID = 7,

	AttributeIDTypeClusterCarbonMonoxideConcentrationMeasurementAttributeMeasurementUnitID = 8,

	AttributeIDTypeClusterCarbonMonoxideConcentrationMeasurementAttributeMeasurementMediumID = 9,

	AttributeIDTypeClusterCarbonMonoxideConcentrationMeasurementAttributeLevelValueID = 10,

	AttributeIDTypeClusterCarbonMonoxideConcentrationMeasurementAttributeGeneratedCommandListID = 65528,

	AttributeIDTypeClusterCarbonMonoxideConcentrationMeasurementAttributeAcceptedCommandListID = 65529,

	AttributeIDTypeClusterCarbonMonoxideConcentrationMeasurementAttributeEventListID = 65530,

	AttributeIDTypeClusterCarbonMonoxideConcentrationMeasurementAttributeAttributeListID = 65531,

	AttributeIDTypeClusterCarbonMonoxideConcentrationMeasurementAttributeFeatureMapID = 65532,

	AttributeIDTypeClusterCarbonMonoxideConcentrationMeasurementAttributeClusterRevisionID = 65533,

	AttributeIDTypeClusterCarbonDioxideConcentrationMeasurementAttributeMeasuredValueID = 0,

	AttributeIDTypeClusterCarbonDioxideConcentrationMeasurementAttributeMinMeasuredValueID = 1,

	AttributeIDTypeClusterCarbonDioxideConcentrationMeasurementAttributeMaxMeasuredValueID = 2,

	AttributeIDTypeClusterCarbonDioxideConcentrationMeasurementAttributePeakMeasuredValueID = 3,

	AttributeIDTypeClusterCarbonDioxideConcentrationMeasurementAttributePeakMeasuredValueWindowID = 4,

	AttributeIDTypeClusterCarbonDioxideConcentrationMeasurementAttributeAverageMeasuredValueID = 5,

	AttributeIDTypeClusterCarbonDioxideConcentrationMeasurementAttributeAverageMeasuredValueWindowID = 6,

	AttributeIDTypeClusterCarbonDioxideConcentrationMeasurementAttributeUncertaintyID = 7,

	AttributeIDTypeClusterCarbonDioxideConcentrationMeasurementAttributeMeasurementUnitID = 8,

	AttributeIDTypeClusterCarbonDioxideConcentrationMeasurementAttributeMeasurementMediumID = 9,

	AttributeIDTypeClusterCarbonDioxideConcentrationMeasurementAttributeLevelValueID = 10,

	AttributeIDTypeClusterCarbonDioxideConcentrationMeasurementAttributeGeneratedCommandListID = 65528,

	AttributeIDTypeClusterCarbonDioxideConcentrationMeasurementAttributeAcceptedCommandListID = 65529,

	AttributeIDTypeClusterCarbonDioxideConcentrationMeasurementAttributeEventListID = 65530,

	AttributeIDTypeClusterCarbonDioxideConcentrationMeasurementAttributeAttributeListID = 65531,

	AttributeIDTypeClusterCarbonDioxideConcentrationMeasurementAttributeFeatureMapID = 65532,

	AttributeIDTypeClusterCarbonDioxideConcentrationMeasurementAttributeClusterRevisionID = 65533,

	AttributeIDTypeClusterNitrogenDioxideConcentrationMeasurementAttributeMeasuredValueID = 0,

	AttributeIDTypeClusterNitrogenDioxideConcentrationMeasurementAttributeMinMeasuredValueID = 1,

	AttributeIDTypeClusterNitrogenDioxideConcentrationMeasurementAttributeMaxMeasuredValueID = 2,

	AttributeIDTypeClusterNitrogenDioxideConcentrationMeasurementAttributePeakMeasuredValueID = 3,

	AttributeIDTypeClusterNitrogenDioxideConcentrationMeasurementAttributePeakMeasuredValueWindowID = 4,

	AttributeIDTypeClusterNitrogenDioxideConcentrationMeasurementAttributeAverageMeasuredValueID = 5,

	AttributeIDTypeClusterNitrogenDioxideConcentrationMeasurementAttributeAverageMeasuredValueWindowID = 6,

	AttributeIDTypeClusterNitrogenDioxideConcentrationMeasurementAttributeUncertaintyID = 7,

	AttributeIDTypeClusterNitrogenDioxideConcentrationMeasurementAttributeMeasurementUnitID = 8,

	AttributeIDTypeClusterNitrogenDioxideConcentrationMeasurementAttributeMeasurementMediumID = 9,

	AttributeIDTypeClusterNitrogenDioxideConcentrationMeasurementAttributeLevelValueID = 10,

	AttributeIDTypeClusterNitrogenDioxideConcentrationMeasurementAttributeGeneratedCommandListID = 65528,

	AttributeIDTypeClusterNitrogenDioxideConcentrationMeasurementAttributeAcceptedCommandListID = 65529,

	AttributeIDTypeClusterNitrogenDioxideConcentrationMeasurementAttributeEventListID = 65530,

	AttributeIDTypeClusterNitrogenDioxideConcentrationMeasurementAttributeAttributeListID = 65531,

	AttributeIDTypeClusterNitrogenDioxideConcentrationMeasurementAttributeFeatureMapID = 65532,

	AttributeIDTypeClusterNitrogenDioxideConcentrationMeasurementAttributeClusterRevisionID = 65533,

	AttributeIDTypeClusterOzoneConcentrationMeasurementAttributeMeasuredValueID = 0,

	AttributeIDTypeClusterOzoneConcentrationMeasurementAttributeMinMeasuredValueID = 1,

	AttributeIDTypeClusterOzoneConcentrationMeasurementAttributeMaxMeasuredValueID = 2,

	AttributeIDTypeClusterOzoneConcentrationMeasurementAttributePeakMeasuredValueID = 3,

	AttributeIDTypeClusterOzoneConcentrationMeasurementAttributePeakMeasuredValueWindowID = 4,

	AttributeIDTypeClusterOzoneConcentrationMeasurementAttributeAverageMeasuredValueID = 5,

	AttributeIDTypeClusterOzoneConcentrationMeasurementAttributeAverageMeasuredValueWindowID = 6,

	AttributeIDTypeClusterOzoneConcentrationMeasurementAttributeUncertaintyID = 7,

	AttributeIDTypeClusterOzoneConcentrationMeasurementAttributeMeasurementUnitID = 8,

	AttributeIDTypeClusterOzoneConcentrationMeasurementAttributeMeasurementMediumID = 9,

	AttributeIDTypeClusterOzoneConcentrationMeasurementAttributeLevelValueID = 10,

	AttributeIDTypeClusterOzoneConcentrationMeasurementAttributeGeneratedCommandListID = 65528,

	AttributeIDTypeClusterOzoneConcentrationMeasurementAttributeAcceptedCommandListID = 65529,

	AttributeIDTypeClusterOzoneConcentrationMeasurementAttributeEventListID = 65530,

	AttributeIDTypeClusterOzoneConcentrationMeasurementAttributeAttributeListID = 65531,

	AttributeIDTypeClusterOzoneConcentrationMeasurementAttributeFeatureMapID = 65532,

	AttributeIDTypeClusterOzoneConcentrationMeasurementAttributeClusterRevisionID = 65533,

	AttributeIDTypeClusterPM25ConcentrationMeasurementAttributeMeasuredValueID = 0,

	AttributeIDTypeClusterPM25ConcentrationMeasurementAttributeMinMeasuredValueID = 1,

	AttributeIDTypeClusterPM25ConcentrationMeasurementAttributeMaxMeasuredValueID = 2,

	AttributeIDTypeClusterPM25ConcentrationMeasurementAttributePeakMeasuredValueID = 3,

	AttributeIDTypeClusterPM25ConcentrationMeasurementAttributePeakMeasuredValueWindowID = 4,

	AttributeIDTypeClusterPM25ConcentrationMeasurementAttributeAverageMeasuredValueID = 5,

	AttributeIDTypeClusterPM25ConcentrationMeasurementAttributeAverageMeasuredValueWindowID = 6,

	AttributeIDTypeClusterPM25ConcentrationMeasurementAttributeUncertaintyID = 7,

	AttributeIDTypeClusterPM25ConcentrationMeasurementAttributeMeasurementUnitID = 8,

	AttributeIDTypeClusterPM25ConcentrationMeasurementAttributeMeasurementMediumID = 9,

	AttributeIDTypeClusterPM25ConcentrationMeasurementAttributeLevelValueID = 10,

	AttributeIDTypeClusterPM25ConcentrationMeasurementAttributeGeneratedCommandListID = 65528,

	AttributeIDTypeClusterPM25ConcentrationMeasurementAttributeAcceptedCommandListID = 65529,

	AttributeIDTypeClusterPM25ConcentrationMeasurementAttributeEventListID = 65530,

	AttributeIDTypeClusterPM25ConcentrationMeasurementAttributeAttributeListID = 65531,

	AttributeIDTypeClusterPM25ConcentrationMeasurementAttributeFeatureMapID = 65532,

	AttributeIDTypeClusterPM25ConcentrationMeasurementAttributeClusterRevisionID = 65533,

	AttributeIDTypeClusterFormaldehydeConcentrationMeasurementAttributeMeasuredValueID = 0,

	AttributeIDTypeClusterFormaldehydeConcentrationMeasurementAttributeMinMeasuredValueID = 1,

	AttributeIDTypeClusterFormaldehydeConcentrationMeasurementAttributeMaxMeasuredValueID = 2,

	AttributeIDTypeClusterFormaldehydeConcentrationMeasurementAttributePeakMeasuredValueID = 3,

	AttributeIDTypeClusterFormaldehydeConcentrationMeasurementAttributePeakMeasuredValueWindowID = 4,

	AttributeIDTypeClusterFormaldehydeConcentrationMeasurementAttributeAverageMeasuredValueID = 5,

	AttributeIDTypeClusterFormaldehydeConcentrationMeasurementAttributeAverageMeasuredValueWindowID = 6,

	AttributeIDTypeClusterFormaldehydeConcentrationMeasurementAttributeUncertaintyID = 7,

	AttributeIDTypeClusterFormaldehydeConcentrationMeasurementAttributeMeasurementUnitID = 8,

	AttributeIDTypeClusterFormaldehydeConcentrationMeasurementAttributeMeasurementMediumID = 9,

	AttributeIDTypeClusterFormaldehydeConcentrationMeasurementAttributeLevelValueID = 10,

	AttributeIDTypeClusterFormaldehydeConcentrationMeasurementAttributeGeneratedCommandListID = 65528,

	AttributeIDTypeClusterFormaldehydeConcentrationMeasurementAttributeAcceptedCommandListID = 65529,

	AttributeIDTypeClusterFormaldehydeConcentrationMeasurementAttributeEventListID = 65530,

	AttributeIDTypeClusterFormaldehydeConcentrationMeasurementAttributeAttributeListID = 65531,

	AttributeIDTypeClusterFormaldehydeConcentrationMeasurementAttributeFeatureMapID = 65532,

	AttributeIDTypeClusterFormaldehydeConcentrationMeasurementAttributeClusterRevisionID = 65533,

	AttributeIDTypeClusterPM1ConcentrationMeasurementAttributeMeasuredValueID = 0,

	AttributeIDTypeClusterPM1ConcentrationMeasurementAttributeMinMeasuredValueID = 1,

	AttributeIDTypeClusterPM1ConcentrationMeasurementAttributeMaxMeasuredValueID = 2,

	AttributeIDTypeClusterPM1ConcentrationMeasurementAttributePeakMeasuredValueID = 3,

	AttributeIDTypeClusterPM1ConcentrationMeasurementAttributePeakMeasuredValueWindowID = 4,

	AttributeIDTypeClusterPM1ConcentrationMeasurementAttributeAverageMeasuredValueID = 5,

	AttributeIDTypeClusterPM1ConcentrationMeasurementAttributeAverageMeasuredValueWindowID = 6,

	AttributeIDTypeClusterPM1ConcentrationMeasurementAttributeUncertaintyID = 7,

	AttributeIDTypeClusterPM1ConcentrationMeasurementAttributeMeasurementUnitID = 8,

	AttributeIDTypeClusterPM1ConcentrationMeasurementAttributeMeasurementMediumID = 9,

	AttributeIDTypeClusterPM1ConcentrationMeasurementAttributeLevelValueID = 10,

	AttributeIDTypeClusterPM1ConcentrationMeasurementAttributeGeneratedCommandListID = 65528,

	AttributeIDTypeClusterPM1ConcentrationMeasurementAttributeAcceptedCommandListID = 65529,

	AttributeIDTypeClusterPM1ConcentrationMeasurementAttributeEventListID = 65530,

	AttributeIDTypeClusterPM1ConcentrationMeasurementAttributeAttributeListID = 65531,

	AttributeIDTypeClusterPM1ConcentrationMeasurementAttributeFeatureMapID = 65532,

	AttributeIDTypeClusterPM1ConcentrationMeasurementAttributeClusterRevisionID = 65533,

	AttributeIDTypeClusterPM10ConcentrationMeasurementAttributeMeasuredValueID = 0,

	AttributeIDTypeClusterPM10ConcentrationMeasurementAttributeMinMeasuredValueID = 1,

	AttributeIDTypeClusterPM10ConcentrationMeasurementAttributeMaxMeasuredValueID = 2,

	AttributeIDTypeClusterPM10ConcentrationMeasurementAttributePeakMeasuredValueID = 3,

	AttributeIDTypeClusterPM10ConcentrationMeasurementAttributePeakMeasuredValueWindowID = 4,

	AttributeIDTypeClusterPM10ConcentrationMeasurementAttributeAverageMeasuredValueID = 5,

	AttributeIDTypeClusterPM10ConcentrationMeasurementAttributeAverageMeasuredValueWindowID = 6,

	AttributeIDTypeClusterPM10ConcentrationMeasurementAttributeUncertaintyID = 7,

	AttributeIDTypeClusterPM10ConcentrationMeasurementAttributeMeasurementUnitID = 8,

	AttributeIDTypeClusterPM10ConcentrationMeasurementAttributeMeasurementMediumID = 9,

	AttributeIDTypeClusterPM10ConcentrationMeasurementAttributeLevelValueID = 10,

	AttributeIDTypeClusterPM10ConcentrationMeasurementAttributeGeneratedCommandListID = 65528,

	AttributeIDTypeClusterPM10ConcentrationMeasurementAttributeAcceptedCommandListID = 65529,

	AttributeIDTypeClusterPM10ConcentrationMeasurementAttributeEventListID = 65530,

	AttributeIDTypeClusterPM10ConcentrationMeasurementAttributeAttributeListID = 65531,

	AttributeIDTypeClusterPM10ConcentrationMeasurementAttributeFeatureMapID = 65532,

	AttributeIDTypeClusterPM10ConcentrationMeasurementAttributeClusterRevisionID = 65533,

	AttributeIDTypeClusterTotalVolatileOrganicCompoundsConcentrationMeasurementAttributeMeasuredValueID = 0,

	AttributeIDTypeClusterTotalVolatileOrganicCompoundsConcentrationMeasurementAttributeMinMeasuredValueID = 1,

	AttributeIDTypeClusterTotalVolatileOrganicCompoundsConcentrationMeasurementAttributeMaxMeasuredValueID = 2,

	AttributeIDTypeClusterTotalVolatileOrganicCompoundsConcentrationMeasurementAttributePeakMeasuredValueID = 3,

	AttributeIDTypeClusterTotalVolatileOrganicCompoundsConcentrationMeasurementAttributePeakMeasuredValueWindowID = 4,

	AttributeIDTypeClusterTotalVolatileOrganicCompoundsConcentrationMeasurementAttributeAverageMeasuredValueID = 5,

	AttributeIDTypeClusterTotalVolatileOrganicCompoundsConcentrationMeasurementAttributeAverageMeasuredValueWindowID = 6,

	AttributeIDTypeClusterTotalVolatileOrganicCompoundsConcentrationMeasurementAttributeUncertaintyID = 7,

	AttributeIDTypeClusterTotalVolatileOrganicCompoundsConcentrationMeasurementAttributeMeasurementUnitID = 8,

	AttributeIDTypeClusterTotalVolatileOrganicCompoundsConcentrationMeasurementAttributeMeasurementMediumID = 9,

	AttributeIDTypeClusterTotalVolatileOrganicCompoundsConcentrationMeasurementAttributeLevelValueID = 10,

	AttributeIDTypeClusterTotalVolatileOrganicCompoundsConcentrationMeasurementAttributeGeneratedCommandListID = 65528,

	AttributeIDTypeClusterTotalVolatileOrganicCompoundsConcentrationMeasurementAttributeAcceptedCommandListID = 65529,

	AttributeIDTypeClusterTotalVolatileOrganicCompoundsConcentrationMeasurementAttributeEventListID = 65530,

	AttributeIDTypeClusterTotalVolatileOrganicCompoundsConcentrationMeasurementAttributeAttributeListID = 65531,

	AttributeIDTypeClusterTotalVolatileOrganicCompoundsConcentrationMeasurementAttributeFeatureMapID = 65532,

	AttributeIDTypeClusterTotalVolatileOrganicCompoundsConcentrationMeasurementAttributeClusterRevisionID = 65533,

	AttributeIDTypeClusterRadonConcentrationMeasurementAttributeMeasuredValueID = 0,

	AttributeIDTypeClusterRadonConcentrationMeasurementAttributeMinMeasuredValueID = 1,

	AttributeIDTypeClusterRadonConcentrationMeasurementAttributeMaxMeasuredValueID = 2,

	AttributeIDTypeClusterRadonConcentrationMeasurementAttributePeakMeasuredValueID = 3,

	AttributeIDTypeClusterRadonConcentrationMeasurementAttributePeakMeasuredValueWindowID = 4,

	AttributeIDTypeClusterRadonConcentrationMeasurementAttributeAverageMeasuredValueID = 5,

	AttributeIDTypeClusterRadonConcentrationMeasurementAttributeAverageMeasuredValueWindowID = 6,

	AttributeIDTypeClusterRadonConcentrationMeasurementAttributeUncertaintyID = 7,

	AttributeIDTypeClusterRadonConcentrationMeasurementAttributeMeasurementUnitID = 8,

	AttributeIDTypeClusterRadonConcentrationMeasurementAttributeMeasurementMediumID = 9,

	AttributeIDTypeClusterRadonConcentrationMeasurementAttributeLevelValueID = 10,

	AttributeIDTypeClusterRadonConcentrationMeasurementAttributeGeneratedCommandListID = 65528,

	AttributeIDTypeClusterRadonConcentrationMeasurementAttributeAcceptedCommandListID = 65529,

	AttributeIDTypeClusterRadonConcentrationMeasurementAttributeEventListID = 65530,

	AttributeIDTypeClusterRadonConcentrationMeasurementAttributeAttributeListID = 65531,

	AttributeIDTypeClusterRadonConcentrationMeasurementAttributeFeatureMapID = 65532,

	AttributeIDTypeClusterRadonConcentrationMeasurementAttributeClusterRevisionID = 65533,

	ClusterWakeOnLanAttributeMACAddressID = 0,

	ClusterWakeOnLanAttributeGeneratedCommandListID = 65528,

	ClusterWakeOnLanAttributeAcceptedCommandListID = 65529,

	ClusterWakeOnLanAttributeAttributeListID = 65531,

	ClusterWakeOnLanAttributeFeatureMapID = 65532,

	ClusterWakeOnLanAttributeClusterRevisionID = 65533,

	AttributeIDTypeClusterWakeOnLANAttributeMACAddressID = 0,

	AttributeIDTypeClusterWakeOnLANAttributeLinkLocalAddressID = 1,

	AttributeIDTypeClusterWakeOnLANAttributeGeneratedCommandListID = 65528,

	AttributeIDTypeClusterWakeOnLANAttributeAcceptedCommandListID = 65529,

	AttributeIDTypeClusterWakeOnLANAttributeEventListID = 65530,

	AttributeIDTypeClusterWakeOnLANAttributeAttributeListID = 65531,

	AttributeIDTypeClusterWakeOnLANAttributeFeatureMapID = 65532,

	AttributeIDTypeClusterWakeOnLANAttributeClusterRevisionID = 65533,

	ClusterChannelAttributeChannelListID = 0,

	ClusterChannelAttributeLineupID = 1,

	ClusterChannelAttributeCurrentChannelID = 2,

	ClusterChannelAttributeGeneratedCommandListID = 65528,

	ClusterChannelAttributeAcceptedCommandListID = 65529,

	ClusterChannelAttributeAttributeListID = 65531,

	ClusterChannelAttributeFeatureMapID = 65532,

	ClusterChannelAttributeClusterRevisionID = 65533,

	AttributeIDTypeClusterChannelAttributeChannelListID = 0,

	AttributeIDTypeClusterChannelAttributeLineupID = 1,

	AttributeIDTypeClusterChannelAttributeCurrentChannelID = 2,

	AttributeIDTypeClusterChannelAttributeGeneratedCommandListID = 65528,

	AttributeIDTypeClusterChannelAttributeAcceptedCommandListID = 65529,

	AttributeIDTypeClusterChannelAttributeEventListID = 65530,

	AttributeIDTypeClusterChannelAttributeAttributeListID = 65531,

	AttributeIDTypeClusterChannelAttributeFeatureMapID = 65532,

	AttributeIDTypeClusterChannelAttributeClusterRevisionID = 65533,

	ClusterTargetNavigatorAttributeTargetListID = 0,

	ClusterTargetNavigatorAttributeCurrentTargetID = 1,

	ClusterTargetNavigatorAttributeGeneratedCommandListID = 65528,

	ClusterTargetNavigatorAttributeAcceptedCommandListID = 65529,

	ClusterTargetNavigatorAttributeAttributeListID = 65531,

	ClusterTargetNavigatorAttributeFeatureMapID = 65532,

	ClusterTargetNavigatorAttributeClusterRevisionID = 65533,

	AttributeIDTypeClusterTargetNavigatorAttributeTargetListID = 0,

	AttributeIDTypeClusterTargetNavigatorAttributeCurrentTargetID = 1,

	AttributeIDTypeClusterTargetNavigatorAttributeGeneratedCommandListID = 65528,

	AttributeIDTypeClusterTargetNavigatorAttributeAcceptedCommandListID = 65529,

	AttributeIDTypeClusterTargetNavigatorAttributeEventListID = 65530,

	AttributeIDTypeClusterTargetNavigatorAttributeAttributeListID = 65531,

	AttributeIDTypeClusterTargetNavigatorAttributeFeatureMapID = 65532,

	AttributeIDTypeClusterTargetNavigatorAttributeClusterRevisionID = 65533,

	ClusterMediaPlaybackAttributeCurrentStateID = 0,

	ClusterMediaPlaybackAttributeStartTimeID = 1,

	ClusterMediaPlaybackAttributeDurationID = 2,

	ClusterMediaPlaybackAttributeSampledPositionID = 3,

	ClusterMediaPlaybackAttributePlaybackSpeedID = 4,

	ClusterMediaPlaybackAttributeSeekRangeEndID = 5,

	ClusterMediaPlaybackAttributeSeekRangeStartID = 6,

	ClusterMediaPlaybackAttributeGeneratedCommandListID = 65528,

	ClusterMediaPlaybackAttributeAcceptedCommandListID = 65529,

	ClusterMediaPlaybackAttributeAttributeListID = 65531,

	ClusterMediaPlaybackAttributeFeatureMapID = 65532,

	ClusterMediaPlaybackAttributeClusterRevisionID = 65533,

	AttributeIDTypeClusterMediaPlaybackAttributeCurrentStateID = 0,

	AttributeIDTypeClusterMediaPlaybackAttributeStartTimeID = 1,

	AttributeIDTypeClusterMediaPlaybackAttributeDurationID = 2,

	AttributeIDTypeClusterMediaPlaybackAttributeSampledPositionID = 3,

	AttributeIDTypeClusterMediaPlaybackAttributePlaybackSpeedID = 4,

	AttributeIDTypeClusterMediaPlaybackAttributeSeekRangeEndID = 5,

	AttributeIDTypeClusterMediaPlaybackAttributeSeekRangeStartID = 6,

	AttributeIDTypeClusterMediaPlaybackAttributeActiveAudioTrackID = 7,

	AttributeIDTypeClusterMediaPlaybackAttributeAvailableAudioTracksID = 8,

	AttributeIDTypeClusterMediaPlaybackAttributeActiveTextTrackID = 9,

	AttributeIDTypeClusterMediaPlaybackAttributeAvailableTextTracksID = 10,

	AttributeIDTypeClusterMediaPlaybackAttributeGeneratedCommandListID = 65528,

	AttributeIDTypeClusterMediaPlaybackAttributeAcceptedCommandListID = 65529,

	AttributeIDTypeClusterMediaPlaybackAttributeEventListID = 65530,

	AttributeIDTypeClusterMediaPlaybackAttributeAttributeListID = 65531,

	AttributeIDTypeClusterMediaPlaybackAttributeFeatureMapID = 65532,

	AttributeIDTypeClusterMediaPlaybackAttributeClusterRevisionID = 65533,

	ClusterMediaInputAttributeInputListID = 0,

	ClusterMediaInputAttributeCurrentInputID = 1,

	ClusterMediaInputAttributeGeneratedCommandListID = 65528,

	ClusterMediaInputAttributeAcceptedCommandListID = 65529,

	ClusterMediaInputAttributeAttributeListID = 65531,

	ClusterMediaInputAttributeFeatureMapID = 65532,

	ClusterMediaInputAttributeClusterRevisionID = 65533,

	AttributeIDTypeClusterMediaInputAttributeInputListID = 0,

	AttributeIDTypeClusterMediaInputAttributeCurrentInputID = 1,

	AttributeIDTypeClusterMediaInputAttributeGeneratedCommandListID = 65528,

	AttributeIDTypeClusterMediaInputAttributeAcceptedCommandListID = 65529,

	AttributeIDTypeClusterMediaInputAttributeEventListID = 65530,

	AttributeIDTypeClusterMediaInputAttributeAttributeListID = 65531,

	AttributeIDTypeClusterMediaInputAttributeFeatureMapID = 65532,

	AttributeIDTypeClusterMediaInputAttributeClusterRevisionID = 65533,

	ClusterLowPowerAttributeGeneratedCommandListID = 65528,

	ClusterLowPowerAttributeAcceptedCommandListID = 65529,

	ClusterLowPowerAttributeAttributeListID = 65531,

	ClusterLowPowerAttributeFeatureMapID = 65532,

	ClusterLowPowerAttributeClusterRevisionID = 65533,

	AttributeIDTypeClusterLowPowerAttributeGeneratedCommandListID = 65528,

	AttributeIDTypeClusterLowPowerAttributeAcceptedCommandListID = 65529,

	AttributeIDTypeClusterLowPowerAttributeEventListID = 65530,

	AttributeIDTypeClusterLowPowerAttributeAttributeListID = 65531,

	AttributeIDTypeClusterLowPowerAttributeFeatureMapID = 65532,

	AttributeIDTypeClusterLowPowerAttributeClusterRevisionID = 65533,

	ClusterKeypadInputAttributeGeneratedCommandListID = 65528,

	ClusterKeypadInputAttributeAcceptedCommandListID = 65529,

	ClusterKeypadInputAttributeAttributeListID = 65531,

	ClusterKeypadInputAttributeFeatureMapID = 65532,

	ClusterKeypadInputAttributeClusterRevisionID = 65533,

	AttributeIDTypeClusterKeypadInputAttributeGeneratedCommandListID = 65528,

	AttributeIDTypeClusterKeypadInputAttributeAcceptedCommandListID = 65529,

	AttributeIDTypeClusterKeypadInputAttributeEventListID = 65530,

	AttributeIDTypeClusterKeypadInputAttributeAttributeListID = 65531,

	AttributeIDTypeClusterKeypadInputAttributeFeatureMapID = 65532,

	AttributeIDTypeClusterKeypadInputAttributeClusterRevisionID = 65533,

	ClusterContentLauncherAttributeAcceptHeaderID = 0,

	ClusterContentLauncherAttributeSupportedStreamingProtocolsID = 1,

	ClusterContentLauncherAttributeGeneratedCommandListID = 65528,

	ClusterContentLauncherAttributeAcceptedCommandListID = 65529,

	ClusterContentLauncherAttributeAttributeListID = 65531,

	ClusterContentLauncherAttributeFeatureMapID = 65532,

	ClusterContentLauncherAttributeClusterRevisionID = 65533,

	AttributeIDTypeClusterContentLauncherAttributeAcceptHeaderID = 0,

	AttributeIDTypeClusterContentLauncherAttributeSupportedStreamingProtocolsID = 1,

	AttributeIDTypeClusterContentLauncherAttributeGeneratedCommandListID = 65528,

	AttributeIDTypeClusterContentLauncherAttributeAcceptedCommandListID = 65529,

	AttributeIDTypeClusterContentLauncherAttributeEventListID = 65530,

	AttributeIDTypeClusterContentLauncherAttributeAttributeListID = 65531,

	AttributeIDTypeClusterContentLauncherAttributeFeatureMapID = 65532,

	AttributeIDTypeClusterContentLauncherAttributeClusterRevisionID = 65533,

	ClusterAudioOutputAttributeOutputListID = 0,

	ClusterAudioOutputAttributeCurrentOutputID = 1,

	ClusterAudioOutputAttributeGeneratedCommandListID = 65528,

	ClusterAudioOutputAttributeAcceptedCommandListID = 65529,

	ClusterAudioOutputAttributeAttributeListID = 65531,

	ClusterAudioOutputAttributeFeatureMapID = 65532,

	ClusterAudioOutputAttributeClusterRevisionID = 65533,

	AttributeIDTypeClusterAudioOutputAttributeOutputListID = 0,

	AttributeIDTypeClusterAudioOutputAttributeCurrentOutputID = 1,

	AttributeIDTypeClusterAudioOutputAttributeGeneratedCommandListID = 65528,

	AttributeIDTypeClusterAudioOutputAttributeAcceptedCommandListID = 65529,

	AttributeIDTypeClusterAudioOutputAttributeEventListID = 65530,

	AttributeIDTypeClusterAudioOutputAttributeAttributeListID = 65531,

	AttributeIDTypeClusterAudioOutputAttributeFeatureMapID = 65532,

	AttributeIDTypeClusterAudioOutputAttributeClusterRevisionID = 65533,

	ClusterApplicationLauncherAttributeCatalogListID = 0,

	ClusterApplicationLauncherAttributeCurrentAppID = 1,

	ClusterApplicationLauncherAttributeGeneratedCommandListID = 65528,

	ClusterApplicationLauncherAttributeAcceptedCommandListID = 65529,

	ClusterApplicationLauncherAttributeAttributeListID = 65531,

	ClusterApplicationLauncherAttributeFeatureMapID = 65532,

	ClusterApplicationLauncherAttributeClusterRevisionID = 65533,

	AttributeIDTypeClusterApplicationLauncherAttributeCatalogListID = 0,

	AttributeIDTypeClusterApplicationLauncherAttributeCurrentAppID = 1,

	AttributeIDTypeClusterApplicationLauncherAttributeGeneratedCommandListID = 65528,

	AttributeIDTypeClusterApplicationLauncherAttributeAcceptedCommandListID = 65529,

	AttributeIDTypeClusterApplicationLauncherAttributeEventListID = 65530,

	AttributeIDTypeClusterApplicationLauncherAttributeAttributeListID = 65531,

	AttributeIDTypeClusterApplicationLauncherAttributeFeatureMapID = 65532,

	AttributeIDTypeClusterApplicationLauncherAttributeClusterRevisionID = 65533,

	ClusterApplicationBasicAttributeVendorNameID = 0,

	ClusterApplicationBasicAttributeVendorIDID = 1,

	ClusterApplicationBasicAttributeApplicationNameID = 2,

	ClusterApplicationBasicAttributeProductIDID = 3,

	ClusterApplicationBasicAttributeApplicationID = 4,

	ClusterApplicationBasicAttributeStatusID = 5,

	ClusterApplicationBasicAttributeApplicationVersionID = 6,

	ClusterApplicationBasicAttributeAllowedVendorListID = 7,

	ClusterApplicationBasicAttributeGeneratedCommandListID = 65528,

	ClusterApplicationBasicAttributeAcceptedCommandListID = 65529,

	ClusterApplicationBasicAttributeAttributeListID = 65531,

	ClusterApplicationBasicAttributeFeatureMapID = 65532,

	ClusterApplicationBasicAttributeClusterRevisionID = 65533,

	AttributeIDTypeClusterApplicationBasicAttributeVendorNameID = 0,

	AttributeIDTypeClusterApplicationBasicAttributeVendorIDID = 1,

	AttributeIDTypeClusterApplicationBasicAttributeApplicationNameID = 2,

	AttributeIDTypeClusterApplicationBasicAttributeProductIDID = 3,

	AttributeIDTypeClusterApplicationBasicAttributeApplicationID = 4,

	AttributeIDTypeClusterApplicationBasicAttributeStatusID = 5,

	AttributeIDTypeClusterApplicationBasicAttributeApplicationVersionID = 6,

	AttributeIDTypeClusterApplicationBasicAttributeAllowedVendorListID = 7,

	AttributeIDTypeClusterApplicationBasicAttributeGeneratedCommandListID = 65528,

	AttributeIDTypeClusterApplicationBasicAttributeAcceptedCommandListID = 65529,

	AttributeIDTypeClusterApplicationBasicAttributeEventListID = 65530,

	AttributeIDTypeClusterApplicationBasicAttributeAttributeListID = 65531,

	AttributeIDTypeClusterApplicationBasicAttributeFeatureMapID = 65532,

	AttributeIDTypeClusterApplicationBasicAttributeClusterRevisionID = 65533,

	ClusterAccountLoginAttributeGeneratedCommandListID = 65528,

	ClusterAccountLoginAttributeAcceptedCommandListID = 65529,

	ClusterAccountLoginAttributeAttributeListID = 65531,

	ClusterAccountLoginAttributeFeatureMapID = 65532,

	ClusterAccountLoginAttributeClusterRevisionID = 65533,

	AttributeIDTypeClusterAccountLoginAttributeGeneratedCommandListID = 65528,

	AttributeIDTypeClusterAccountLoginAttributeAcceptedCommandListID = 65529,

	AttributeIDTypeClusterAccountLoginAttributeEventListID = 65530,

	AttributeIDTypeClusterAccountLoginAttributeAttributeListID = 65531,

	AttributeIDTypeClusterAccountLoginAttributeFeatureMapID = 65532,

	AttributeIDTypeClusterAccountLoginAttributeClusterRevisionID = 65533,

	AttributeIDTypeClusterContentControlAttributeEnabledID = 0,

	AttributeIDTypeClusterContentControlAttributeOnDemandRatingsID = 1,

	AttributeIDTypeClusterContentControlAttributeOnDemandRatingThresholdID = 2,

	AttributeIDTypeClusterContentControlAttributeScheduledContentRatingsID = 3,

	AttributeIDTypeClusterContentControlAttributeScheduledContentRatingThresholdID = 4,

	AttributeIDTypeClusterContentControlAttributeScreenDailyTimeID = 5,

	AttributeIDTypeClusterContentControlAttributeRemainingScreenTimeID = 6,

	AttributeIDTypeClusterContentControlAttributeBlockUnratedID = 7,

	AttributeIDTypeClusterContentControlAttributeGeneratedCommandListID = 65528,

	AttributeIDTypeClusterContentControlAttributeAcceptedCommandListID = 65529,

	AttributeIDTypeClusterContentControlAttributeEventListID = 65530,

	AttributeIDTypeClusterContentControlAttributeAttributeListID = 65531,

	AttributeIDTypeClusterContentControlAttributeFeatureMapID = 65532,

	AttributeIDTypeClusterContentControlAttributeClusterRevisionID = 65533,

	AttributeIDTypeClusterContentAppObserverAttributeGeneratedCommandListID = 65528,

	AttributeIDTypeClusterContentAppObserverAttributeAcceptedCommandListID = 65529,

	AttributeIDTypeClusterContentAppObserverAttributeEventListID = 65530,

	AttributeIDTypeClusterContentAppObserverAttributeAttributeListID = 65531,

	AttributeIDTypeClusterContentAppObserverAttributeFeatureMapID = 65532,

	AttributeIDTypeClusterContentAppObserverAttributeClusterRevisionID = 65533,

	ClusterElectricalMeasurementAttributeMeasurementTypeID = 0,

	ClusterElectricalMeasurementAttributeDcVoltageID = 256,

	ClusterElectricalMeasurementAttributeDcVoltageMinID = 257,

	ClusterElectricalMeasurementAttributeDcVoltageMaxID = 258,

	ClusterElectricalMeasurementAttributeDcCurrentID = 259,

	ClusterElectricalMeasurementAttributeDcCurrentMinID = 260,

	ClusterElectricalMeasurementAttributeDcCurrentMaxID = 261,

	ClusterElectricalMeasurementAttributeDcPowerID = 262,

	ClusterElectricalMeasurementAttributeDcPowerMinID = 263,

	ClusterElectricalMeasurementAttributeDcPowerMaxID = 264,

	ClusterElectricalMeasurementAttributeDcVoltageMultiplierID = 512,

	ClusterElectricalMeasurementAttributeDcVoltageDivisorID = 513,

	ClusterElectricalMeasurementAttributeDcCurrentMultiplierID = 514,

	ClusterElectricalMeasurementAttributeDcCurrentDivisorID = 515,

	ClusterElectricalMeasurementAttributeDcPowerMultiplierID = 516,

	ClusterElectricalMeasurementAttributeDcPowerDivisorID = 517,

	ClusterElectricalMeasurementAttributeAcFrequencyID = 768,

	ClusterElectricalMeasurementAttributeAcFrequencyMinID = 769,

	ClusterElectricalMeasurementAttributeAcFrequencyMaxID = 770,

	ClusterElectricalMeasurementAttributeNeutralCurrentID = 771,

	ClusterElectricalMeasurementAttributeTotalActivePowerID = 772,

	ClusterElectricalMeasurementAttributeTotalReactivePowerID = 773,

	ClusterElectricalMeasurementAttributeTotalApparentPowerID = 774,

	ClusterElectricalMeasurementAttributeMeasured1stHarmonicCurrentID = 775,

	ClusterElectricalMeasurementAttributeMeasured3rdHarmonicCurrentID = 776,

	ClusterElectricalMeasurementAttributeMeasured5thHarmonicCurrentID = 777,

	ClusterElectricalMeasurementAttributeMeasured7thHarmonicCurrentID = 778,

	ClusterElectricalMeasurementAttributeMeasured9thHarmonicCurrentID = 779,

	ClusterElectricalMeasurementAttributeMeasured11thHarmonicCurrentID = 780,

	ClusterElectricalMeasurementAttributeMeasuredPhase1stHarmonicCurrentID = 781,

	ClusterElectricalMeasurementAttributeMeasuredPhase3rdHarmonicCurrentID = 782,

	ClusterElectricalMeasurementAttributeMeasuredPhase5thHarmonicCurrentID = 783,

	ClusterElectricalMeasurementAttributeMeasuredPhase7thHarmonicCurrentID = 784,

	ClusterElectricalMeasurementAttributeMeasuredPhase9thHarmonicCurrentID = 785,

	ClusterElectricalMeasurementAttributeMeasuredPhase11thHarmonicCurrentID = 786,

	ClusterElectricalMeasurementAttributeAcFrequencyMultiplierID = 1024,

	ClusterElectricalMeasurementAttributeAcFrequencyDivisorID = 1025,

	ClusterElectricalMeasurementAttributePowerMultiplierID = 1026,

	ClusterElectricalMeasurementAttributePowerDivisorID = 1027,

	ClusterElectricalMeasurementAttributeHarmonicCurrentMultiplierID = 1028,

	ClusterElectricalMeasurementAttributePhaseHarmonicCurrentMultiplierID = 1029,

	ClusterElectricalMeasurementAttributeInstantaneousVoltageID = 1280,

	ClusterElectricalMeasurementAttributeInstantaneousLineCurrentID = 1281,

	ClusterElectricalMeasurementAttributeInstantaneousActiveCurrentID = 1282,

	ClusterElectricalMeasurementAttributeInstantaneousReactiveCurrentID = 1283,

	ClusterElectricalMeasurementAttributeInstantaneousPowerID = 1284,

	ClusterElectricalMeasurementAttributeRmsVoltageID = 1285,

	ClusterElectricalMeasurementAttributeRmsVoltageMinID = 1286,

	ClusterElectricalMeasurementAttributeRmsVoltageMaxID = 1287,

	ClusterElectricalMeasurementAttributeRmsCurrentID = 1288,

	ClusterElectricalMeasurementAttributeRmsCurrentMinID = 1289,

	ClusterElectricalMeasurementAttributeRmsCurrentMaxID = 1290,

	ClusterElectricalMeasurementAttributeActivePowerID = 1291,

	ClusterElectricalMeasurementAttributeActivePowerMinID = 1292,

	ClusterElectricalMeasurementAttributeActivePowerMaxID = 1293,

	ClusterElectricalMeasurementAttributeReactivePowerID = 1294,

	ClusterElectricalMeasurementAttributeApparentPowerID = 1295,

	ClusterElectricalMeasurementAttributePowerFactorID = 1296,

	ClusterElectricalMeasurementAttributeAverageRmsVoltageMeasurementPeriodID = 1297,

	ClusterElectricalMeasurementAttributeAverageRmsUnderVoltageCounterID = 1299,

	ClusterElectricalMeasurementAttributeRmsExtremeOverVoltagePeriodID = 1300,

	ClusterElectricalMeasurementAttributeRmsExtremeUnderVoltagePeriodID = 1301,

	ClusterElectricalMeasurementAttributeRmsVoltageSagPeriodID = 1302,

	ClusterElectricalMeasurementAttributeRmsVoltageSwellPeriodID = 1303,

	ClusterElectricalMeasurementAttributeAcVoltageMultiplierID = 1536,

	ClusterElectricalMeasurementAttributeAcVoltageDivisorID = 1537,

	ClusterElectricalMeasurementAttributeAcCurrentMultiplierID = 1538,

	ClusterElectricalMeasurementAttributeAcCurrentDivisorID = 1539,

	ClusterElectricalMeasurementAttributeAcPowerMultiplierID = 1540,

	ClusterElectricalMeasurementAttributeAcPowerDivisorID = 1541,

	ClusterElectricalMeasurementAttributeOverloadAlarmsMaskID = 1792,

	ClusterElectricalMeasurementAttributeVoltageOverloadID = 1793,

	ClusterElectricalMeasurementAttributeCurrentOverloadID = 1794,

	ClusterElectricalMeasurementAttributeAcOverloadAlarmsMaskID = 2048,

	ClusterElectricalMeasurementAttributeAcVoltageOverloadID = 2049,

	ClusterElectricalMeasurementAttributeAcCurrentOverloadID = 2050,

	ClusterElectricalMeasurementAttributeAcActivePowerOverloadID = 2051,

	ClusterElectricalMeasurementAttributeAcReactivePowerOverloadID = 2052,

	ClusterElectricalMeasurementAttributeAverageRmsOverVoltageID = 2053,

	ClusterElectricalMeasurementAttributeAverageRmsUnderVoltageID = 2054,

	ClusterElectricalMeasurementAttributeRmsExtremeOverVoltageID = 2055,

	ClusterElectricalMeasurementAttributeRmsExtremeUnderVoltageID = 2056,

	ClusterElectricalMeasurementAttributeRmsVoltageSagID = 2057,

	ClusterElectricalMeasurementAttributeRmsVoltageSwellID = 2058,

	ClusterElectricalMeasurementAttributeLineCurrentPhaseBID = 2305,

	ClusterElectricalMeasurementAttributeActiveCurrentPhaseBID = 2306,

	ClusterElectricalMeasurementAttributeReactiveCurrentPhaseBID = 2307,

	ClusterElectricalMeasurementAttributeRmsVoltagePhaseBID = 2309,

	ClusterElectricalMeasurementAttributeRmsVoltageMinPhaseBID = 2310,

	ClusterElectricalMeasurementAttributeRmsVoltageMaxPhaseBID = 2311,

	ClusterElectricalMeasurementAttributeRmsCurrentPhaseBID = 2312,

	ClusterElectricalMeasurementAttributeRmsCurrentMinPhaseBID = 2313,

	ClusterElectricalMeasurementAttributeRmsCurrentMaxPhaseBID = 2314,

	ClusterElectricalMeasurementAttributeActivePowerPhaseBID = 2315,

	ClusterElectricalMeasurementAttributeActivePowerMinPhaseBID = 2316,

	ClusterElectricalMeasurementAttributeActivePowerMaxPhaseBID = 2317,

	ClusterElectricalMeasurementAttributeReactivePowerPhaseBID = 2318,

	ClusterElectricalMeasurementAttributeApparentPowerPhaseBID = 2319,

	ClusterElectricalMeasurementAttributePowerFactorPhaseBID = 2320,

	ClusterElectricalMeasurementAttributeAverageRmsVoltageMeasurementPeriodPhaseBID = 2321,

	ClusterElectricalMeasurementAttributeAverageRmsOverVoltageCounterPhaseBID = 2322,

	ClusterElectricalMeasurementAttributeAverageRmsUnderVoltageCounterPhaseBID = 2323,

	ClusterElectricalMeasurementAttributeRmsExtremeOverVoltagePeriodPhaseBID = 2324,

	ClusterElectricalMeasurementAttributeRmsExtremeUnderVoltagePeriodPhaseBID = 2325,

	ClusterElectricalMeasurementAttributeRmsVoltageSagPeriodPhaseBID = 2326,

	ClusterElectricalMeasurementAttributeRmsVoltageSwellPeriodPhaseBID = 2327,

	ClusterElectricalMeasurementAttributeLineCurrentPhaseCID = 2561,

	ClusterElectricalMeasurementAttributeActiveCurrentPhaseCID = 2562,

	ClusterElectricalMeasurementAttributeReactiveCurrentPhaseCID = 2563,

	ClusterElectricalMeasurementAttributeRmsVoltagePhaseCID = 2565,

	ClusterElectricalMeasurementAttributeRmsVoltageMinPhaseCID = 2566,

	ClusterElectricalMeasurementAttributeRmsVoltageMaxPhaseCID = 2567,

	ClusterElectricalMeasurementAttributeRmsCurrentPhaseCID = 2568,

	ClusterElectricalMeasurementAttributeRmsCurrentMinPhaseCID = 2569,

	ClusterElectricalMeasurementAttributeRmsCurrentMaxPhaseCID = 2570,

	ClusterElectricalMeasurementAttributeActivePowerPhaseCID = 2571,

	ClusterElectricalMeasurementAttributeActivePowerMinPhaseCID = 2572,

	ClusterElectricalMeasurementAttributeActivePowerMaxPhaseCID = 2573,

	ClusterElectricalMeasurementAttributeReactivePowerPhaseCID = 2574,

	ClusterElectricalMeasurementAttributeApparentPowerPhaseCID = 2575,

	ClusterElectricalMeasurementAttributePowerFactorPhaseCID = 2576,

	ClusterElectricalMeasurementAttributeAverageRmsVoltageMeasurementPeriodPhaseCID = 2577,

	ClusterElectricalMeasurementAttributeAverageRmsOverVoltageCounterPhaseCID = 2578,

	ClusterElectricalMeasurementAttributeAverageRmsUnderVoltageCounterPhaseCID = 2579,

	ClusterElectricalMeasurementAttributeRmsExtremeOverVoltagePeriodPhaseCID = 2580,

	ClusterElectricalMeasurementAttributeRmsExtremeUnderVoltagePeriodPhaseCID = 2581,

	ClusterElectricalMeasurementAttributeRmsVoltageSagPeriodPhaseCID = 2582,

	ClusterElectricalMeasurementAttributeRmsVoltageSwellPeriodPhaseCID = 2583,

	ClusterElectricalMeasurementAttributeGeneratedCommandListID = 65528,

	ClusterElectricalMeasurementAttributeAcceptedCommandListID = 65529,

	ClusterElectricalMeasurementAttributeAttributeListID = 65531,

	ClusterElectricalMeasurementAttributeFeatureMapID = 65532,

	ClusterElectricalMeasurementAttributeClusterRevisionID = 65533,

	AttributeIDTypeClusterElectricalMeasurementAttributeMeasurementTypeID = 0,

	AttributeIDTypeClusterElectricalMeasurementAttributeDcVoltageID = 256,

	AttributeIDTypeClusterElectricalMeasurementAttributeDcVoltageMinID = 257,

	AttributeIDTypeClusterElectricalMeasurementAttributeDcVoltageMaxID = 258,

	AttributeIDTypeClusterElectricalMeasurementAttributeDcCurrentID = 259,

	AttributeIDTypeClusterElectricalMeasurementAttributeDcCurrentMinID = 260,

	AttributeIDTypeClusterElectricalMeasurementAttributeDcCurrentMaxID = 261,

	AttributeIDTypeClusterElectricalMeasurementAttributeDcPowerID = 262,

	AttributeIDTypeClusterElectricalMeasurementAttributeDcPowerMinID = 263,

	AttributeIDTypeClusterElectricalMeasurementAttributeDcPowerMaxID = 264,

	AttributeIDTypeClusterElectricalMeasurementAttributeDcVoltageMultiplierID = 512,

	AttributeIDTypeClusterElectricalMeasurementAttributeDcVoltageDivisorID = 513,

	AttributeIDTypeClusterElectricalMeasurementAttributeDcCurrentMultiplierID = 514,

	AttributeIDTypeClusterElectricalMeasurementAttributeDcCurrentDivisorID = 515,

	AttributeIDTypeClusterElectricalMeasurementAttributeDcPowerMultiplierID = 516,

	AttributeIDTypeClusterElectricalMeasurementAttributeDcPowerDivisorID = 517,

	AttributeIDTypeClusterElectricalMeasurementAttributeAcFrequencyID = 768,

	AttributeIDTypeClusterElectricalMeasurementAttributeAcFrequencyMinID = 769,

	AttributeIDTypeClusterElectricalMeasurementAttributeAcFrequencyMaxID = 770,

	AttributeIDTypeClusterElectricalMeasurementAttributeNeutralCurrentID = 771,

	AttributeIDTypeClusterElectricalMeasurementAttributeTotalActivePowerID = 772,

	AttributeIDTypeClusterElectricalMeasurementAttributeTotalReactivePowerID = 773,

	AttributeIDTypeClusterElectricalMeasurementAttributeTotalApparentPowerID = 774,

	AttributeIDTypeClusterElectricalMeasurementAttributeMeasured1stHarmonicCurrentID = 775,

	AttributeIDTypeClusterElectricalMeasurementAttributeMeasured3rdHarmonicCurrentID = 776,

	AttributeIDTypeClusterElectricalMeasurementAttributeMeasured5thHarmonicCurrentID = 777,

	AttributeIDTypeClusterElectricalMeasurementAttributeMeasured7thHarmonicCurrentID = 778,

	AttributeIDTypeClusterElectricalMeasurementAttributeMeasured9thHarmonicCurrentID = 779,

	AttributeIDTypeClusterElectricalMeasurementAttributeMeasured11thHarmonicCurrentID = 780,

	AttributeIDTypeClusterElectricalMeasurementAttributeMeasuredPhase1stHarmonicCurrentID = 781,

	AttributeIDTypeClusterElectricalMeasurementAttributeMeasuredPhase3rdHarmonicCurrentID = 782,

	AttributeIDTypeClusterElectricalMeasurementAttributeMeasuredPhase5thHarmonicCurrentID = 783,

	AttributeIDTypeClusterElectricalMeasurementAttributeMeasuredPhase7thHarmonicCurrentID = 784,

	AttributeIDTypeClusterElectricalMeasurementAttributeMeasuredPhase9thHarmonicCurrentID = 785,

	AttributeIDTypeClusterElectricalMeasurementAttributeMeasuredPhase11thHarmonicCurrentID = 786,

	AttributeIDTypeClusterElectricalMeasurementAttributeAcFrequencyMultiplierID = 1024,

	AttributeIDTypeClusterElectricalMeasurementAttributeAcFrequencyDivisorID = 1025,

	AttributeIDTypeClusterElectricalMeasurementAttributePowerMultiplierID = 1026,

	AttributeIDTypeClusterElectricalMeasurementAttributePowerDivisorID = 1027,

	AttributeIDTypeClusterElectricalMeasurementAttributeHarmonicCurrentMultiplierID = 1028,

	AttributeIDTypeClusterElectricalMeasurementAttributePhaseHarmonicCurrentMultiplierID = 1029,

	AttributeIDTypeClusterElectricalMeasurementAttributeInstantaneousVoltageID = 1280,

	AttributeIDTypeClusterElectricalMeasurementAttributeInstantaneousLineCurrentID = 1281,

	AttributeIDTypeClusterElectricalMeasurementAttributeInstantaneousActiveCurrentID = 1282,

	AttributeIDTypeClusterElectricalMeasurementAttributeInstantaneousReactiveCurrentID = 1283,

	AttributeIDTypeClusterElectricalMeasurementAttributeInstantaneousPowerID = 1284,

	AttributeIDTypeClusterElectricalMeasurementAttributeRmsVoltageID = 1285,

	AttributeIDTypeClusterElectricalMeasurementAttributeRmsVoltageMinID = 1286,

	AttributeIDTypeClusterElectricalMeasurementAttributeRmsVoltageMaxID = 1287,

	AttributeIDTypeClusterElectricalMeasurementAttributeRmsCurrentID = 1288,

	AttributeIDTypeClusterElectricalMeasurementAttributeRmsCurrentMinID = 1289,

	AttributeIDTypeClusterElectricalMeasurementAttributeRmsCurrentMaxID = 1290,

	AttributeIDTypeClusterElectricalMeasurementAttributeActivePowerID = 1291,

	AttributeIDTypeClusterElectricalMeasurementAttributeActivePowerMinID = 1292,

	AttributeIDTypeClusterElectricalMeasurementAttributeActivePowerMaxID = 1293,

	AttributeIDTypeClusterElectricalMeasurementAttributeReactivePowerID = 1294,

	AttributeIDTypeClusterElectricalMeasurementAttributeApparentPowerID = 1295,

	AttributeIDTypeClusterElectricalMeasurementAttributePowerFactorID = 1296,

	AttributeIDTypeClusterElectricalMeasurementAttributeAverageRmsVoltageMeasurementPeriodID = 1297,

	AttributeIDTypeClusterElectricalMeasurementAttributeAverageRmsUnderVoltageCounterID = 1299,

	AttributeIDTypeClusterElectricalMeasurementAttributeRmsExtremeOverVoltagePeriodID = 1300,

	AttributeIDTypeClusterElectricalMeasurementAttributeRmsExtremeUnderVoltagePeriodID = 1301,

	AttributeIDTypeClusterElectricalMeasurementAttributeRmsVoltageSagPeriodID = 1302,

	AttributeIDTypeClusterElectricalMeasurementAttributeRmsVoltageSwellPeriodID = 1303,

	AttributeIDTypeClusterElectricalMeasurementAttributeAcVoltageMultiplierID = 1536,

	AttributeIDTypeClusterElectricalMeasurementAttributeAcVoltageDivisorID = 1537,

	AttributeIDTypeClusterElectricalMeasurementAttributeAcCurrentMultiplierID = 1538,

	AttributeIDTypeClusterElectricalMeasurementAttributeAcCurrentDivisorID = 1539,

	AttributeIDTypeClusterElectricalMeasurementAttributeAcPowerMultiplierID = 1540,

	AttributeIDTypeClusterElectricalMeasurementAttributeAcPowerDivisorID = 1541,

	AttributeIDTypeClusterElectricalMeasurementAttributeOverloadAlarmsMaskID = 1792,

	AttributeIDTypeClusterElectricalMeasurementAttributeVoltageOverloadID = 1793,

	AttributeIDTypeClusterElectricalMeasurementAttributeCurrentOverloadID = 1794,

	AttributeIDTypeClusterElectricalMeasurementAttributeAcOverloadAlarmsMaskID = 2048,

	AttributeIDTypeClusterElectricalMeasurementAttributeAcVoltageOverloadID = 2049,

	AttributeIDTypeClusterElectricalMeasurementAttributeAcCurrentOverloadID = 2050,

	AttributeIDTypeClusterElectricalMeasurementAttributeAcActivePowerOverloadID = 2051,

	AttributeIDTypeClusterElectricalMeasurementAttributeAcReactivePowerOverloadID = 2052,

	AttributeIDTypeClusterElectricalMeasurementAttributeAverageRmsOverVoltageID = 2053,

	AttributeIDTypeClusterElectricalMeasurementAttributeAverageRmsUnderVoltageID = 2054,

	AttributeIDTypeClusterElectricalMeasurementAttributeRmsExtremeOverVoltageID = 2055,

	AttributeIDTypeClusterElectricalMeasurementAttributeRmsExtremeUnderVoltageID = 2056,

	AttributeIDTypeClusterElectricalMeasurementAttributeRmsVoltageSagID = 2057,

	AttributeIDTypeClusterElectricalMeasurementAttributeRmsVoltageSwellID = 2058,

	AttributeIDTypeClusterElectricalMeasurementAttributeLineCurrentPhaseBID = 2305,

	AttributeIDTypeClusterElectricalMeasurementAttributeActiveCurrentPhaseBID = 2306,

	AttributeIDTypeClusterElectricalMeasurementAttributeReactiveCurrentPhaseBID = 2307,

	AttributeIDTypeClusterElectricalMeasurementAttributeRmsVoltagePhaseBID = 2309,

	AttributeIDTypeClusterElectricalMeasurementAttributeRmsVoltageMinPhaseBID = 2310,

	AttributeIDTypeClusterElectricalMeasurementAttributeRmsVoltageMaxPhaseBID = 2311,

	AttributeIDTypeClusterElectricalMeasurementAttributeRmsCurrentPhaseBID = 2312,

	AttributeIDTypeClusterElectricalMeasurementAttributeRmsCurrentMinPhaseBID = 2313,

	AttributeIDTypeClusterElectricalMeasurementAttributeRmsCurrentMaxPhaseBID = 2314,

	AttributeIDTypeClusterElectricalMeasurementAttributeActivePowerPhaseBID = 2315,

	AttributeIDTypeClusterElectricalMeasurementAttributeActivePowerMinPhaseBID = 2316,

	AttributeIDTypeClusterElectricalMeasurementAttributeActivePowerMaxPhaseBID = 2317,

	AttributeIDTypeClusterElectricalMeasurementAttributeReactivePowerPhaseBID = 2318,

	AttributeIDTypeClusterElectricalMeasurementAttributeApparentPowerPhaseBID = 2319,

	AttributeIDTypeClusterElectricalMeasurementAttributePowerFactorPhaseBID = 2320,

	AttributeIDTypeClusterElectricalMeasurementAttributeAverageRmsVoltageMeasurementPeriodPhaseBID = 2321,

	AttributeIDTypeClusterElectricalMeasurementAttributeAverageRmsOverVoltageCounterPhaseBID = 2322,

	AttributeIDTypeClusterElectricalMeasurementAttributeAverageRmsUnderVoltageCounterPhaseBID = 2323,

	AttributeIDTypeClusterElectricalMeasurementAttributeRmsExtremeOverVoltagePeriodPhaseBID = 2324,

	AttributeIDTypeClusterElectricalMeasurementAttributeRmsExtremeUnderVoltagePeriodPhaseBID = 2325,

	AttributeIDTypeClusterElectricalMeasurementAttributeRmsVoltageSagPeriodPhaseBID = 2326,

	AttributeIDTypeClusterElectricalMeasurementAttributeRmsVoltageSwellPeriodPhaseBID = 2327,

	AttributeIDTypeClusterElectricalMeasurementAttributeLineCurrentPhaseCID = 2561,

	AttributeIDTypeClusterElectricalMeasurementAttributeActiveCurrentPhaseCID = 2562,

	AttributeIDTypeClusterElectricalMeasurementAttributeReactiveCurrentPhaseCID = 2563,

	AttributeIDTypeClusterElectricalMeasurementAttributeRmsVoltagePhaseCID = 2565,

	AttributeIDTypeClusterElectricalMeasurementAttributeRmsVoltageMinPhaseCID = 2566,

	AttributeIDTypeClusterElectricalMeasurementAttributeRmsVoltageMaxPhaseCID = 2567,

	AttributeIDTypeClusterElectricalMeasurementAttributeRmsCurrentPhaseCID = 2568,

	AttributeIDTypeClusterElectricalMeasurementAttributeRmsCurrentMinPhaseCID = 2569,

	AttributeIDTypeClusterElectricalMeasurementAttributeRmsCurrentMaxPhaseCID = 2570,

	AttributeIDTypeClusterElectricalMeasurementAttributeActivePowerPhaseCID = 2571,

	AttributeIDTypeClusterElectricalMeasurementAttributeActivePowerMinPhaseCID = 2572,

	AttributeIDTypeClusterElectricalMeasurementAttributeActivePowerMaxPhaseCID = 2573,

	AttributeIDTypeClusterElectricalMeasurementAttributeReactivePowerPhaseCID = 2574,

	AttributeIDTypeClusterElectricalMeasurementAttributeApparentPowerPhaseCID = 2575,

	AttributeIDTypeClusterElectricalMeasurementAttributePowerFactorPhaseCID = 2576,

	AttributeIDTypeClusterElectricalMeasurementAttributeAverageRmsVoltageMeasurementPeriodPhaseCID = 2577,

	AttributeIDTypeClusterElectricalMeasurementAttributeAverageRmsOverVoltageCounterPhaseCID = 2578,

	AttributeIDTypeClusterElectricalMeasurementAttributeAverageRmsUnderVoltageCounterPhaseCID = 2579,

	AttributeIDTypeClusterElectricalMeasurementAttributeRmsExtremeOverVoltagePeriodPhaseCID = 2580,

	AttributeIDTypeClusterElectricalMeasurementAttributeRmsExtremeUnderVoltagePeriodPhaseCID = 2581,

	AttributeIDTypeClusterElectricalMeasurementAttributeRmsVoltageSagPeriodPhaseCID = 2582,

	AttributeIDTypeClusterElectricalMeasurementAttributeRmsVoltageSwellPeriodPhaseCID = 2583,

	AttributeIDTypeClusterElectricalMeasurementAttributeGeneratedCommandListID = 65528,

	AttributeIDTypeClusterElectricalMeasurementAttributeAcceptedCommandListID = 65529,

	AttributeIDTypeClusterElectricalMeasurementAttributeEventListID = 65530,

	AttributeIDTypeClusterElectricalMeasurementAttributeAttributeListID = 65531,

	AttributeIDTypeClusterElectricalMeasurementAttributeFeatureMapID = 65532,

	AttributeIDTypeClusterElectricalMeasurementAttributeClusterRevisionID = 65533,

	ClusterTestClusterAttributeBooleanID = 0,

	ClusterTestClusterAttributeBitmap8ID = 1,

	ClusterTestClusterAttributeBitmap16ID = 2,

	ClusterTestClusterAttributeBitmap32ID = 3,

	ClusterTestClusterAttributeBitmap64ID = 4,

	ClusterTestClusterAttributeInt8uID = 5,

	ClusterTestClusterAttributeInt16uID = 6,

	ClusterTestClusterAttributeInt24uID = 7,

	ClusterTestClusterAttributeInt32uID = 8,

	ClusterTestClusterAttributeInt40uID = 9,

	ClusterTestClusterAttributeInt48uID = 10,

	ClusterTestClusterAttributeInt56uID = 11,

	ClusterTestClusterAttributeInt64uID = 12,

	ClusterTestClusterAttributeInt8sID = 13,

	ClusterTestClusterAttributeInt16sID = 14,

	ClusterTestClusterAttributeInt24sID = 15,

	ClusterTestClusterAttributeInt32sID = 16,

	ClusterTestClusterAttributeInt40sID = 17,

	ClusterTestClusterAttributeInt48sID = 18,

	ClusterTestClusterAttributeInt56sID = 19,

	ClusterTestClusterAttributeInt64sID = 20,

	ClusterTestClusterAttributeEnum8ID = 21,

	ClusterTestClusterAttributeEnum16ID = 22,

	ClusterTestClusterAttributeFloatSingleID = 23,

	ClusterTestClusterAttributeFloatDoubleID = 24,

	ClusterTestClusterAttributeOctetStringID = 25,

	ClusterTestClusterAttributeListInt8uID = 26,

	ClusterTestClusterAttributeListOctetStringID = 27,

	ClusterTestClusterAttributeListStructOctetStringID = 28,

	ClusterTestClusterAttributeLongOctetStringID = 29,

	ClusterTestClusterAttributeCharStringID = 30,

	ClusterTestClusterAttributeLongCharStringID = 31,

	ClusterTestClusterAttributeEpochUsID = 32,

	ClusterTestClusterAttributeEpochSID = 33,

	ClusterTestClusterAttributeVendorIdID = 34,

	ClusterTestClusterAttributeListNullablesAndOptionalsStructID = 35,

	ClusterTestClusterAttributeEnumAttrID = 36,

	ClusterTestClusterAttributeStructAttrID = 37,

	ClusterTestClusterAttributeRangeRestrictedInt8uID = 38,

	ClusterTestClusterAttributeRangeRestrictedInt8sID = 39,

	ClusterTestClusterAttributeRangeRestrictedInt16uID = 40,

	ClusterTestClusterAttributeRangeRestrictedInt16sID = 41,

	ClusterTestClusterAttributeListLongOctetStringID = 42,

	ClusterTestClusterAttributeListFabricScopedID = 43,

	ClusterTestClusterAttributeTimedWriteBooleanID = 48,

	ClusterTestClusterAttributeGeneralErrorBooleanID = 49,

	ClusterTestClusterAttributeClusterErrorBooleanID = 50,

	ClusterTestClusterAttributeUnsupportedID = 255,

	ClusterTestClusterAttributeNullableBooleanID = 16384,

	ClusterTestClusterAttributeNullableBitmap8ID = 16385,

	ClusterTestClusterAttributeNullableBitmap16ID = 16386,

	ClusterTestClusterAttributeNullableBitmap32ID = 16387,

	ClusterTestClusterAttributeNullableBitmap64ID = 16388,

	ClusterTestClusterAttributeNullableInt8uID = 16389,

	ClusterTestClusterAttributeNullableInt16uID = 16390,

	ClusterTestClusterAttributeNullableInt24uID = 16391,

	ClusterTestClusterAttributeNullableInt32uID = 16392,

	ClusterTestClusterAttributeNullableInt40uID = 16393,

	ClusterTestClusterAttributeNullableInt48uID = 16394,

	ClusterTestClusterAttributeNullableInt56uID = 16395,

	ClusterTestClusterAttributeNullableInt64uID = 16396,

	ClusterTestClusterAttributeNullableInt8sID = 16397,

	ClusterTestClusterAttributeNullableInt16sID = 16398,

	ClusterTestClusterAttributeNullableInt24sID = 16399,

	ClusterTestClusterAttributeNullableInt32sID = 16400,

	ClusterTestClusterAttributeNullableInt40sID = 16401,

	ClusterTestClusterAttributeNullableInt48sID = 16402,

	ClusterTestClusterAttributeNullableInt56sID = 16403,

	ClusterTestClusterAttributeNullableInt64sID = 16404,

	ClusterTestClusterAttributeNullableEnum8ID = 16405,

	ClusterTestClusterAttributeNullableEnum16ID = 16406,

	ClusterTestClusterAttributeNullableFloatSingleID = 16407,

	ClusterTestClusterAttributeNullableFloatDoubleID = 16408,

	ClusterTestClusterAttributeNullableOctetStringID = 16409,

	ClusterTestClusterAttributeNullableCharStringID = 16414,

	ClusterTestClusterAttributeNullableEnumAttrID = 16420,

	ClusterTestClusterAttributeNullableStructID = 16421,

	ClusterTestClusterAttributeNullableRangeRestrictedInt8uID = 16422,

	ClusterTestClusterAttributeNullableRangeRestrictedInt8sID = 16423,

	ClusterTestClusterAttributeNullableRangeRestrictedInt16uID = 16424,

	ClusterTestClusterAttributeNullableRangeRestrictedInt16sID = 16425,

	ClusterTestClusterAttributeWriteOnlyInt8uID = 16426,

	ClusterTestClusterAttributeGeneratedCommandListID = 65528,

	ClusterTestClusterAttributeAcceptedCommandListID = 65529,

	ClusterTestClusterAttributeAttributeListID = 65531,

	ClusterTestClusterAttributeFeatureMapID = 65532,

	ClusterTestClusterAttributeClusterRevisionID = 65533,

	AttributeIDTypeClusterUnitTestingAttributeBooleanID = 0,

	AttributeIDTypeClusterUnitTestingAttributeBitmap8ID = 1,

	AttributeIDTypeClusterUnitTestingAttributeBitmap16ID = 2,

	AttributeIDTypeClusterUnitTestingAttributeBitmap32ID = 3,

	AttributeIDTypeClusterUnitTestingAttributeBitmap64ID = 4,

	AttributeIDTypeClusterUnitTestingAttributeInt8uID = 5,

	AttributeIDTypeClusterUnitTestingAttributeInt16uID = 6,

	AttributeIDTypeClusterUnitTestingAttributeInt24uID = 7,

	AttributeIDTypeClusterUnitTestingAttributeInt32uID = 8,

	AttributeIDTypeClusterUnitTestingAttributeInt40uID = 9,

	AttributeIDTypeClusterUnitTestingAttributeInt48uID = 10,

	AttributeIDTypeClusterUnitTestingAttributeInt56uID = 11,

	AttributeIDTypeClusterUnitTestingAttributeInt64uID = 12,

	AttributeIDTypeClusterUnitTestingAttributeInt8sID = 13,

	AttributeIDTypeClusterUnitTestingAttributeInt16sID = 14,

	AttributeIDTypeClusterUnitTestingAttributeInt24sID = 15,

	AttributeIDTypeClusterUnitTestingAttributeInt32sID = 16,

	AttributeIDTypeClusterUnitTestingAttributeInt40sID = 17,

	AttributeIDTypeClusterUnitTestingAttributeInt48sID = 18,

	AttributeIDTypeClusterUnitTestingAttributeInt56sID = 19,

	AttributeIDTypeClusterUnitTestingAttributeInt64sID = 20,

	AttributeIDTypeClusterUnitTestingAttributeEnum8ID = 21,

	AttributeIDTypeClusterUnitTestingAttributeEnum16ID = 22,

	AttributeIDTypeClusterUnitTestingAttributeFloatSingleID = 23,

	AttributeIDTypeClusterUnitTestingAttributeFloatDoubleID = 24,

	AttributeIDTypeClusterUnitTestingAttributeOctetStringID = 25,

	AttributeIDTypeClusterUnitTestingAttributeListInt8uID = 26,

	AttributeIDTypeClusterUnitTestingAttributeListOctetStringID = 27,

	AttributeIDTypeClusterUnitTestingAttributeListStructOctetStringID = 28,

	AttributeIDTypeClusterUnitTestingAttributeLongOctetStringID = 29,

	AttributeIDTypeClusterUnitTestingAttributeCharStringID = 30,

	AttributeIDTypeClusterUnitTestingAttributeLongCharStringID = 31,

	AttributeIDTypeClusterUnitTestingAttributeEpochUsID = 32,

	AttributeIDTypeClusterUnitTestingAttributeEpochSID = 33,

	AttributeIDTypeClusterUnitTestingAttributeVendorIdID = 34,

	AttributeIDTypeClusterUnitTestingAttributeListNullablesAndOptionalsStructID = 35,

	AttributeIDTypeClusterUnitTestingAttributeEnumAttrID = 36,

	AttributeIDTypeClusterUnitTestingAttributeStructAttrID = 37,

	AttributeIDTypeClusterUnitTestingAttributeRangeRestrictedInt8uID = 38,

	AttributeIDTypeClusterUnitTestingAttributeRangeRestrictedInt8sID = 39,

	AttributeIDTypeClusterUnitTestingAttributeRangeRestrictedInt16uID = 40,

	AttributeIDTypeClusterUnitTestingAttributeRangeRestrictedInt16sID = 41,

	AttributeIDTypeClusterUnitTestingAttributeListLongOctetStringID = 42,

	AttributeIDTypeClusterUnitTestingAttributeListFabricScopedID = 43,

	AttributeIDTypeClusterUnitTestingAttributeTimedWriteBooleanID = 48,

	AttributeIDTypeClusterUnitTestingAttributeGeneralErrorBooleanID = 49,

	AttributeIDTypeClusterUnitTestingAttributeClusterErrorBooleanID = 50,

	AttributeIDTypeClusterUnitTestingAttributeUnsupportedID = 255,

	AttributeIDTypeClusterUnitTestingAttributeNullableBooleanID = 16384,

	AttributeIDTypeClusterUnitTestingAttributeNullableBitmap8ID = 16385,

	AttributeIDTypeClusterUnitTestingAttributeNullableBitmap16ID = 16386,

	AttributeIDTypeClusterUnitTestingAttributeNullableBitmap32ID = 16387,

	AttributeIDTypeClusterUnitTestingAttributeNullableBitmap64ID = 16388,

	AttributeIDTypeClusterUnitTestingAttributeNullableInt8uID = 16389,

	AttributeIDTypeClusterUnitTestingAttributeNullableInt16uID = 16390,

	AttributeIDTypeClusterUnitTestingAttributeNullableInt24uID = 16391,

	AttributeIDTypeClusterUnitTestingAttributeNullableInt32uID = 16392,

	AttributeIDTypeClusterUnitTestingAttributeNullableInt40uID = 16393,

	AttributeIDTypeClusterUnitTestingAttributeNullableInt48uID = 16394,

	AttributeIDTypeClusterUnitTestingAttributeNullableInt56uID = 16395,

	AttributeIDTypeClusterUnitTestingAttributeNullableInt64uID = 16396,

	AttributeIDTypeClusterUnitTestingAttributeNullableInt8sID = 16397,

	AttributeIDTypeClusterUnitTestingAttributeNullableInt16sID = 16398,

	AttributeIDTypeClusterUnitTestingAttributeNullableInt24sID = 16399,

	AttributeIDTypeClusterUnitTestingAttributeNullableInt32sID = 16400,

	AttributeIDTypeClusterUnitTestingAttributeNullableInt40sID = 16401,

	AttributeIDTypeClusterUnitTestingAttributeNullableInt48sID = 16402,

	AttributeIDTypeClusterUnitTestingAttributeNullableInt56sID = 16403,

	AttributeIDTypeClusterUnitTestingAttributeNullableInt64sID = 16404,

	AttributeIDTypeClusterUnitTestingAttributeNullableEnum8ID = 16405,

	AttributeIDTypeClusterUnitTestingAttributeNullableEnum16ID = 16406,

	AttributeIDTypeClusterUnitTestingAttributeNullableFloatSingleID = 16407,

	AttributeIDTypeClusterUnitTestingAttributeNullableFloatDoubleID = 16408,

	AttributeIDTypeClusterUnitTestingAttributeNullableOctetStringID = 16409,

	AttributeIDTypeClusterUnitTestingAttributeNullableCharStringID = 16414,

	AttributeIDTypeClusterUnitTestingAttributeNullableEnumAttrID = 16420,

	AttributeIDTypeClusterUnitTestingAttributeNullableStructID = 16421,

	AttributeIDTypeClusterUnitTestingAttributeNullableRangeRestrictedInt8uID = 16422,

	AttributeIDTypeClusterUnitTestingAttributeNullableRangeRestrictedInt8sID = 16423,

	AttributeIDTypeClusterUnitTestingAttributeNullableRangeRestrictedInt16uID = 16424,

	AttributeIDTypeClusterUnitTestingAttributeNullableRangeRestrictedInt16sID = 16425,

	AttributeIDTypeClusterUnitTestingAttributeWriteOnlyInt8uID = 16426,

	AttributeIDTypeClusterUnitTestingAttributeGeneratedCommandListID = 65528,

	AttributeIDTypeClusterUnitTestingAttributeAcceptedCommandListID = 65529,

	AttributeIDTypeClusterUnitTestingAttributeEventListID = 65530,

	AttributeIDTypeClusterUnitTestingAttributeAttributeListID = 65531,

	AttributeIDTypeClusterUnitTestingAttributeFeatureMapID = 65532,

	AttributeIDTypeClusterUnitTestingAttributeClusterRevisionID = 65533,

	AttributeIDTypeClusterSampleMEIAttributeFlipFlopID = 0,

	AttributeIDTypeClusterSampleMEIAttributeGeneratedCommandListID = 65528,

	AttributeIDTypeClusterSampleMEIAttributeAcceptedCommandListID = 65529,

	AttributeIDTypeClusterSampleMEIAttributeEventListID = 65530,

	AttributeIDTypeClusterSampleMEIAttributeAttributeListID = 65531,

	AttributeIDTypeClusterSampleMEIAttributeFeatureMapID = 65532,

	AttributeIDTypeClusterSampleMEIAttributeClusterRevisionID = 65533
}

declare class MTRAttributePath extends MTRClusterPath {

	static alloc(): MTRAttributePath; // inherited from NSObject

	static attributePathWithEndpointIDClusterIDAttributeID(endpointID: number, clusterID: number, attributeID: number): MTRAttributePath;

	static attributePathWithEndpointIdClusterIdAttributeId(endpointId: number, clusterId: number, attributeId: number): MTRAttributePath;

	static new(): MTRAttributePath; // inherited from NSObject

	readonly attribute: number;
}

declare var MTRAttributePathKey: string;

declare class MTRAttributeReport extends NSObject {

	static alloc(): MTRAttributeReport; // inherited from NSObject

	static new(): MTRAttributeReport; // inherited from NSObject

	readonly error: NSError;

	readonly path: MTRAttributePath;

	readonly value: any;

	constructor(o: { responseValue: NSDictionary<string, any>; });

	initWithResponseValueError(responseValue: NSDictionary<string, any>): this;
}

declare class MTRAttributeRequestPath extends NSObject implements NSCopying {

	static alloc(): MTRAttributeRequestPath; // inherited from NSObject

	static new(): MTRAttributeRequestPath; // inherited from NSObject

	static requestPathWithEndpointIDClusterIDAttributeID(endpointID: number, clusterID: number, attributeID: number): MTRAttributeRequestPath;

	readonly attribute: number;

	readonly cluster: number;

	readonly endpoint: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRAudioOutputClusterOutputInfo extends MTRAudioOutputClusterOutputInfoStruct {

	static alloc(): MTRAudioOutputClusterOutputInfo; // inherited from NSObject

	static new(): MTRAudioOutputClusterOutputInfo; // inherited from NSObject
}

declare class MTRAudioOutputClusterOutputInfoStruct extends NSObject implements NSCopying {

	static alloc(): MTRAudioOutputClusterOutputInfoStruct; // inherited from NSObject

	static new(): MTRAudioOutputClusterOutputInfoStruct; // inherited from NSObject

	index: number;

	name: string;

	outputType: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRAudioOutputClusterRenameOutputParams extends NSObject implements NSCopying {

	static alloc(): MTRAudioOutputClusterRenameOutputParams; // inherited from NSObject

	static new(): MTRAudioOutputClusterRenameOutputParams; // inherited from NSObject

	index: number;

	name: string;

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRAudioOutputClusterSelectOutputParams extends NSObject implements NSCopying {

	static alloc(): MTRAudioOutputClusterSelectOutputParams; // inherited from NSObject

	static new(): MTRAudioOutputClusterSelectOutputParams; // inherited from NSObject

	index: number;

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare const enum MTRAudioOutputFeature {

	NameUpdates = 1
}

declare const enum MTRAudioOutputOutputType {

	HDMI = 0,

	Hdmi = 0,

	BT = 1,

	Bt = 1,

	Optical = 2,

	Headphone = 3,

	Internal = 4,

	Other = 5
}

declare class MTRBarrierControlClusterBarrierControlGoToPercentParams extends NSObject implements NSCopying {

	static alloc(): MTRBarrierControlClusterBarrierControlGoToPercentParams; // inherited from NSObject

	static new(): MTRBarrierControlClusterBarrierControlGoToPercentParams; // inherited from NSObject

	percentOpen: number;

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRBarrierControlClusterBarrierControlStopParams extends NSObject implements NSCopying {

	static alloc(): MTRBarrierControlClusterBarrierControlStopParams; // inherited from NSObject

	static new(): MTRBarrierControlClusterBarrierControlStopParams; // inherited from NSObject

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRBaseClusterAccessControl extends MTRGenericBaseCluster {

	static alloc(): MTRBaseClusterAccessControl; // inherited from NSObject

	static new(): MTRBaseClusterAccessControl; // inherited from NSObject

	static readAttributeACLWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAcceptedCommandListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAcceptedCommandListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAccessControlEntriesPerFabricWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeAccessControlEntriesPerFabricWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeAclWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAttributeListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAttributeListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeClusterRevisionWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeClusterRevisionWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeExtensionWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeExtensionWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeFeatureMapWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeFeatureMapWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeGeneratedCommandListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeGeneratedCommandListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeSubjectsPerAccessControlEntryWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeSubjectsPerAccessControlEntryWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeTargetsPerAccessControlEntryWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeTargetsPerAccessControlEntryWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	constructor(o: { device: MTRBaseDevice; endpointID: number; queue: interop.Pointer | interop.Reference<any>; });

	constructor(o: { device: MTRBaseDevice; endpoint: number; queue: interop.Pointer | interop.Reference<any>; });

	initWithDeviceEndpointIDQueue(device: MTRBaseDevice, endpointID: number, queue: interop.Pointer | interop.Reference<any>): this;

	initWithDeviceEndpointQueue(device: MTRBaseDevice, endpoint: number, queue: interop.Pointer | interop.Reference<any>): this;

	readAttributeACLWithParamsCompletion(params: MTRReadParams, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAcceptedCommandListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAcceptedCommandListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAccessControlEntriesPerFabricWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeAccessControlEntriesPerFabricWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeAclWithParamsCompletionHandler(params: MTRReadParams, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAttributeListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAttributeListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeClusterRevisionWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeClusterRevisionWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeExtensionWithParamsCompletion(params: MTRReadParams, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeExtensionWithParamsCompletionHandler(params: MTRReadParams, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeFeatureMapWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeFeatureMapWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeGeneratedCommandListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeGeneratedCommandListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeSubjectsPerAccessControlEntryWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeSubjectsPerAccessControlEntryWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeTargetsPerAccessControlEntryWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeTargetsPerAccessControlEntryWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeACLWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAcceptedCommandListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAcceptedCommandListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAccessControlEntriesPerFabricWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeAccessControlEntriesPerFabricWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeAclWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAttributeListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAttributeListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeClusterRevisionWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeClusterRevisionWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeExtensionWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeExtensionWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeFeatureMapWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeFeatureMapWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeGeneratedCommandListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeGeneratedCommandListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeSubjectsPerAccessControlEntryWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeSubjectsPerAccessControlEntryWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeTargetsPerAccessControlEntryWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeTargetsPerAccessControlEntryWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	writeAttributeACLWithValueCompletion(value: NSArray<any> | any[], completion: (p1: NSError) => void): void;

	writeAttributeACLWithValueParamsCompletion(value: NSArray<any> | any[], params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeAclWithValueCompletionHandler(value: NSArray<any> | any[], completionHandler: (p1: NSError) => void): void;

	writeAttributeAclWithValueParamsCompletionHandler(value: NSArray<any> | any[], params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeExtensionWithValueCompletion(value: NSArray<any> | any[], completion: (p1: NSError) => void): void;

	writeAttributeExtensionWithValueCompletionHandler(value: NSArray<any> | any[], completionHandler: (p1: NSError) => void): void;

	writeAttributeExtensionWithValueParamsCompletion(value: NSArray<any> | any[], params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeExtensionWithValueParamsCompletionHandler(value: NSArray<any> | any[], params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;
}

declare class MTRBaseClusterAccountLogin extends MTRGenericBaseCluster {

	static alloc(): MTRBaseClusterAccountLogin; // inherited from NSObject

	static new(): MTRBaseClusterAccountLogin; // inherited from NSObject

	static readAttributeAcceptedCommandListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAcceptedCommandListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAttributeListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAttributeListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeClusterRevisionWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeClusterRevisionWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeFeatureMapWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeFeatureMapWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeGeneratedCommandListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeGeneratedCommandListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	constructor(o: { device: MTRBaseDevice; endpointID: number; queue: interop.Pointer | interop.Reference<any>; });

	constructor(o: { device: MTRBaseDevice; endpoint: number; queue: interop.Pointer | interop.Reference<any>; });

	getSetupPINWithParamsCompletion(params: MTRAccountLoginClusterGetSetupPINParams, completion: (p1: MTRAccountLoginClusterGetSetupPINResponseParams, p2: NSError) => void): void;

	getSetupPINWithParamsCompletionHandler(params: MTRAccountLoginClusterGetSetupPINParams, completionHandler: (p1: MTRAccountLoginClusterGetSetupPINResponseParams, p2: NSError) => void): void;

	initWithDeviceEndpointIDQueue(device: MTRBaseDevice, endpointID: number, queue: interop.Pointer | interop.Reference<any>): this;

	initWithDeviceEndpointQueue(device: MTRBaseDevice, endpoint: number, queue: interop.Pointer | interop.Reference<any>): this;

	loginWithParamsCompletion(params: MTRAccountLoginClusterLoginParams, completion: (p1: NSError) => void): void;

	loginWithParamsCompletionHandler(params: MTRAccountLoginClusterLoginParams, completionHandler: (p1: NSError) => void): void;

	logoutWithCompletion(completion: (p1: NSError) => void): void;

	logoutWithCompletionHandler(completionHandler: (p1: NSError) => void): void;

	logoutWithParamsCompletion(params: MTRAccountLoginClusterLogoutParams, completion: (p1: NSError) => void): void;

	logoutWithParamsCompletionHandler(params: MTRAccountLoginClusterLogoutParams, completionHandler: (p1: NSError) => void): void;

	readAttributeAcceptedCommandListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAcceptedCommandListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAttributeListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAttributeListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeClusterRevisionWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeClusterRevisionWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeFeatureMapWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeFeatureMapWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeGeneratedCommandListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeGeneratedCommandListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAcceptedCommandListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAcceptedCommandListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAttributeListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAttributeListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeClusterRevisionWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeClusterRevisionWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeFeatureMapWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeFeatureMapWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeGeneratedCommandListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeGeneratedCommandListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;
}

declare class MTRBaseClusterActions extends MTRGenericBaseCluster {

	static alloc(): MTRBaseClusterActions; // inherited from NSObject

	static new(): MTRBaseClusterActions; // inherited from NSObject

	static readAttributeAcceptedCommandListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAcceptedCommandListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeActionListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeActionListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAttributeListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAttributeListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeClusterRevisionWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeClusterRevisionWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeEndpointListsWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeEndpointListsWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeFeatureMapWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeFeatureMapWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeGeneratedCommandListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeGeneratedCommandListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeSetupURLWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: string, p2: NSError) => void): void;

	static readAttributeSetupURLWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: string, p2: NSError) => void): void;

	constructor(o: { device: MTRBaseDevice; endpointID: number; queue: interop.Pointer | interop.Reference<any>; });

	constructor(o: { device: MTRBaseDevice; endpoint: number; queue: interop.Pointer | interop.Reference<any>; });

	disableActionWithDurationWithParamsCompletion(params: MTRActionsClusterDisableActionWithDurationParams, completion: (p1: NSError) => void): void;

	disableActionWithDurationWithParamsCompletionHandler(params: MTRActionsClusterDisableActionWithDurationParams, completionHandler: (p1: NSError) => void): void;

	disableActionWithParamsCompletion(params: MTRActionsClusterDisableActionParams, completion: (p1: NSError) => void): void;

	disableActionWithParamsCompletionHandler(params: MTRActionsClusterDisableActionParams, completionHandler: (p1: NSError) => void): void;

	enableActionWithDurationWithParamsCompletion(params: MTRActionsClusterEnableActionWithDurationParams, completion: (p1: NSError) => void): void;

	enableActionWithDurationWithParamsCompletionHandler(params: MTRActionsClusterEnableActionWithDurationParams, completionHandler: (p1: NSError) => void): void;

	enableActionWithParamsCompletion(params: MTRActionsClusterEnableActionParams, completion: (p1: NSError) => void): void;

	enableActionWithParamsCompletionHandler(params: MTRActionsClusterEnableActionParams, completionHandler: (p1: NSError) => void): void;

	initWithDeviceEndpointIDQueue(device: MTRBaseDevice, endpointID: number, queue: interop.Pointer | interop.Reference<any>): this;

	initWithDeviceEndpointQueue(device: MTRBaseDevice, endpoint: number, queue: interop.Pointer | interop.Reference<any>): this;

	instantActionWithParamsCompletion(params: MTRActionsClusterInstantActionParams, completion: (p1: NSError) => void): void;

	instantActionWithParamsCompletionHandler(params: MTRActionsClusterInstantActionParams, completionHandler: (p1: NSError) => void): void;

	instantActionWithTransitionWithParamsCompletion(params: MTRActionsClusterInstantActionWithTransitionParams, completion: (p1: NSError) => void): void;

	instantActionWithTransitionWithParamsCompletionHandler(params: MTRActionsClusterInstantActionWithTransitionParams, completionHandler: (p1: NSError) => void): void;

	pauseActionWithDurationWithParamsCompletion(params: MTRActionsClusterPauseActionWithDurationParams, completion: (p1: NSError) => void): void;

	pauseActionWithDurationWithParamsCompletionHandler(params: MTRActionsClusterPauseActionWithDurationParams, completionHandler: (p1: NSError) => void): void;

	pauseActionWithParamsCompletion(params: MTRActionsClusterPauseActionParams, completion: (p1: NSError) => void): void;

	pauseActionWithParamsCompletionHandler(params: MTRActionsClusterPauseActionParams, completionHandler: (p1: NSError) => void): void;

	readAttributeAcceptedCommandListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAcceptedCommandListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeActionListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeActionListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAttributeListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAttributeListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeClusterRevisionWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeClusterRevisionWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeEndpointListsWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeEndpointListsWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeFeatureMapWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeFeatureMapWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeGeneratedCommandListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeGeneratedCommandListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeSetupURLWithCompletion(completion: (p1: string, p2: NSError) => void): void;

	readAttributeSetupURLWithCompletionHandler(completionHandler: (p1: string, p2: NSError) => void): void;

	resumeActionWithParamsCompletion(params: MTRActionsClusterResumeActionParams, completion: (p1: NSError) => void): void;

	resumeActionWithParamsCompletionHandler(params: MTRActionsClusterResumeActionParams, completionHandler: (p1: NSError) => void): void;

	startActionWithDurationWithParamsCompletion(params: MTRActionsClusterStartActionWithDurationParams, completion: (p1: NSError) => void): void;

	startActionWithDurationWithParamsCompletionHandler(params: MTRActionsClusterStartActionWithDurationParams, completionHandler: (p1: NSError) => void): void;

	startActionWithParamsCompletion(params: MTRActionsClusterStartActionParams, completion: (p1: NSError) => void): void;

	startActionWithParamsCompletionHandler(params: MTRActionsClusterStartActionParams, completionHandler: (p1: NSError) => void): void;

	stopActionWithParamsCompletion(params: MTRActionsClusterStopActionParams, completion: (p1: NSError) => void): void;

	stopActionWithParamsCompletionHandler(params: MTRActionsClusterStopActionParams, completionHandler: (p1: NSError) => void): void;

	subscribeAttributeAcceptedCommandListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAcceptedCommandListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeActionListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeActionListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAttributeListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAttributeListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeClusterRevisionWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeClusterRevisionWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeEndpointListsWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeEndpointListsWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeFeatureMapWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeFeatureMapWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeGeneratedCommandListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeGeneratedCommandListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeSetupURLWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: string, p2: NSError) => void): void;

	subscribeAttributeSetupURLWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: string, p2: NSError) => void): void;
}

declare class MTRBaseClusterAdministratorCommissioning extends MTRGenericBaseCluster {

	static alloc(): MTRBaseClusterAdministratorCommissioning; // inherited from NSObject

	static new(): MTRBaseClusterAdministratorCommissioning; // inherited from NSObject

	static readAttributeAcceptedCommandListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAcceptedCommandListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAdminFabricIndexWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeAdminFabricIndexWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeAdminVendorIdWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeAdminVendorIdWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeAttributeListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAttributeListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeClusterRevisionWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeClusterRevisionWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeFeatureMapWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeFeatureMapWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeGeneratedCommandListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeGeneratedCommandListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeWindowStatusWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeWindowStatusWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	constructor(o: { device: MTRBaseDevice; endpointID: number; queue: interop.Pointer | interop.Reference<any>; });

	constructor(o: { device: MTRBaseDevice; endpoint: number; queue: interop.Pointer | interop.Reference<any>; });

	initWithDeviceEndpointIDQueue(device: MTRBaseDevice, endpointID: number, queue: interop.Pointer | interop.Reference<any>): this;

	initWithDeviceEndpointQueue(device: MTRBaseDevice, endpoint: number, queue: interop.Pointer | interop.Reference<any>): this;

	openBasicCommissioningWindowWithParamsCompletion(params: MTRAdministratorCommissioningClusterOpenBasicCommissioningWindowParams, completion: (p1: NSError) => void): void;

	openBasicCommissioningWindowWithParamsCompletionHandler(params: MTRAdministratorCommissioningClusterOpenBasicCommissioningWindowParams, completionHandler: (p1: NSError) => void): void;

	openCommissioningWindowWithParamsCompletion(params: MTRAdministratorCommissioningClusterOpenCommissioningWindowParams, completion: (p1: NSError) => void): void;

	openCommissioningWindowWithParamsCompletionHandler(params: MTRAdministratorCommissioningClusterOpenCommissioningWindowParams, completionHandler: (p1: NSError) => void): void;

	readAttributeAcceptedCommandListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAcceptedCommandListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAdminFabricIndexWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeAdminFabricIndexWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeAdminVendorIdWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeAdminVendorIdWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeAttributeListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAttributeListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeClusterRevisionWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeClusterRevisionWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeFeatureMapWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeFeatureMapWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeGeneratedCommandListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeGeneratedCommandListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeWindowStatusWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeWindowStatusWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	revokeCommissioningWithCompletion(completion: (p1: NSError) => void): void;

	revokeCommissioningWithCompletionHandler(completionHandler: (p1: NSError) => void): void;

	revokeCommissioningWithParamsCompletion(params: MTRAdministratorCommissioningClusterRevokeCommissioningParams, completion: (p1: NSError) => void): void;

	revokeCommissioningWithParamsCompletionHandler(params: MTRAdministratorCommissioningClusterRevokeCommissioningParams, completionHandler: (p1: NSError) => void): void;

	subscribeAttributeAcceptedCommandListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAcceptedCommandListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAdminFabricIndexWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeAdminFabricIndexWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeAdminVendorIdWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeAdminVendorIdWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeAttributeListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAttributeListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeClusterRevisionWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeClusterRevisionWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeFeatureMapWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeFeatureMapWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeGeneratedCommandListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeGeneratedCommandListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeWindowStatusWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeWindowStatusWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;
}

declare class MTRBaseClusterApplicationBasic extends MTRGenericBaseCluster {

	static alloc(): MTRBaseClusterApplicationBasic; // inherited from NSObject

	static new(): MTRBaseClusterApplicationBasic; // inherited from NSObject

	static readAttributeAcceptedCommandListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAcceptedCommandListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAllowedVendorListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAllowedVendorListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeApplicationNameWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: string, p2: NSError) => void): void;

	static readAttributeApplicationNameWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: string, p2: NSError) => void): void;

	static readAttributeApplicationVersionWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: string, p2: NSError) => void): void;

	static readAttributeApplicationVersionWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: string, p2: NSError) => void): void;

	static readAttributeApplicationWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: MTRApplicationBasicClusterApplicationBasicApplication, p2: NSError) => void): void;

	static readAttributeApplicationWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: MTRApplicationBasicClusterApplicationStruct, p2: NSError) => void): void;

	static readAttributeAttributeListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAttributeListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeClusterRevisionWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeClusterRevisionWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeFeatureMapWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeFeatureMapWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeGeneratedCommandListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeGeneratedCommandListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeProductIDWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeProductIDWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeStatusWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeStatusWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeVendorIDWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeVendorIDWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeVendorNameWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: string, p2: NSError) => void): void;

	static readAttributeVendorNameWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: string, p2: NSError) => void): void;

	constructor(o: { device: MTRBaseDevice; endpointID: number; queue: interop.Pointer | interop.Reference<any>; });

	constructor(o: { device: MTRBaseDevice; endpoint: number; queue: interop.Pointer | interop.Reference<any>; });

	initWithDeviceEndpointIDQueue(device: MTRBaseDevice, endpointID: number, queue: interop.Pointer | interop.Reference<any>): this;

	initWithDeviceEndpointQueue(device: MTRBaseDevice, endpoint: number, queue: interop.Pointer | interop.Reference<any>): this;

	readAttributeAcceptedCommandListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAcceptedCommandListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAllowedVendorListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAllowedVendorListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeApplicationNameWithCompletion(completion: (p1: string, p2: NSError) => void): void;

	readAttributeApplicationNameWithCompletionHandler(completionHandler: (p1: string, p2: NSError) => void): void;

	readAttributeApplicationVersionWithCompletion(completion: (p1: string, p2: NSError) => void): void;

	readAttributeApplicationVersionWithCompletionHandler(completionHandler: (p1: string, p2: NSError) => void): void;

	readAttributeApplicationWithCompletion(completion: (p1: MTRApplicationBasicClusterApplicationStruct, p2: NSError) => void): void;

	readAttributeApplicationWithCompletionHandler(completionHandler: (p1: MTRApplicationBasicClusterApplicationBasicApplication, p2: NSError) => void): void;

	readAttributeAttributeListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAttributeListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeClusterRevisionWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeClusterRevisionWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeFeatureMapWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeFeatureMapWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeGeneratedCommandListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeGeneratedCommandListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeProductIDWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeProductIDWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeStatusWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeStatusWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeVendorIDWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeVendorIDWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeVendorNameWithCompletion(completion: (p1: string, p2: NSError) => void): void;

	readAttributeVendorNameWithCompletionHandler(completionHandler: (p1: string, p2: NSError) => void): void;

	subscribeAttributeAcceptedCommandListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAcceptedCommandListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAllowedVendorListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAllowedVendorListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeApplicationNameWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: string, p2: NSError) => void): void;

	subscribeAttributeApplicationNameWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: string, p2: NSError) => void): void;

	subscribeAttributeApplicationVersionWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: string, p2: NSError) => void): void;

	subscribeAttributeApplicationVersionWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: string, p2: NSError) => void): void;

	subscribeAttributeApplicationWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: MTRApplicationBasicClusterApplicationBasicApplication, p2: NSError) => void): void;

	subscribeAttributeApplicationWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: MTRApplicationBasicClusterApplicationStruct, p2: NSError) => void): void;

	subscribeAttributeAttributeListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAttributeListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeClusterRevisionWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeClusterRevisionWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeFeatureMapWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeFeatureMapWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeGeneratedCommandListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeGeneratedCommandListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeProductIDWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeProductIDWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeStatusWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeStatusWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeVendorIDWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeVendorIDWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeVendorNameWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: string, p2: NSError) => void): void;

	subscribeAttributeVendorNameWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: string, p2: NSError) => void): void;
}

declare class MTRBaseClusterApplicationLauncher extends MTRGenericBaseCluster {

	static alloc(): MTRBaseClusterApplicationLauncher; // inherited from NSObject

	static new(): MTRBaseClusterApplicationLauncher; // inherited from NSObject

	static readAttributeAcceptedCommandListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAcceptedCommandListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAttributeListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAttributeListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeCatalogListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeCatalogListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeClusterRevisionWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeClusterRevisionWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeCurrentAppWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: MTRApplicationLauncherClusterApplicationEP, p2: NSError) => void): void;

	static readAttributeCurrentAppWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: MTRApplicationLauncherClusterApplicationEPStruct, p2: NSError) => void): void;

	static readAttributeFeatureMapWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeFeatureMapWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeGeneratedCommandListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeGeneratedCommandListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	constructor(o: { device: MTRBaseDevice; endpointID: number; queue: interop.Pointer | interop.Reference<any>; });

	constructor(o: { device: MTRBaseDevice; endpoint: number; queue: interop.Pointer | interop.Reference<any>; });

	hideAppWithCompletion(completion: (p1: MTRApplicationLauncherClusterLauncherResponseParams, p2: NSError) => void): void;

	hideAppWithParamsCompletion(params: MTRApplicationLauncherClusterHideAppParams, completion: (p1: MTRApplicationLauncherClusterLauncherResponseParams, p2: NSError) => void): void;

	hideAppWithParamsCompletionHandler(params: MTRApplicationLauncherClusterHideAppParams, completionHandler: (p1: MTRApplicationLauncherClusterLauncherResponseParams, p2: NSError) => void): void;

	initWithDeviceEndpointIDQueue(device: MTRBaseDevice, endpointID: number, queue: interop.Pointer | interop.Reference<any>): this;

	initWithDeviceEndpointQueue(device: MTRBaseDevice, endpoint: number, queue: interop.Pointer | interop.Reference<any>): this;

	launchAppWithCompletion(completion: (p1: MTRApplicationLauncherClusterLauncherResponseParams, p2: NSError) => void): void;

	launchAppWithParamsCompletion(params: MTRApplicationLauncherClusterLaunchAppParams, completion: (p1: MTRApplicationLauncherClusterLauncherResponseParams, p2: NSError) => void): void;

	launchAppWithParamsCompletionHandler(params: MTRApplicationLauncherClusterLaunchAppParams, completionHandler: (p1: MTRApplicationLauncherClusterLauncherResponseParams, p2: NSError) => void): void;

	readAttributeAcceptedCommandListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAcceptedCommandListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAttributeListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAttributeListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeCatalogListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeCatalogListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeClusterRevisionWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeClusterRevisionWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeCurrentAppWithCompletion(completion: (p1: MTRApplicationLauncherClusterApplicationEPStruct, p2: NSError) => void): void;

	readAttributeCurrentAppWithCompletionHandler(completionHandler: (p1: MTRApplicationLauncherClusterApplicationEP, p2: NSError) => void): void;

	readAttributeFeatureMapWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeFeatureMapWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeGeneratedCommandListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeGeneratedCommandListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	stopAppWithCompletion(completion: (p1: MTRApplicationLauncherClusterLauncherResponseParams, p2: NSError) => void): void;

	stopAppWithParamsCompletion(params: MTRApplicationLauncherClusterStopAppParams, completion: (p1: MTRApplicationLauncherClusterLauncherResponseParams, p2: NSError) => void): void;

	stopAppWithParamsCompletionHandler(params: MTRApplicationLauncherClusterStopAppParams, completionHandler: (p1: MTRApplicationLauncherClusterLauncherResponseParams, p2: NSError) => void): void;

	subscribeAttributeAcceptedCommandListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAcceptedCommandListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAttributeListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAttributeListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeCatalogListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeCatalogListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeClusterRevisionWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeClusterRevisionWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeCurrentAppWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: MTRApplicationLauncherClusterApplicationEP, p2: NSError) => void): void;

	subscribeAttributeCurrentAppWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: MTRApplicationLauncherClusterApplicationEPStruct, p2: NSError) => void): void;

	subscribeAttributeFeatureMapWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeFeatureMapWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeGeneratedCommandListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeGeneratedCommandListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	writeAttributeCurrentAppWithValueCompletion(value: MTRApplicationLauncherClusterApplicationEPStruct, completion: (p1: NSError) => void): void;

	writeAttributeCurrentAppWithValueCompletionHandler(value: MTRApplicationLauncherClusterApplicationEP, completionHandler: (p1: NSError) => void): void;

	writeAttributeCurrentAppWithValueParamsCompletion(value: MTRApplicationLauncherClusterApplicationEPStruct, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeCurrentAppWithValueParamsCompletionHandler(value: MTRApplicationLauncherClusterApplicationEP, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;
}

declare class MTRBaseClusterAudioOutput extends MTRGenericBaseCluster {

	static alloc(): MTRBaseClusterAudioOutput; // inherited from NSObject

	static new(): MTRBaseClusterAudioOutput; // inherited from NSObject

	static readAttributeAcceptedCommandListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAcceptedCommandListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAttributeListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAttributeListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeClusterRevisionWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeClusterRevisionWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeCurrentOutputWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeCurrentOutputWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeFeatureMapWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeFeatureMapWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeGeneratedCommandListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeGeneratedCommandListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeOutputListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeOutputListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	constructor(o: { device: MTRBaseDevice; endpointID: number; queue: interop.Pointer | interop.Reference<any>; });

	constructor(o: { device: MTRBaseDevice; endpoint: number; queue: interop.Pointer | interop.Reference<any>; });

	initWithDeviceEndpointIDQueue(device: MTRBaseDevice, endpointID: number, queue: interop.Pointer | interop.Reference<any>): this;

	initWithDeviceEndpointQueue(device: MTRBaseDevice, endpoint: number, queue: interop.Pointer | interop.Reference<any>): this;

	readAttributeAcceptedCommandListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAcceptedCommandListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAttributeListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAttributeListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeClusterRevisionWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeClusterRevisionWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeCurrentOutputWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeCurrentOutputWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeFeatureMapWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeFeatureMapWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeGeneratedCommandListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeGeneratedCommandListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeOutputListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeOutputListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	renameOutputWithParamsCompletion(params: MTRAudioOutputClusterRenameOutputParams, completion: (p1: NSError) => void): void;

	renameOutputWithParamsCompletionHandler(params: MTRAudioOutputClusterRenameOutputParams, completionHandler: (p1: NSError) => void): void;

	selectOutputWithParamsCompletion(params: MTRAudioOutputClusterSelectOutputParams, completion: (p1: NSError) => void): void;

	selectOutputWithParamsCompletionHandler(params: MTRAudioOutputClusterSelectOutputParams, completionHandler: (p1: NSError) => void): void;

	subscribeAttributeAcceptedCommandListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAcceptedCommandListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAttributeListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAttributeListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeClusterRevisionWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeClusterRevisionWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeCurrentOutputWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeCurrentOutputWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeFeatureMapWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeFeatureMapWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeGeneratedCommandListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeGeneratedCommandListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeOutputListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeOutputListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;
}

declare class MTRBaseClusterBallastConfiguration extends MTRGenericBaseCluster {

	static alloc(): MTRBaseClusterBallastConfiguration; // inherited from NSObject

	static new(): MTRBaseClusterBallastConfiguration; // inherited from NSObject

	static readAttributeAcceptedCommandListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAcceptedCommandListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAttributeListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAttributeListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeBallastFactorAdjustmentWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeBallastFactorAdjustmentWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeBallastStatusWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeBallastStatusWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeClusterRevisionWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeClusterRevisionWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeFeatureMapWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeFeatureMapWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeGeneratedCommandListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeGeneratedCommandListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeIntrinsicBalanceFactorWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeIntrinsicBallastFactorWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeLampAlarmModeWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeLampAlarmModeWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeLampBurnHoursTripPointWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeLampBurnHoursTripPointWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeLampBurnHoursWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeLampBurnHoursWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeLampManufacturerWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: string, p2: NSError) => void): void;

	static readAttributeLampManufacturerWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: string, p2: NSError) => void): void;

	static readAttributeLampQuantityWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeLampQuantityWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeLampRatedHoursWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeLampRatedHoursWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeLampTypeWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: string, p2: NSError) => void): void;

	static readAttributeLampTypeWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: string, p2: NSError) => void): void;

	static readAttributeMaxLevelWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeMaxLevelWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeMinLevelWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeMinLevelWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributePhysicalMaxLevelWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributePhysicalMaxLevelWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributePhysicalMinLevelWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributePhysicalMinLevelWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	constructor(o: { device: MTRBaseDevice; endpointID: number; queue: interop.Pointer | interop.Reference<any>; });

	constructor(o: { device: MTRBaseDevice; endpoint: number; queue: interop.Pointer | interop.Reference<any>; });

	initWithDeviceEndpointIDQueue(device: MTRBaseDevice, endpointID: number, queue: interop.Pointer | interop.Reference<any>): this;

	initWithDeviceEndpointQueue(device: MTRBaseDevice, endpoint: number, queue: interop.Pointer | interop.Reference<any>): this;

	readAttributeAcceptedCommandListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAcceptedCommandListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAttributeListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAttributeListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeBallastFactorAdjustmentWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeBallastFactorAdjustmentWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeBallastStatusWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeBallastStatusWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeClusterRevisionWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeClusterRevisionWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeFeatureMapWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeFeatureMapWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeGeneratedCommandListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeGeneratedCommandListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeIntrinsicBalanceFactorWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeIntrinsicBallastFactorWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeLampAlarmModeWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeLampAlarmModeWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeLampBurnHoursTripPointWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeLampBurnHoursTripPointWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeLampBurnHoursWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeLampBurnHoursWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeLampManufacturerWithCompletion(completion: (p1: string, p2: NSError) => void): void;

	readAttributeLampManufacturerWithCompletionHandler(completionHandler: (p1: string, p2: NSError) => void): void;

	readAttributeLampQuantityWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeLampQuantityWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeLampRatedHoursWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeLampRatedHoursWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeLampTypeWithCompletion(completion: (p1: string, p2: NSError) => void): void;

	readAttributeLampTypeWithCompletionHandler(completionHandler: (p1: string, p2: NSError) => void): void;

	readAttributeMaxLevelWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeMaxLevelWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeMinLevelWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeMinLevelWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributePhysicalMaxLevelWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributePhysicalMaxLevelWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributePhysicalMinLevelWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributePhysicalMinLevelWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeAcceptedCommandListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAcceptedCommandListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAttributeListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAttributeListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeBallastFactorAdjustmentWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeBallastFactorAdjustmentWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeBallastStatusWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeBallastStatusWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeClusterRevisionWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeClusterRevisionWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeFeatureMapWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeFeatureMapWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeGeneratedCommandListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeGeneratedCommandListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeIntrinsicBalanceFactorWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeIntrinsicBallastFactorWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeLampAlarmModeWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeLampAlarmModeWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeLampBurnHoursTripPointWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeLampBurnHoursTripPointWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeLampBurnHoursWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeLampBurnHoursWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeLampManufacturerWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: string, p2: NSError) => void): void;

	subscribeAttributeLampManufacturerWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: string, p2: NSError) => void): void;

	subscribeAttributeLampQuantityWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeLampQuantityWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeLampRatedHoursWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeLampRatedHoursWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeLampTypeWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: string, p2: NSError) => void): void;

	subscribeAttributeLampTypeWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: string, p2: NSError) => void): void;

	subscribeAttributeMaxLevelWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeMaxLevelWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeMinLevelWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeMinLevelWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributePhysicalMaxLevelWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributePhysicalMaxLevelWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributePhysicalMinLevelWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributePhysicalMinLevelWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	writeAttributeBallastFactorAdjustmentWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeBallastFactorAdjustmentWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeBallastFactorAdjustmentWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeBallastFactorAdjustmentWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeIntrinsicBalanceFactorWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeIntrinsicBalanceFactorWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeIntrinsicBallastFactorWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeIntrinsicBallastFactorWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeLampAlarmModeWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeLampAlarmModeWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeLampAlarmModeWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeLampAlarmModeWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeLampBurnHoursTripPointWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeLampBurnHoursTripPointWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeLampBurnHoursTripPointWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeLampBurnHoursTripPointWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeLampBurnHoursWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeLampBurnHoursWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeLampBurnHoursWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeLampBurnHoursWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeLampManufacturerWithValueCompletion(value: string, completion: (p1: NSError) => void): void;

	writeAttributeLampManufacturerWithValueCompletionHandler(value: string, completionHandler: (p1: NSError) => void): void;

	writeAttributeLampManufacturerWithValueParamsCompletion(value: string, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeLampManufacturerWithValueParamsCompletionHandler(value: string, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeLampRatedHoursWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeLampRatedHoursWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeLampRatedHoursWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeLampRatedHoursWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeLampTypeWithValueCompletion(value: string, completion: (p1: NSError) => void): void;

	writeAttributeLampTypeWithValueCompletionHandler(value: string, completionHandler: (p1: NSError) => void): void;

	writeAttributeLampTypeWithValueParamsCompletion(value: string, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeLampTypeWithValueParamsCompletionHandler(value: string, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeMaxLevelWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeMaxLevelWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeMaxLevelWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeMaxLevelWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeMinLevelWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeMinLevelWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeMinLevelWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeMinLevelWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;
}

declare class MTRBaseClusterBarrierControl extends MTRGenericBaseCluster {

	static alloc(): MTRBaseClusterBarrierControl; // inherited from NSObject

	static new(): MTRBaseClusterBarrierControl; // inherited from NSObject

	static readAttributeAcceptedCommandListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAcceptedCommandListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAttributeListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAttributeListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeBarrierCapabilitiesWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeBarrierCapabilitiesWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeBarrierCloseEventsWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeBarrierCloseEventsWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeBarrierClosePeriodWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeBarrierClosePeriodWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeBarrierCommandCloseEventsWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeBarrierCommandCloseEventsWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeBarrierCommandOpenEventsWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeBarrierCommandOpenEventsWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeBarrierMovingStateWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeBarrierMovingStateWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeBarrierOpenEventsWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeBarrierOpenEventsWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeBarrierOpenPeriodWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeBarrierOpenPeriodWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeBarrierPositionWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeBarrierPositionWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeBarrierSafetyStatusWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeBarrierSafetyStatusWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeClusterRevisionWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeClusterRevisionWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeFeatureMapWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeFeatureMapWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeGeneratedCommandListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeGeneratedCommandListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	constructor(o: { device: MTRBaseDevice; endpointID: number; queue: interop.Pointer | interop.Reference<any>; });

	constructor(o: { device: MTRBaseDevice; endpoint: number; queue: interop.Pointer | interop.Reference<any>; });

	barrierControlGoToPercentWithParamsCompletion(params: MTRBarrierControlClusterBarrierControlGoToPercentParams, completion: (p1: NSError) => void): void;

	barrierControlGoToPercentWithParamsCompletionHandler(params: MTRBarrierControlClusterBarrierControlGoToPercentParams, completionHandler: (p1: NSError) => void): void;

	barrierControlStopWithCompletion(completion: (p1: NSError) => void): void;

	barrierControlStopWithCompletionHandler(completionHandler: (p1: NSError) => void): void;

	barrierControlStopWithParamsCompletion(params: MTRBarrierControlClusterBarrierControlStopParams, completion: (p1: NSError) => void): void;

	barrierControlStopWithParamsCompletionHandler(params: MTRBarrierControlClusterBarrierControlStopParams, completionHandler: (p1: NSError) => void): void;

	initWithDeviceEndpointIDQueue(device: MTRBaseDevice, endpointID: number, queue: interop.Pointer | interop.Reference<any>): this;

	initWithDeviceEndpointQueue(device: MTRBaseDevice, endpoint: number, queue: interop.Pointer | interop.Reference<any>): this;

	readAttributeAcceptedCommandListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAcceptedCommandListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAttributeListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAttributeListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeBarrierCapabilitiesWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeBarrierCapabilitiesWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeBarrierCloseEventsWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeBarrierCloseEventsWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeBarrierClosePeriodWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeBarrierClosePeriodWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeBarrierCommandCloseEventsWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeBarrierCommandCloseEventsWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeBarrierCommandOpenEventsWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeBarrierCommandOpenEventsWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeBarrierMovingStateWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeBarrierMovingStateWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeBarrierOpenEventsWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeBarrierOpenEventsWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeBarrierOpenPeriodWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeBarrierOpenPeriodWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeBarrierPositionWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeBarrierPositionWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeBarrierSafetyStatusWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeBarrierSafetyStatusWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeClusterRevisionWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeClusterRevisionWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeFeatureMapWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeFeatureMapWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeGeneratedCommandListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeGeneratedCommandListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAcceptedCommandListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAcceptedCommandListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAttributeListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAttributeListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeBarrierCapabilitiesWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeBarrierCapabilitiesWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeBarrierCloseEventsWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeBarrierCloseEventsWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeBarrierClosePeriodWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeBarrierClosePeriodWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeBarrierCommandCloseEventsWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeBarrierCommandCloseEventsWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeBarrierCommandOpenEventsWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeBarrierCommandOpenEventsWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeBarrierMovingStateWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeBarrierMovingStateWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeBarrierOpenEventsWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeBarrierOpenEventsWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeBarrierOpenPeriodWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeBarrierOpenPeriodWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeBarrierPositionWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeBarrierPositionWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeBarrierSafetyStatusWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeBarrierSafetyStatusWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeClusterRevisionWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeClusterRevisionWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeFeatureMapWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeFeatureMapWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeGeneratedCommandListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeGeneratedCommandListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	writeAttributeBarrierCloseEventsWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeBarrierCloseEventsWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeBarrierCloseEventsWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeBarrierCloseEventsWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeBarrierClosePeriodWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeBarrierClosePeriodWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeBarrierClosePeriodWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeBarrierClosePeriodWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeBarrierCommandCloseEventsWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeBarrierCommandCloseEventsWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeBarrierCommandCloseEventsWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeBarrierCommandCloseEventsWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeBarrierCommandOpenEventsWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeBarrierCommandOpenEventsWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeBarrierCommandOpenEventsWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeBarrierCommandOpenEventsWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeBarrierOpenEventsWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeBarrierOpenEventsWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeBarrierOpenEventsWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeBarrierOpenEventsWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeBarrierOpenPeriodWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeBarrierOpenPeriodWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeBarrierOpenPeriodWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeBarrierOpenPeriodWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;
}

declare class MTRBaseClusterBasic extends MTRBaseClusterBasicInformation {

	static alloc(): MTRBaseClusterBasic; // inherited from NSObject

	static new(): MTRBaseClusterBasic; // inherited from NSObject

	static readAttributeAcceptedCommandListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAttributeListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeCapabilityMinimaWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: MTRBasicClusterCapabilityMinimaStruct, p2: NSError) => void): void;

	static readAttributeClusterRevisionWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeDataModelRevisionWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeFeatureMapWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeGeneratedCommandListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeHardwareVersionStringWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: string, p2: NSError) => void): void;

	static readAttributeHardwareVersionWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeLocalConfigDisabledWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeLocationWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: string, p2: NSError) => void): void;

	static readAttributeManufacturingDateWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: string, p2: NSError) => void): void;

	static readAttributeNodeLabelWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: string, p2: NSError) => void): void;

	static readAttributePartNumberWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: string, p2: NSError) => void): void;

	static readAttributeProductIDWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeProductLabelWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: string, p2: NSError) => void): void;

	static readAttributeProductNameWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: string, p2: NSError) => void): void;

	static readAttributeProductURLWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: string, p2: NSError) => void): void;

	static readAttributeReachableWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeSerialNumberWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: string, p2: NSError) => void): void;

	static readAttributeSoftwareVersionStringWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: string, p2: NSError) => void): void;

	static readAttributeSoftwareVersionWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeUniqueIDWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: string, p2: NSError) => void): void;

	static readAttributeVendorIDWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeVendorNameWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: string, p2: NSError) => void): void;

	constructor(o: { device: MTRBaseDevice; endpoint: number; queue: interop.Pointer | interop.Reference<any>; });

	initWithDeviceEndpointQueue(device: MTRBaseDevice, endpoint: number, queue: interop.Pointer | interop.Reference<any>): this;

	mfgSpecificPingWithCompletionHandler(completionHandler: (p1: NSError) => void): void;

	mfgSpecificPingWithParamsCompletionHandler(params: MTRBasicClusterMfgSpecificPingParams, completionHandler: (p1: NSError) => void): void;

	readAttributeAcceptedCommandListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAttributeListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeCapabilityMinimaWithCompletionHandler(completionHandler: (p1: MTRBasicClusterCapabilityMinimaStruct, p2: NSError) => void): void;

	readAttributeClusterRevisionWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeDataModelRevisionWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeFeatureMapWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeGeneratedCommandListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeHardwareVersionStringWithCompletionHandler(completionHandler: (p1: string, p2: NSError) => void): void;

	readAttributeHardwareVersionWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeLocalConfigDisabledWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeLocationWithCompletionHandler(completionHandler: (p1: string, p2: NSError) => void): void;

	readAttributeManufacturingDateWithCompletionHandler(completionHandler: (p1: string, p2: NSError) => void): void;

	readAttributeNodeLabelWithCompletionHandler(completionHandler: (p1: string, p2: NSError) => void): void;

	readAttributePartNumberWithCompletionHandler(completionHandler: (p1: string, p2: NSError) => void): void;

	readAttributeProductIDWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeProductLabelWithCompletionHandler(completionHandler: (p1: string, p2: NSError) => void): void;

	readAttributeProductNameWithCompletionHandler(completionHandler: (p1: string, p2: NSError) => void): void;

	readAttributeProductURLWithCompletionHandler(completionHandler: (p1: string, p2: NSError) => void): void;

	readAttributeReachableWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeSerialNumberWithCompletionHandler(completionHandler: (p1: string, p2: NSError) => void): void;

	readAttributeSoftwareVersionStringWithCompletionHandler(completionHandler: (p1: string, p2: NSError) => void): void;

	readAttributeSoftwareVersionWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeUniqueIDWithCompletionHandler(completionHandler: (p1: string, p2: NSError) => void): void;

	readAttributeVendorIDWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeVendorNameWithCompletionHandler(completionHandler: (p1: string, p2: NSError) => void): void;

	subscribeAttributeAcceptedCommandListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAttributeListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeCapabilityMinimaWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: MTRBasicClusterCapabilityMinimaStruct, p2: NSError) => void): void;

	subscribeAttributeClusterRevisionWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeDataModelRevisionWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeFeatureMapWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeGeneratedCommandListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeHardwareVersionStringWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: string, p2: NSError) => void): void;

	subscribeAttributeHardwareVersionWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeLocalConfigDisabledWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeLocationWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: string, p2: NSError) => void): void;

	subscribeAttributeManufacturingDateWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: string, p2: NSError) => void): void;

	subscribeAttributeNodeLabelWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: string, p2: NSError) => void): void;

	subscribeAttributePartNumberWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: string, p2: NSError) => void): void;

	subscribeAttributeProductIDWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeProductLabelWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: string, p2: NSError) => void): void;

	subscribeAttributeProductNameWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: string, p2: NSError) => void): void;

	subscribeAttributeProductURLWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: string, p2: NSError) => void): void;

	subscribeAttributeReachableWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeSerialNumberWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: string, p2: NSError) => void): void;

	subscribeAttributeSoftwareVersionStringWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: string, p2: NSError) => void): void;

	subscribeAttributeSoftwareVersionWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeUniqueIDWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: string, p2: NSError) => void): void;

	subscribeAttributeVendorIDWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeVendorNameWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: string, p2: NSError) => void): void;

	writeAttributeLocalConfigDisabledWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeLocalConfigDisabledWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeLocationWithValueCompletionHandler(value: string, completionHandler: (p1: NSError) => void): void;

	writeAttributeLocationWithValueParamsCompletionHandler(value: string, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeNodeLabelWithValueCompletionHandler(value: string, completionHandler: (p1: NSError) => void): void;

	writeAttributeNodeLabelWithValueParamsCompletionHandler(value: string, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;
}

declare class MTRBaseClusterBasicInformation extends MTRGenericBaseCluster {

	static alloc(): MTRBaseClusterBasicInformation; // inherited from NSObject

	static new(): MTRBaseClusterBasicInformation; // inherited from NSObject

	static readAttributeAcceptedCommandListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAttributeListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeCapabilityMinimaWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: MTRBasicInformationClusterCapabilityMinimaStruct, p2: NSError) => void): void;

	static readAttributeClusterRevisionWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeDataModelRevisionWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeFeatureMapWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeGeneratedCommandListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeHardwareVersionStringWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: string, p2: NSError) => void): void;

	static readAttributeHardwareVersionWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeLocalConfigDisabledWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeLocationWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: string, p2: NSError) => void): void;

	static readAttributeManufacturingDateWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: string, p2: NSError) => void): void;

	static readAttributeNodeLabelWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: string, p2: NSError) => void): void;

	static readAttributePartNumberWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: string, p2: NSError) => void): void;

	static readAttributeProductAppearanceWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: MTRBasicInformationClusterProductAppearanceStruct, p2: NSError) => void): void;

	static readAttributeProductIDWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeProductLabelWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: string, p2: NSError) => void): void;

	static readAttributeProductNameWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: string, p2: NSError) => void): void;

	static readAttributeProductURLWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: string, p2: NSError) => void): void;

	static readAttributeReachableWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeSerialNumberWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: string, p2: NSError) => void): void;

	static readAttributeSoftwareVersionStringWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: string, p2: NSError) => void): void;

	static readAttributeSoftwareVersionWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeUniqueIDWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: string, p2: NSError) => void): void;

	static readAttributeVendorIDWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeVendorNameWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: string, p2: NSError) => void): void;

	constructor(o: { device: MTRBaseDevice; endpointID: number; queue: interop.Pointer | interop.Reference<any>; });

	initWithDeviceEndpointIDQueue(device: MTRBaseDevice, endpointID: number, queue: interop.Pointer | interop.Reference<any>): this;

	readAttributeAcceptedCommandListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAttributeListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeCapabilityMinimaWithCompletion(completion: (p1: MTRBasicInformationClusterCapabilityMinimaStruct, p2: NSError) => void): void;

	readAttributeClusterRevisionWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeDataModelRevisionWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeFeatureMapWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeGeneratedCommandListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeHardwareVersionStringWithCompletion(completion: (p1: string, p2: NSError) => void): void;

	readAttributeHardwareVersionWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeLocalConfigDisabledWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeLocationWithCompletion(completion: (p1: string, p2: NSError) => void): void;

	readAttributeManufacturingDateWithCompletion(completion: (p1: string, p2: NSError) => void): void;

	readAttributeNodeLabelWithCompletion(completion: (p1: string, p2: NSError) => void): void;

	readAttributePartNumberWithCompletion(completion: (p1: string, p2: NSError) => void): void;

	readAttributeProductAppearanceWithCompletion(completion: (p1: MTRBasicInformationClusterProductAppearanceStruct, p2: NSError) => void): void;

	readAttributeProductIDWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeProductLabelWithCompletion(completion: (p1: string, p2: NSError) => void): void;

	readAttributeProductNameWithCompletion(completion: (p1: string, p2: NSError) => void): void;

	readAttributeProductURLWithCompletion(completion: (p1: string, p2: NSError) => void): void;

	readAttributeReachableWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeSerialNumberWithCompletion(completion: (p1: string, p2: NSError) => void): void;

	readAttributeSoftwareVersionStringWithCompletion(completion: (p1: string, p2: NSError) => void): void;

	readAttributeSoftwareVersionWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeUniqueIDWithCompletion(completion: (p1: string, p2: NSError) => void): void;

	readAttributeVendorIDWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeVendorNameWithCompletion(completion: (p1: string, p2: NSError) => void): void;

	subscribeAttributeAcceptedCommandListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAttributeListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeCapabilityMinimaWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: MTRBasicInformationClusterCapabilityMinimaStruct, p2: NSError) => void): void;

	subscribeAttributeClusterRevisionWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeDataModelRevisionWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeFeatureMapWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeGeneratedCommandListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeHardwareVersionStringWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: string, p2: NSError) => void): void;

	subscribeAttributeHardwareVersionWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeLocalConfigDisabledWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeLocationWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: string, p2: NSError) => void): void;

	subscribeAttributeManufacturingDateWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: string, p2: NSError) => void): void;

	subscribeAttributeNodeLabelWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: string, p2: NSError) => void): void;

	subscribeAttributePartNumberWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: string, p2: NSError) => void): void;

	subscribeAttributeProductAppearanceWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: MTRBasicInformationClusterProductAppearanceStruct, p2: NSError) => void): void;

	subscribeAttributeProductIDWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeProductLabelWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: string, p2: NSError) => void): void;

	subscribeAttributeProductNameWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: string, p2: NSError) => void): void;

	subscribeAttributeProductURLWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: string, p2: NSError) => void): void;

	subscribeAttributeReachableWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeSerialNumberWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: string, p2: NSError) => void): void;

	subscribeAttributeSoftwareVersionStringWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: string, p2: NSError) => void): void;

	subscribeAttributeSoftwareVersionWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeUniqueIDWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: string, p2: NSError) => void): void;

	subscribeAttributeVendorIDWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeVendorNameWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: string, p2: NSError) => void): void;

	writeAttributeLocalConfigDisabledWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeLocalConfigDisabledWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeLocationWithValueCompletion(value: string, completion: (p1: NSError) => void): void;

	writeAttributeLocationWithValueParamsCompletion(value: string, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeNodeLabelWithValueCompletion(value: string, completion: (p1: NSError) => void): void;

	writeAttributeNodeLabelWithValueParamsCompletion(value: string, params: MTRWriteParams, completion: (p1: NSError) => void): void;
}

declare class MTRBaseClusterBinaryInputBasic extends MTRGenericBaseCluster {

	static alloc(): MTRBaseClusterBinaryInputBasic; // inherited from NSObject

	static new(): MTRBaseClusterBinaryInputBasic; // inherited from NSObject

	static readAttributeAcceptedCommandListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAcceptedCommandListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeActiveTextWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: string, p2: NSError) => void): void;

	static readAttributeActiveTextWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: string, p2: NSError) => void): void;

	static readAttributeApplicationTypeWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeApplicationTypeWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeAttributeListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAttributeListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeClusterRevisionWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeClusterRevisionWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeDescriptionWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: string, p2: NSError) => void): void;

	static readAttributeDescriptionWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: string, p2: NSError) => void): void;

	static readAttributeFeatureMapWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeFeatureMapWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeGeneratedCommandListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeGeneratedCommandListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeInactiveTextWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: string, p2: NSError) => void): void;

	static readAttributeInactiveTextWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: string, p2: NSError) => void): void;

	static readAttributeOutOfServiceWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeOutOfServiceWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributePolarityWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributePolarityWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributePresentValueWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributePresentValueWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeReliabilityWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeReliabilityWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeStatusFlagsWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeStatusFlagsWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	constructor(o: { device: MTRBaseDevice; endpointID: number; queue: interop.Pointer | interop.Reference<any>; });

	constructor(o: { device: MTRBaseDevice; endpoint: number; queue: interop.Pointer | interop.Reference<any>; });

	initWithDeviceEndpointIDQueue(device: MTRBaseDevice, endpointID: number, queue: interop.Pointer | interop.Reference<any>): this;

	initWithDeviceEndpointQueue(device: MTRBaseDevice, endpoint: number, queue: interop.Pointer | interop.Reference<any>): this;

	readAttributeAcceptedCommandListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAcceptedCommandListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeActiveTextWithCompletion(completion: (p1: string, p2: NSError) => void): void;

	readAttributeActiveTextWithCompletionHandler(completionHandler: (p1: string, p2: NSError) => void): void;

	readAttributeApplicationTypeWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeApplicationTypeWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeAttributeListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAttributeListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeClusterRevisionWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeClusterRevisionWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeDescriptionWithCompletion(completion: (p1: string, p2: NSError) => void): void;

	readAttributeDescriptionWithCompletionHandler(completionHandler: (p1: string, p2: NSError) => void): void;

	readAttributeFeatureMapWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeFeatureMapWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeGeneratedCommandListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeGeneratedCommandListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeInactiveTextWithCompletion(completion: (p1: string, p2: NSError) => void): void;

	readAttributeInactiveTextWithCompletionHandler(completionHandler: (p1: string, p2: NSError) => void): void;

	readAttributeOutOfServiceWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeOutOfServiceWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributePolarityWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributePolarityWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributePresentValueWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributePresentValueWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeReliabilityWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeReliabilityWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeStatusFlagsWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeStatusFlagsWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeAcceptedCommandListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAcceptedCommandListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeActiveTextWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: string, p2: NSError) => void): void;

	subscribeAttributeActiveTextWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: string, p2: NSError) => void): void;

	subscribeAttributeApplicationTypeWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeApplicationTypeWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeAttributeListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAttributeListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeClusterRevisionWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeClusterRevisionWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeDescriptionWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: string, p2: NSError) => void): void;

	subscribeAttributeDescriptionWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: string, p2: NSError) => void): void;

	subscribeAttributeFeatureMapWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeFeatureMapWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeGeneratedCommandListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeGeneratedCommandListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeInactiveTextWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: string, p2: NSError) => void): void;

	subscribeAttributeInactiveTextWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: string, p2: NSError) => void): void;

	subscribeAttributeOutOfServiceWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeOutOfServiceWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributePolarityWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributePolarityWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributePresentValueWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributePresentValueWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeReliabilityWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeReliabilityWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeStatusFlagsWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeStatusFlagsWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	writeAttributeActiveTextWithValueCompletion(value: string, completion: (p1: NSError) => void): void;

	writeAttributeActiveTextWithValueCompletionHandler(value: string, completionHandler: (p1: NSError) => void): void;

	writeAttributeActiveTextWithValueParamsCompletion(value: string, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeActiveTextWithValueParamsCompletionHandler(value: string, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeDescriptionWithValueCompletion(value: string, completion: (p1: NSError) => void): void;

	writeAttributeDescriptionWithValueCompletionHandler(value: string, completionHandler: (p1: NSError) => void): void;

	writeAttributeDescriptionWithValueParamsCompletion(value: string, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeDescriptionWithValueParamsCompletionHandler(value: string, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeInactiveTextWithValueCompletion(value: string, completion: (p1: NSError) => void): void;

	writeAttributeInactiveTextWithValueCompletionHandler(value: string, completionHandler: (p1: NSError) => void): void;

	writeAttributeInactiveTextWithValueParamsCompletion(value: string, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeInactiveTextWithValueParamsCompletionHandler(value: string, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeOutOfServiceWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeOutOfServiceWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeOutOfServiceWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeOutOfServiceWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributePresentValueWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributePresentValueWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributePresentValueWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributePresentValueWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeReliabilityWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeReliabilityWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeReliabilityWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeReliabilityWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;
}

declare class MTRBaseClusterBinding extends MTRGenericBaseCluster {

	static alloc(): MTRBaseClusterBinding; // inherited from NSObject

	static new(): MTRBaseClusterBinding; // inherited from NSObject

	static readAttributeAcceptedCommandListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAcceptedCommandListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAttributeListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAttributeListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeBindingWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeBindingWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeClusterRevisionWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeClusterRevisionWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeFeatureMapWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeFeatureMapWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeGeneratedCommandListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeGeneratedCommandListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	constructor(o: { device: MTRBaseDevice; endpointID: number; queue: interop.Pointer | interop.Reference<any>; });

	constructor(o: { device: MTRBaseDevice; endpoint: number; queue: interop.Pointer | interop.Reference<any>; });

	initWithDeviceEndpointIDQueue(device: MTRBaseDevice, endpointID: number, queue: interop.Pointer | interop.Reference<any>): this;

	initWithDeviceEndpointQueue(device: MTRBaseDevice, endpoint: number, queue: interop.Pointer | interop.Reference<any>): this;

	readAttributeAcceptedCommandListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAcceptedCommandListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAttributeListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAttributeListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeBindingWithParamsCompletion(params: MTRReadParams, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeBindingWithParamsCompletionHandler(params: MTRReadParams, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeClusterRevisionWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeClusterRevisionWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeFeatureMapWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeFeatureMapWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeGeneratedCommandListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeGeneratedCommandListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAcceptedCommandListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAcceptedCommandListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAttributeListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAttributeListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeBindingWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeBindingWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeClusterRevisionWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeClusterRevisionWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeFeatureMapWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeFeatureMapWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeGeneratedCommandListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeGeneratedCommandListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	writeAttributeBindingWithValueCompletion(value: NSArray<any> | any[], completion: (p1: NSError) => void): void;

	writeAttributeBindingWithValueCompletionHandler(value: NSArray<any> | any[], completionHandler: (p1: NSError) => void): void;

	writeAttributeBindingWithValueParamsCompletion(value: NSArray<any> | any[], params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeBindingWithValueParamsCompletionHandler(value: NSArray<any> | any[], params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;
}

declare class MTRBaseClusterBooleanState extends MTRGenericBaseCluster {

	static alloc(): MTRBaseClusterBooleanState; // inherited from NSObject

	static new(): MTRBaseClusterBooleanState; // inherited from NSObject

	static readAttributeAcceptedCommandListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAcceptedCommandListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAttributeListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAttributeListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeClusterRevisionWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeClusterRevisionWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeFeatureMapWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeFeatureMapWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeGeneratedCommandListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeGeneratedCommandListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeStateValueWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeStateValueWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	constructor(o: { device: MTRBaseDevice; endpointID: number; queue: interop.Pointer | interop.Reference<any>; });

	constructor(o: { device: MTRBaseDevice; endpoint: number; queue: interop.Pointer | interop.Reference<any>; });

	initWithDeviceEndpointIDQueue(device: MTRBaseDevice, endpointID: number, queue: interop.Pointer | interop.Reference<any>): this;

	initWithDeviceEndpointQueue(device: MTRBaseDevice, endpoint: number, queue: interop.Pointer | interop.Reference<any>): this;

	readAttributeAcceptedCommandListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAcceptedCommandListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAttributeListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAttributeListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeClusterRevisionWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeClusterRevisionWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeFeatureMapWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeFeatureMapWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeGeneratedCommandListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeGeneratedCommandListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeStateValueWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeStateValueWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeAcceptedCommandListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAcceptedCommandListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAttributeListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAttributeListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeClusterRevisionWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeClusterRevisionWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeFeatureMapWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeFeatureMapWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeGeneratedCommandListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeGeneratedCommandListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeStateValueWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeStateValueWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;
}

declare class MTRBaseClusterBridgedDeviceBasic extends MTRBaseClusterBridgedDeviceBasicInformation {

	static alloc(): MTRBaseClusterBridgedDeviceBasic; // inherited from NSObject

	static new(): MTRBaseClusterBridgedDeviceBasic; // inherited from NSObject

	static readAttributeAcceptedCommandListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAttributeListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeClusterRevisionWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeFeatureMapWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeGeneratedCommandListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeHardwareVersionStringWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: string, p2: NSError) => void): void;

	static readAttributeHardwareVersionWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeManufacturingDateWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: string, p2: NSError) => void): void;

	static readAttributeNodeLabelWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: string, p2: NSError) => void): void;

	static readAttributePartNumberWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: string, p2: NSError) => void): void;

	static readAttributeProductLabelWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: string, p2: NSError) => void): void;

	static readAttributeProductNameWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: string, p2: NSError) => void): void;

	static readAttributeProductURLWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: string, p2: NSError) => void): void;

	static readAttributeReachableWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeSerialNumberWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: string, p2: NSError) => void): void;

	static readAttributeSoftwareVersionStringWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: string, p2: NSError) => void): void;

	static readAttributeSoftwareVersionWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeUniqueIDWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: string, p2: NSError) => void): void;

	static readAttributeVendorIDWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeVendorNameWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: string, p2: NSError) => void): void;

	constructor(o: { device: MTRBaseDevice; endpoint: number; queue: interop.Pointer | interop.Reference<any>; });

	initWithDeviceEndpointQueue(device: MTRBaseDevice, endpoint: number, queue: interop.Pointer | interop.Reference<any>): this;

	readAttributeAcceptedCommandListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAttributeListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeClusterRevisionWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeFeatureMapWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeGeneratedCommandListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeHardwareVersionStringWithCompletionHandler(completionHandler: (p1: string, p2: NSError) => void): void;

	readAttributeHardwareVersionWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeManufacturingDateWithCompletionHandler(completionHandler: (p1: string, p2: NSError) => void): void;

	readAttributeNodeLabelWithCompletionHandler(completionHandler: (p1: string, p2: NSError) => void): void;

	readAttributePartNumberWithCompletionHandler(completionHandler: (p1: string, p2: NSError) => void): void;

	readAttributeProductLabelWithCompletionHandler(completionHandler: (p1: string, p2: NSError) => void): void;

	readAttributeProductNameWithCompletionHandler(completionHandler: (p1: string, p2: NSError) => void): void;

	readAttributeProductURLWithCompletionHandler(completionHandler: (p1: string, p2: NSError) => void): void;

	readAttributeReachableWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeSerialNumberWithCompletionHandler(completionHandler: (p1: string, p2: NSError) => void): void;

	readAttributeSoftwareVersionStringWithCompletionHandler(completionHandler: (p1: string, p2: NSError) => void): void;

	readAttributeSoftwareVersionWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeUniqueIDWithCompletionHandler(completionHandler: (p1: string, p2: NSError) => void): void;

	readAttributeVendorIDWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeVendorNameWithCompletionHandler(completionHandler: (p1: string, p2: NSError) => void): void;

	subscribeAttributeAcceptedCommandListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAttributeListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeClusterRevisionWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeFeatureMapWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeGeneratedCommandListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeHardwareVersionStringWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: string, p2: NSError) => void): void;

	subscribeAttributeHardwareVersionWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeManufacturingDateWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: string, p2: NSError) => void): void;

	subscribeAttributeNodeLabelWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: string, p2: NSError) => void): void;

	subscribeAttributePartNumberWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: string, p2: NSError) => void): void;

	subscribeAttributeProductLabelWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: string, p2: NSError) => void): void;

	subscribeAttributeProductNameWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: string, p2: NSError) => void): void;

	subscribeAttributeProductURLWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: string, p2: NSError) => void): void;

	subscribeAttributeReachableWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeSerialNumberWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: string, p2: NSError) => void): void;

	subscribeAttributeSoftwareVersionStringWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: string, p2: NSError) => void): void;

	subscribeAttributeSoftwareVersionWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeUniqueIDWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: string, p2: NSError) => void): void;

	subscribeAttributeVendorIDWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeVendorNameWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: string, p2: NSError) => void): void;

	writeAttributeNodeLabelWithValueCompletionHandler(value: string, completionHandler: (p1: NSError) => void): void;

	writeAttributeNodeLabelWithValueParamsCompletionHandler(value: string, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;
}

declare class MTRBaseClusterBridgedDeviceBasicInformation extends MTRGenericBaseCluster {

	static alloc(): MTRBaseClusterBridgedDeviceBasicInformation; // inherited from NSObject

	static new(): MTRBaseClusterBridgedDeviceBasicInformation; // inherited from NSObject

	static readAttributeAcceptedCommandListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAttributeListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeClusterRevisionWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeFeatureMapWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeGeneratedCommandListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeHardwareVersionStringWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: string, p2: NSError) => void): void;

	static readAttributeHardwareVersionWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeManufacturingDateWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: string, p2: NSError) => void): void;

	static readAttributeNodeLabelWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: string, p2: NSError) => void): void;

	static readAttributePartNumberWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: string, p2: NSError) => void): void;

	static readAttributeProductAppearanceWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: MTRBridgedDeviceBasicInformationClusterProductAppearanceStruct, p2: NSError) => void): void;

	static readAttributeProductLabelWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: string, p2: NSError) => void): void;

	static readAttributeProductNameWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: string, p2: NSError) => void): void;

	static readAttributeProductURLWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: string, p2: NSError) => void): void;

	static readAttributeReachableWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeSerialNumberWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: string, p2: NSError) => void): void;

	static readAttributeSoftwareVersionStringWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: string, p2: NSError) => void): void;

	static readAttributeSoftwareVersionWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeUniqueIDWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: string, p2: NSError) => void): void;

	static readAttributeVendorIDWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeVendorNameWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: string, p2: NSError) => void): void;

	constructor(o: { device: MTRBaseDevice; endpointID: number; queue: interop.Pointer | interop.Reference<any>; });

	initWithDeviceEndpointIDQueue(device: MTRBaseDevice, endpointID: number, queue: interop.Pointer | interop.Reference<any>): this;

	readAttributeAcceptedCommandListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAttributeListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeClusterRevisionWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeFeatureMapWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeGeneratedCommandListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeHardwareVersionStringWithCompletion(completion: (p1: string, p2: NSError) => void): void;

	readAttributeHardwareVersionWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeManufacturingDateWithCompletion(completion: (p1: string, p2: NSError) => void): void;

	readAttributeNodeLabelWithCompletion(completion: (p1: string, p2: NSError) => void): void;

	readAttributePartNumberWithCompletion(completion: (p1: string, p2: NSError) => void): void;

	readAttributeProductAppearanceWithCompletion(completion: (p1: MTRBridgedDeviceBasicInformationClusterProductAppearanceStruct, p2: NSError) => void): void;

	readAttributeProductLabelWithCompletion(completion: (p1: string, p2: NSError) => void): void;

	readAttributeProductNameWithCompletion(completion: (p1: string, p2: NSError) => void): void;

	readAttributeProductURLWithCompletion(completion: (p1: string, p2: NSError) => void): void;

	readAttributeReachableWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeSerialNumberWithCompletion(completion: (p1: string, p2: NSError) => void): void;

	readAttributeSoftwareVersionStringWithCompletion(completion: (p1: string, p2: NSError) => void): void;

	readAttributeSoftwareVersionWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeUniqueIDWithCompletion(completion: (p1: string, p2: NSError) => void): void;

	readAttributeVendorIDWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeVendorNameWithCompletion(completion: (p1: string, p2: NSError) => void): void;

	subscribeAttributeAcceptedCommandListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAttributeListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeClusterRevisionWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeFeatureMapWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeGeneratedCommandListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeHardwareVersionStringWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: string, p2: NSError) => void): void;

	subscribeAttributeHardwareVersionWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeManufacturingDateWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: string, p2: NSError) => void): void;

	subscribeAttributeNodeLabelWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: string, p2: NSError) => void): void;

	subscribeAttributePartNumberWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: string, p2: NSError) => void): void;

	subscribeAttributeProductAppearanceWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: MTRBridgedDeviceBasicInformationClusterProductAppearanceStruct, p2: NSError) => void): void;

	subscribeAttributeProductLabelWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: string, p2: NSError) => void): void;

	subscribeAttributeProductNameWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: string, p2: NSError) => void): void;

	subscribeAttributeProductURLWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: string, p2: NSError) => void): void;

	subscribeAttributeReachableWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeSerialNumberWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: string, p2: NSError) => void): void;

	subscribeAttributeSoftwareVersionStringWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: string, p2: NSError) => void): void;

	subscribeAttributeSoftwareVersionWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeUniqueIDWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: string, p2: NSError) => void): void;

	subscribeAttributeVendorIDWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeVendorNameWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: string, p2: NSError) => void): void;

	writeAttributeNodeLabelWithValueCompletion(value: string, completion: (p1: NSError) => void): void;

	writeAttributeNodeLabelWithValueParamsCompletion(value: string, params: MTRWriteParams, completion: (p1: NSError) => void): void;
}

declare class MTRBaseClusterChannel extends MTRGenericBaseCluster {

	static alloc(): MTRBaseClusterChannel; // inherited from NSObject

	static new(): MTRBaseClusterChannel; // inherited from NSObject

	static readAttributeAcceptedCommandListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAcceptedCommandListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAttributeListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAttributeListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeChannelListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeChannelListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeClusterRevisionWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeClusterRevisionWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeCurrentChannelWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: MTRChannelClusterChannelInfo, p2: NSError) => void): void;

	static readAttributeCurrentChannelWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: MTRChannelClusterChannelInfoStruct, p2: NSError) => void): void;

	static readAttributeFeatureMapWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeFeatureMapWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeGeneratedCommandListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeGeneratedCommandListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeLineupWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: MTRChannelClusterLineupInfo, p2: NSError) => void): void;

	static readAttributeLineupWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: MTRChannelClusterLineupInfoStruct, p2: NSError) => void): void;

	constructor(o: { device: MTRBaseDevice; endpointID: number; queue: interop.Pointer | interop.Reference<any>; });

	constructor(o: { device: MTRBaseDevice; endpoint: number; queue: interop.Pointer | interop.Reference<any>; });

	changeChannelByNumberWithParamsCompletion(params: MTRChannelClusterChangeChannelByNumberParams, completion: (p1: NSError) => void): void;

	changeChannelByNumberWithParamsCompletionHandler(params: MTRChannelClusterChangeChannelByNumberParams, completionHandler: (p1: NSError) => void): void;

	changeChannelWithParamsCompletion(params: MTRChannelClusterChangeChannelParams, completion: (p1: MTRChannelClusterChangeChannelResponseParams, p2: NSError) => void): void;

	changeChannelWithParamsCompletionHandler(params: MTRChannelClusterChangeChannelParams, completionHandler: (p1: MTRChannelClusterChangeChannelResponseParams, p2: NSError) => void): void;

	initWithDeviceEndpointIDQueue(device: MTRBaseDevice, endpointID: number, queue: interop.Pointer | interop.Reference<any>): this;

	initWithDeviceEndpointQueue(device: MTRBaseDevice, endpoint: number, queue: interop.Pointer | interop.Reference<any>): this;

	readAttributeAcceptedCommandListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAcceptedCommandListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAttributeListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAttributeListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeChannelListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeChannelListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeClusterRevisionWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeClusterRevisionWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeCurrentChannelWithCompletion(completion: (p1: MTRChannelClusterChannelInfoStruct, p2: NSError) => void): void;

	readAttributeCurrentChannelWithCompletionHandler(completionHandler: (p1: MTRChannelClusterChannelInfo, p2: NSError) => void): void;

	readAttributeFeatureMapWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeFeatureMapWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeGeneratedCommandListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeGeneratedCommandListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeLineupWithCompletion(completion: (p1: MTRChannelClusterLineupInfoStruct, p2: NSError) => void): void;

	readAttributeLineupWithCompletionHandler(completionHandler: (p1: MTRChannelClusterLineupInfo, p2: NSError) => void): void;

	skipChannelWithParamsCompletion(params: MTRChannelClusterSkipChannelParams, completion: (p1: NSError) => void): void;

	skipChannelWithParamsCompletionHandler(params: MTRChannelClusterSkipChannelParams, completionHandler: (p1: NSError) => void): void;

	subscribeAttributeAcceptedCommandListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAcceptedCommandListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAttributeListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAttributeListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeChannelListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeChannelListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeClusterRevisionWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeClusterRevisionWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeCurrentChannelWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: MTRChannelClusterChannelInfo, p2: NSError) => void): void;

	subscribeAttributeCurrentChannelWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: MTRChannelClusterChannelInfoStruct, p2: NSError) => void): void;

	subscribeAttributeFeatureMapWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeFeatureMapWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeGeneratedCommandListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeGeneratedCommandListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeLineupWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: MTRChannelClusterLineupInfo, p2: NSError) => void): void;

	subscribeAttributeLineupWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: MTRChannelClusterLineupInfoStruct, p2: NSError) => void): void;
}

declare class MTRBaseClusterColorControl extends MTRGenericBaseCluster {

	static alloc(): MTRBaseClusterColorControl; // inherited from NSObject

	static new(): MTRBaseClusterColorControl; // inherited from NSObject

	static readAttributeAcceptedCommandListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAcceptedCommandListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAttributeListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAttributeListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeClusterRevisionWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeClusterRevisionWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeColorCapabilitiesWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeColorCapabilitiesWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeColorLoopActiveWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeColorLoopActiveWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeColorLoopDirectionWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeColorLoopDirectionWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeColorLoopStartEnhancedHueWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeColorLoopStartEnhancedHueWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeColorLoopStoredEnhancedHueWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeColorLoopStoredEnhancedHueWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeColorLoopTimeWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeColorLoopTimeWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeColorModeWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeColorModeWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeColorPointBIntensityWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeColorPointBIntensityWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeColorPointBXWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeColorPointBXWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeColorPointBYWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeColorPointBYWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeColorPointGIntensityWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeColorPointGIntensityWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeColorPointGXWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeColorPointGXWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeColorPointGYWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeColorPointGYWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeColorPointRIntensityWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeColorPointRIntensityWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeColorPointRXWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeColorPointRXWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeColorPointRYWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeColorPointRYWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeColorTempPhysicalMaxMiredsWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeColorTempPhysicalMaxMiredsWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeColorTempPhysicalMinMiredsWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeColorTempPhysicalMinMiredsWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeColorTemperatureMiredsWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeColorTemperatureMiredsWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeCompensationTextWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: string, p2: NSError) => void): void;

	static readAttributeCompensationTextWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: string, p2: NSError) => void): void;

	static readAttributeCoupleColorTempToLevelMinMiredsWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeCoupleColorTempToLevelMinMiredsWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeCurrentHueWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeCurrentHueWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeCurrentSaturationWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeCurrentSaturationWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeCurrentXWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeCurrentXWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeCurrentYWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeCurrentYWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeDriftCompensationWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeDriftCompensationWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeEnhancedColorModeWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeEnhancedColorModeWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeEnhancedCurrentHueWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeEnhancedCurrentHueWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeFeatureMapWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeFeatureMapWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeGeneratedCommandListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeGeneratedCommandListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeNumberOfPrimariesWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeNumberOfPrimariesWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeOptionsWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeOptionsWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributePrimary1IntensityWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributePrimary1IntensityWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributePrimary1XWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributePrimary1XWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributePrimary1YWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributePrimary1YWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributePrimary2IntensityWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributePrimary2IntensityWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributePrimary2XWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributePrimary2XWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributePrimary2YWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributePrimary2YWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributePrimary3IntensityWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributePrimary3IntensityWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributePrimary3XWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributePrimary3XWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributePrimary3YWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributePrimary3YWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributePrimary4IntensityWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributePrimary4IntensityWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributePrimary4XWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributePrimary4XWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributePrimary4YWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributePrimary4YWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributePrimary5IntensityWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributePrimary5IntensityWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributePrimary5XWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributePrimary5XWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributePrimary5YWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributePrimary5YWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributePrimary6IntensityWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributePrimary6IntensityWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributePrimary6XWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributePrimary6XWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributePrimary6YWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributePrimary6YWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeRemainingTimeWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeRemainingTimeWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeStartUpColorTemperatureMiredsWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeStartUpColorTemperatureMiredsWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeWhitePointXWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeWhitePointXWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeWhitePointYWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeWhitePointYWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	constructor(o: { device: MTRBaseDevice; endpointID: number; queue: interop.Pointer | interop.Reference<any>; });

	constructor(o: { device: MTRBaseDevice; endpoint: number; queue: interop.Pointer | interop.Reference<any>; });

	colorLoopSetWithParamsCompletion(params: MTRColorControlClusterColorLoopSetParams, completion: (p1: NSError) => void): void;

	colorLoopSetWithParamsCompletionHandler(params: MTRColorControlClusterColorLoopSetParams, completionHandler: (p1: NSError) => void): void;

	enhancedMoveHueWithParamsCompletion(params: MTRColorControlClusterEnhancedMoveHueParams, completion: (p1: NSError) => void): void;

	enhancedMoveHueWithParamsCompletionHandler(params: MTRColorControlClusterEnhancedMoveHueParams, completionHandler: (p1: NSError) => void): void;

	enhancedMoveToHueAndSaturationWithParamsCompletion(params: MTRColorControlClusterEnhancedMoveToHueAndSaturationParams, completion: (p1: NSError) => void): void;

	enhancedMoveToHueAndSaturationWithParamsCompletionHandler(params: MTRColorControlClusterEnhancedMoveToHueAndSaturationParams, completionHandler: (p1: NSError) => void): void;

	enhancedMoveToHueWithParamsCompletion(params: MTRColorControlClusterEnhancedMoveToHueParams, completion: (p1: NSError) => void): void;

	enhancedMoveToHueWithParamsCompletionHandler(params: MTRColorControlClusterEnhancedMoveToHueParams, completionHandler: (p1: NSError) => void): void;

	enhancedStepHueWithParamsCompletion(params: MTRColorControlClusterEnhancedStepHueParams, completion: (p1: NSError) => void): void;

	enhancedStepHueWithParamsCompletionHandler(params: MTRColorControlClusterEnhancedStepHueParams, completionHandler: (p1: NSError) => void): void;

	initWithDeviceEndpointIDQueue(device: MTRBaseDevice, endpointID: number, queue: interop.Pointer | interop.Reference<any>): this;

	initWithDeviceEndpointQueue(device: MTRBaseDevice, endpoint: number, queue: interop.Pointer | interop.Reference<any>): this;

	moveColorTemperatureWithParamsCompletion(params: MTRColorControlClusterMoveColorTemperatureParams, completion: (p1: NSError) => void): void;

	moveColorTemperatureWithParamsCompletionHandler(params: MTRColorControlClusterMoveColorTemperatureParams, completionHandler: (p1: NSError) => void): void;

	moveColorWithParamsCompletion(params: MTRColorControlClusterMoveColorParams, completion: (p1: NSError) => void): void;

	moveColorWithParamsCompletionHandler(params: MTRColorControlClusterMoveColorParams, completionHandler: (p1: NSError) => void): void;

	moveHueWithParamsCompletion(params: MTRColorControlClusterMoveHueParams, completion: (p1: NSError) => void): void;

	moveHueWithParamsCompletionHandler(params: MTRColorControlClusterMoveHueParams, completionHandler: (p1: NSError) => void): void;

	moveSaturationWithParamsCompletion(params: MTRColorControlClusterMoveSaturationParams, completion: (p1: NSError) => void): void;

	moveSaturationWithParamsCompletionHandler(params: MTRColorControlClusterMoveSaturationParams, completionHandler: (p1: NSError) => void): void;

	moveToColorTemperatureWithParamsCompletion(params: MTRColorControlClusterMoveToColorTemperatureParams, completion: (p1: NSError) => void): void;

	moveToColorTemperatureWithParamsCompletionHandler(params: MTRColorControlClusterMoveToColorTemperatureParams, completionHandler: (p1: NSError) => void): void;

	moveToColorWithParamsCompletion(params: MTRColorControlClusterMoveToColorParams, completion: (p1: NSError) => void): void;

	moveToColorWithParamsCompletionHandler(params: MTRColorControlClusterMoveToColorParams, completionHandler: (p1: NSError) => void): void;

	moveToHueAndSaturationWithParamsCompletion(params: MTRColorControlClusterMoveToHueAndSaturationParams, completion: (p1: NSError) => void): void;

	moveToHueAndSaturationWithParamsCompletionHandler(params: MTRColorControlClusterMoveToHueAndSaturationParams, completionHandler: (p1: NSError) => void): void;

	moveToHueWithParamsCompletion(params: MTRColorControlClusterMoveToHueParams, completion: (p1: NSError) => void): void;

	moveToHueWithParamsCompletionHandler(params: MTRColorControlClusterMoveToHueParams, completionHandler: (p1: NSError) => void): void;

	moveToSaturationWithParamsCompletion(params: MTRColorControlClusterMoveToSaturationParams, completion: (p1: NSError) => void): void;

	moveToSaturationWithParamsCompletionHandler(params: MTRColorControlClusterMoveToSaturationParams, completionHandler: (p1: NSError) => void): void;

	readAttributeAcceptedCommandListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAcceptedCommandListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAttributeListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAttributeListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeClusterRevisionWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeClusterRevisionWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeColorCapabilitiesWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeColorCapabilitiesWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeColorLoopActiveWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeColorLoopActiveWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeColorLoopDirectionWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeColorLoopDirectionWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeColorLoopStartEnhancedHueWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeColorLoopStartEnhancedHueWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeColorLoopStoredEnhancedHueWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeColorLoopStoredEnhancedHueWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeColorLoopTimeWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeColorLoopTimeWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeColorModeWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeColorModeWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeColorPointBIntensityWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeColorPointBIntensityWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeColorPointBXWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeColorPointBXWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeColorPointBYWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeColorPointBYWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeColorPointGIntensityWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeColorPointGIntensityWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeColorPointGXWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeColorPointGXWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeColorPointGYWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeColorPointGYWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeColorPointRIntensityWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeColorPointRIntensityWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeColorPointRXWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeColorPointRXWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeColorPointRYWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeColorPointRYWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeColorTempPhysicalMaxMiredsWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeColorTempPhysicalMaxMiredsWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeColorTempPhysicalMinMiredsWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeColorTempPhysicalMinMiredsWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeColorTemperatureMiredsWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeColorTemperatureMiredsWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeCompensationTextWithCompletion(completion: (p1: string, p2: NSError) => void): void;

	readAttributeCompensationTextWithCompletionHandler(completionHandler: (p1: string, p2: NSError) => void): void;

	readAttributeCoupleColorTempToLevelMinMiredsWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeCoupleColorTempToLevelMinMiredsWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeCurrentHueWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeCurrentHueWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeCurrentSaturationWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeCurrentSaturationWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeCurrentXWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeCurrentXWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeCurrentYWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeCurrentYWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeDriftCompensationWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeDriftCompensationWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeEnhancedColorModeWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeEnhancedColorModeWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeEnhancedCurrentHueWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeEnhancedCurrentHueWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeFeatureMapWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeFeatureMapWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeGeneratedCommandListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeGeneratedCommandListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeNumberOfPrimariesWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeNumberOfPrimariesWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeOptionsWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeOptionsWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributePrimary1IntensityWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributePrimary1IntensityWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributePrimary1XWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributePrimary1XWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributePrimary1YWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributePrimary1YWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributePrimary2IntensityWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributePrimary2IntensityWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributePrimary2XWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributePrimary2XWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributePrimary2YWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributePrimary2YWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributePrimary3IntensityWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributePrimary3IntensityWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributePrimary3XWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributePrimary3XWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributePrimary3YWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributePrimary3YWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributePrimary4IntensityWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributePrimary4IntensityWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributePrimary4XWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributePrimary4XWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributePrimary4YWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributePrimary4YWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributePrimary5IntensityWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributePrimary5IntensityWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributePrimary5XWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributePrimary5XWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributePrimary5YWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributePrimary5YWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributePrimary6IntensityWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributePrimary6IntensityWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributePrimary6XWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributePrimary6XWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributePrimary6YWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributePrimary6YWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeRemainingTimeWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeRemainingTimeWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeStartUpColorTemperatureMiredsWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeStartUpColorTemperatureMiredsWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeWhitePointXWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeWhitePointXWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeWhitePointYWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeWhitePointYWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	stepColorTemperatureWithParamsCompletion(params: MTRColorControlClusterStepColorTemperatureParams, completion: (p1: NSError) => void): void;

	stepColorTemperatureWithParamsCompletionHandler(params: MTRColorControlClusterStepColorTemperatureParams, completionHandler: (p1: NSError) => void): void;

	stepColorWithParamsCompletion(params: MTRColorControlClusterStepColorParams, completion: (p1: NSError) => void): void;

	stepColorWithParamsCompletionHandler(params: MTRColorControlClusterStepColorParams, completionHandler: (p1: NSError) => void): void;

	stepHueWithParamsCompletion(params: MTRColorControlClusterStepHueParams, completion: (p1: NSError) => void): void;

	stepHueWithParamsCompletionHandler(params: MTRColorControlClusterStepHueParams, completionHandler: (p1: NSError) => void): void;

	stepSaturationWithParamsCompletion(params: MTRColorControlClusterStepSaturationParams, completion: (p1: NSError) => void): void;

	stepSaturationWithParamsCompletionHandler(params: MTRColorControlClusterStepSaturationParams, completionHandler: (p1: NSError) => void): void;

	stopMoveStepWithParamsCompletion(params: MTRColorControlClusterStopMoveStepParams, completion: (p1: NSError) => void): void;

	stopMoveStepWithParamsCompletionHandler(params: MTRColorControlClusterStopMoveStepParams, completionHandler: (p1: NSError) => void): void;

	subscribeAttributeAcceptedCommandListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAcceptedCommandListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAttributeListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAttributeListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeClusterRevisionWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeClusterRevisionWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeColorCapabilitiesWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeColorCapabilitiesWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeColorLoopActiveWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeColorLoopActiveWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeColorLoopDirectionWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeColorLoopDirectionWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeColorLoopStartEnhancedHueWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeColorLoopStartEnhancedHueWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeColorLoopStoredEnhancedHueWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeColorLoopStoredEnhancedHueWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeColorLoopTimeWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeColorLoopTimeWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeColorModeWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeColorModeWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeColorPointBIntensityWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeColorPointBIntensityWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeColorPointBXWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeColorPointBXWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeColorPointBYWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeColorPointBYWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeColorPointGIntensityWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeColorPointGIntensityWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeColorPointGXWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeColorPointGXWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeColorPointGYWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeColorPointGYWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeColorPointRIntensityWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeColorPointRIntensityWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeColorPointRXWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeColorPointRXWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeColorPointRYWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeColorPointRYWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeColorTempPhysicalMaxMiredsWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeColorTempPhysicalMaxMiredsWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeColorTempPhysicalMinMiredsWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeColorTempPhysicalMinMiredsWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeColorTemperatureMiredsWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeColorTemperatureMiredsWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeCompensationTextWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: string, p2: NSError) => void): void;

	subscribeAttributeCompensationTextWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: string, p2: NSError) => void): void;

	subscribeAttributeCoupleColorTempToLevelMinMiredsWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeCoupleColorTempToLevelMinMiredsWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeCurrentHueWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeCurrentHueWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeCurrentSaturationWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeCurrentSaturationWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeCurrentXWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeCurrentXWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeCurrentYWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeCurrentYWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeDriftCompensationWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeDriftCompensationWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeEnhancedColorModeWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeEnhancedColorModeWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeEnhancedCurrentHueWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeEnhancedCurrentHueWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeFeatureMapWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeFeatureMapWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeGeneratedCommandListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeGeneratedCommandListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeNumberOfPrimariesWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeNumberOfPrimariesWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeOptionsWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeOptionsWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributePrimary1IntensityWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributePrimary1IntensityWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributePrimary1XWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributePrimary1XWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributePrimary1YWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributePrimary1YWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributePrimary2IntensityWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributePrimary2IntensityWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributePrimary2XWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributePrimary2XWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributePrimary2YWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributePrimary2YWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributePrimary3IntensityWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributePrimary3IntensityWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributePrimary3XWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributePrimary3XWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributePrimary3YWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributePrimary3YWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributePrimary4IntensityWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributePrimary4IntensityWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributePrimary4XWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributePrimary4XWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributePrimary4YWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributePrimary4YWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributePrimary5IntensityWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributePrimary5IntensityWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributePrimary5XWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributePrimary5XWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributePrimary5YWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributePrimary5YWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributePrimary6IntensityWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributePrimary6IntensityWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributePrimary6XWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributePrimary6XWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributePrimary6YWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributePrimary6YWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeRemainingTimeWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeRemainingTimeWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeStartUpColorTemperatureMiredsWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeStartUpColorTemperatureMiredsWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeWhitePointXWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeWhitePointXWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeWhitePointYWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeWhitePointYWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	writeAttributeColorPointBIntensityWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeColorPointBIntensityWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeColorPointBIntensityWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeColorPointBIntensityWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeColorPointBXWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeColorPointBXWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeColorPointBXWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeColorPointBXWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeColorPointBYWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeColorPointBYWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeColorPointBYWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeColorPointBYWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeColorPointGIntensityWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeColorPointGIntensityWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeColorPointGIntensityWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeColorPointGIntensityWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeColorPointGXWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeColorPointGXWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeColorPointGXWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeColorPointGXWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeColorPointGYWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeColorPointGYWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeColorPointGYWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeColorPointGYWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeColorPointRIntensityWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeColorPointRIntensityWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeColorPointRIntensityWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeColorPointRIntensityWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeColorPointRXWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeColorPointRXWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeColorPointRXWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeColorPointRXWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeColorPointRYWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeColorPointRYWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeColorPointRYWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeColorPointRYWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeOptionsWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeOptionsWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeOptionsWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeOptionsWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeStartUpColorTemperatureMiredsWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeStartUpColorTemperatureMiredsWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeStartUpColorTemperatureMiredsWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeStartUpColorTemperatureMiredsWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeWhitePointXWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeWhitePointXWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeWhitePointXWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeWhitePointXWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeWhitePointYWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeWhitePointYWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeWhitePointYWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeWhitePointYWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;
}

declare class MTRBaseClusterContentLauncher extends MTRGenericBaseCluster {

	static alloc(): MTRBaseClusterContentLauncher; // inherited from NSObject

	static new(): MTRBaseClusterContentLauncher; // inherited from NSObject

	static readAttributeAcceptHeaderWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAcceptHeaderWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAcceptedCommandListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAcceptedCommandListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAttributeListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAttributeListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeClusterRevisionWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeClusterRevisionWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeFeatureMapWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeFeatureMapWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeGeneratedCommandListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeGeneratedCommandListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeSupportedStreamingProtocolsWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeSupportedStreamingProtocolsWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	constructor(o: { device: MTRBaseDevice; endpointID: number; queue: interop.Pointer | interop.Reference<any>; });

	constructor(o: { device: MTRBaseDevice; endpoint: number; queue: interop.Pointer | interop.Reference<any>; });

	initWithDeviceEndpointIDQueue(device: MTRBaseDevice, endpointID: number, queue: interop.Pointer | interop.Reference<any>): this;

	initWithDeviceEndpointQueue(device: MTRBaseDevice, endpoint: number, queue: interop.Pointer | interop.Reference<any>): this;

	launchContentWithParamsCompletion(params: MTRContentLauncherClusterLaunchContentParams, completion: (p1: MTRContentLauncherClusterLauncherResponseParams, p2: NSError) => void): void;

	launchContentWithParamsCompletionHandler(params: MTRContentLauncherClusterLaunchContentParams, completionHandler: (p1: MTRContentLauncherClusterLaunchResponseParams, p2: NSError) => void): void;

	launchURLWithParamsCompletion(params: MTRContentLauncherClusterLaunchURLParams, completion: (p1: MTRContentLauncherClusterLauncherResponseParams, p2: NSError) => void): void;

	launchURLWithParamsCompletionHandler(params: MTRContentLauncherClusterLaunchURLParams, completionHandler: (p1: MTRContentLauncherClusterLaunchResponseParams, p2: NSError) => void): void;

	readAttributeAcceptHeaderWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAcceptHeaderWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAcceptedCommandListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAcceptedCommandListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAttributeListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAttributeListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeClusterRevisionWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeClusterRevisionWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeFeatureMapWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeFeatureMapWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeGeneratedCommandListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeGeneratedCommandListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeSupportedStreamingProtocolsWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeSupportedStreamingProtocolsWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeAcceptHeaderWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAcceptHeaderWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAcceptedCommandListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAcceptedCommandListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAttributeListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAttributeListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeClusterRevisionWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeClusterRevisionWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeFeatureMapWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeFeatureMapWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeGeneratedCommandListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeGeneratedCommandListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeSupportedStreamingProtocolsWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeSupportedStreamingProtocolsWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	writeAttributeSupportedStreamingProtocolsWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeSupportedStreamingProtocolsWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeSupportedStreamingProtocolsWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeSupportedStreamingProtocolsWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;
}

declare class MTRBaseClusterDescriptor extends MTRGenericBaseCluster {

	static alloc(): MTRBaseClusterDescriptor; // inherited from NSObject

	static new(): MTRBaseClusterDescriptor; // inherited from NSObject

	static readAttributeAcceptedCommandListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAcceptedCommandListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAttributeListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAttributeListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeClientListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeClientListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeClusterRevisionWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeClusterRevisionWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeDeviceListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeDeviceTypeListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeFeatureMapWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeFeatureMapWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeGeneratedCommandListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeGeneratedCommandListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributePartsListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributePartsListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeServerListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeServerListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	constructor(o: { device: MTRBaseDevice; endpointID: number; queue: interop.Pointer | interop.Reference<any>; });

	constructor(o: { device: MTRBaseDevice; endpoint: number; queue: interop.Pointer | interop.Reference<any>; });

	initWithDeviceEndpointIDQueue(device: MTRBaseDevice, endpointID: number, queue: interop.Pointer | interop.Reference<any>): this;

	initWithDeviceEndpointQueue(device: MTRBaseDevice, endpoint: number, queue: interop.Pointer | interop.Reference<any>): this;

	readAttributeAcceptedCommandListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAcceptedCommandListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAttributeListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAttributeListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeClientListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeClientListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeClusterRevisionWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeClusterRevisionWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeDeviceListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeDeviceTypeListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeFeatureMapWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeFeatureMapWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeGeneratedCommandListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeGeneratedCommandListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributePartsListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributePartsListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeServerListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeServerListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAcceptedCommandListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAcceptedCommandListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAttributeListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAttributeListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeClientListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeClientListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeClusterRevisionWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeClusterRevisionWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeDeviceListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeDeviceTypeListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeFeatureMapWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeFeatureMapWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeGeneratedCommandListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeGeneratedCommandListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributePartsListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributePartsListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeServerListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeServerListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;
}

declare class MTRBaseClusterDiagnosticLogs extends MTRGenericBaseCluster {

	static alloc(): MTRBaseClusterDiagnosticLogs; // inherited from NSObject

	static new(): MTRBaseClusterDiagnosticLogs; // inherited from NSObject

	static readAttributeAcceptedCommandListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAcceptedCommandListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAttributeListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAttributeListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeClusterRevisionWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeClusterRevisionWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeFeatureMapWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeFeatureMapWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeGeneratedCommandListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeGeneratedCommandListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	constructor(o: { device: MTRBaseDevice; endpointID: number; queue: interop.Pointer | interop.Reference<any>; });

	constructor(o: { device: MTRBaseDevice; endpoint: number; queue: interop.Pointer | interop.Reference<any>; });

	initWithDeviceEndpointIDQueue(device: MTRBaseDevice, endpointID: number, queue: interop.Pointer | interop.Reference<any>): this;

	initWithDeviceEndpointQueue(device: MTRBaseDevice, endpoint: number, queue: interop.Pointer | interop.Reference<any>): this;

	readAttributeAcceptedCommandListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAcceptedCommandListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAttributeListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAttributeListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeClusterRevisionWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeClusterRevisionWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeFeatureMapWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeFeatureMapWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeGeneratedCommandListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeGeneratedCommandListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	retrieveLogsRequestWithParamsCompletion(params: MTRDiagnosticLogsClusterRetrieveLogsRequestParams, completion: (p1: MTRDiagnosticLogsClusterRetrieveLogsResponseParams, p2: NSError) => void): void;

	retrieveLogsRequestWithParamsCompletionHandler(params: MTRDiagnosticLogsClusterRetrieveLogsRequestParams, completionHandler: (p1: MTRDiagnosticLogsClusterRetrieveLogsResponseParams, p2: NSError) => void): void;

	subscribeAttributeAcceptedCommandListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAcceptedCommandListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAttributeListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAttributeListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeClusterRevisionWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeClusterRevisionWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeFeatureMapWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeFeatureMapWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeGeneratedCommandListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeGeneratedCommandListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;
}

declare class MTRBaseClusterDoorLock extends MTRGenericBaseCluster {

	static alloc(): MTRBaseClusterDoorLock; // inherited from NSObject

	static new(): MTRBaseClusterDoorLock; // inherited from NSObject

	static readAttributeAcceptedCommandListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAcceptedCommandListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeActuatorEnabledWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeActuatorEnabledWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeAttributeListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAttributeListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAutoRelockTimeWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeAutoRelockTimeWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeClusterRevisionWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeClusterRevisionWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeCredentialRulesSupportWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeCredentialRulesSupportWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeDefaultConfigurationRegisterWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeDefaultConfigurationRegisterWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeDoorClosedEventsWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeDoorClosedEventsWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeDoorOpenEventsWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeDoorOpenEventsWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeDoorStateWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeDoorStateWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeEnableInsideStatusLEDWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeEnableInsideStatusLEDWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeEnableLocalProgrammingWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeEnableLocalProgrammingWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeEnableOneTouchLockingWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeEnableOneTouchLockingWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeEnablePrivacyModeButtonWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeEnablePrivacyModeButtonWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeExpiringUserTimeoutWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeExpiringUserTimeoutWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeFeatureMapWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeFeatureMapWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeGeneratedCommandListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeGeneratedCommandListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeLEDSettingsWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeLEDSettingsWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeLanguageWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: string, p2: NSError) => void): void;

	static readAttributeLanguageWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: string, p2: NSError) => void): void;

	static readAttributeLocalProgrammingFeaturesWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeLocalProgrammingFeaturesWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeLockStateWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeLockStateWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeLockTypeWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeLockTypeWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeMaxPINCodeLengthWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeMaxPINCodeLengthWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeMaxRFIDCodeLengthWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeMaxRFIDCodeLengthWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeMinPINCodeLengthWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeMinPINCodeLengthWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeMinRFIDCodeLengthWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeMinRFIDCodeLengthWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeNumberOfCredentialsSupportedPerUserWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeNumberOfCredentialsSupportedPerUserWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeNumberOfHolidaySchedulesSupportedWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeNumberOfHolidaySchedulesSupportedWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeNumberOfPINUsersSupportedWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeNumberOfPINUsersSupportedWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeNumberOfRFIDUsersSupportedWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeNumberOfRFIDUsersSupportedWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeNumberOfTotalUsersSupportedWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeNumberOfTotalUsersSupportedWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeNumberOfWeekDaySchedulesSupportedPerUserWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeNumberOfWeekDaySchedulesSupportedPerUserWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeNumberOfYearDaySchedulesSupportedPerUserWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeNumberOfYearDaySchedulesSupportedPerUserWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeOpenPeriodWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeOpenPeriodWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeOperatingModeWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeOperatingModeWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeRequirePINforRemoteOperationWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeRequirePINforRemoteOperationWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeSendPINOverTheAirWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeSendPINOverTheAirWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeSoundVolumeWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeSoundVolumeWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeSupportedOperatingModesWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeSupportedOperatingModesWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeUserCodeTemporaryDisableTimeWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeUserCodeTemporaryDisableTimeWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeWrongCodeEntryLimitWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeWrongCodeEntryLimitWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	constructor(o: { device: MTRBaseDevice; endpointID: number; queue: interop.Pointer | interop.Reference<any>; });

	constructor(o: { device: MTRBaseDevice; endpoint: number; queue: interop.Pointer | interop.Reference<any>; });

	clearCredentialWithParamsCompletion(params: MTRDoorLockClusterClearCredentialParams, completion: (p1: NSError) => void): void;

	clearCredentialWithParamsCompletionHandler(params: MTRDoorLockClusterClearCredentialParams, completionHandler: (p1: NSError) => void): void;

	clearHolidayScheduleWithParamsCompletion(params: MTRDoorLockClusterClearHolidayScheduleParams, completion: (p1: NSError) => void): void;

	clearHolidayScheduleWithParamsCompletionHandler(params: MTRDoorLockClusterClearHolidayScheduleParams, completionHandler: (p1: NSError) => void): void;

	clearUserWithParamsCompletion(params: MTRDoorLockClusterClearUserParams, completion: (p1: NSError) => void): void;

	clearUserWithParamsCompletionHandler(params: MTRDoorLockClusterClearUserParams, completionHandler: (p1: NSError) => void): void;

	clearWeekDayScheduleWithParamsCompletion(params: MTRDoorLockClusterClearWeekDayScheduleParams, completion: (p1: NSError) => void): void;

	clearWeekDayScheduleWithParamsCompletionHandler(params: MTRDoorLockClusterClearWeekDayScheduleParams, completionHandler: (p1: NSError) => void): void;

	clearYearDayScheduleWithParamsCompletion(params: MTRDoorLockClusterClearYearDayScheduleParams, completion: (p1: NSError) => void): void;

	clearYearDayScheduleWithParamsCompletionHandler(params: MTRDoorLockClusterClearYearDayScheduleParams, completionHandler: (p1: NSError) => void): void;

	getCredentialStatusWithParamsCompletion(params: MTRDoorLockClusterGetCredentialStatusParams, completion: (p1: MTRDoorLockClusterGetCredentialStatusResponseParams, p2: NSError) => void): void;

	getCredentialStatusWithParamsCompletionHandler(params: MTRDoorLockClusterGetCredentialStatusParams, completionHandler: (p1: MTRDoorLockClusterGetCredentialStatusResponseParams, p2: NSError) => void): void;

	getHolidayScheduleWithParamsCompletion(params: MTRDoorLockClusterGetHolidayScheduleParams, completion: (p1: MTRDoorLockClusterGetHolidayScheduleResponseParams, p2: NSError) => void): void;

	getHolidayScheduleWithParamsCompletionHandler(params: MTRDoorLockClusterGetHolidayScheduleParams, completionHandler: (p1: MTRDoorLockClusterGetHolidayScheduleResponseParams, p2: NSError) => void): void;

	getUserWithParamsCompletion(params: MTRDoorLockClusterGetUserParams, completion: (p1: MTRDoorLockClusterGetUserResponseParams, p2: NSError) => void): void;

	getUserWithParamsCompletionHandler(params: MTRDoorLockClusterGetUserParams, completionHandler: (p1: MTRDoorLockClusterGetUserResponseParams, p2: NSError) => void): void;

	getWeekDayScheduleWithParamsCompletion(params: MTRDoorLockClusterGetWeekDayScheduleParams, completion: (p1: MTRDoorLockClusterGetWeekDayScheduleResponseParams, p2: NSError) => void): void;

	getWeekDayScheduleWithParamsCompletionHandler(params: MTRDoorLockClusterGetWeekDayScheduleParams, completionHandler: (p1: MTRDoorLockClusterGetWeekDayScheduleResponseParams, p2: NSError) => void): void;

	getYearDayScheduleWithParamsCompletion(params: MTRDoorLockClusterGetYearDayScheduleParams, completion: (p1: MTRDoorLockClusterGetYearDayScheduleResponseParams, p2: NSError) => void): void;

	getYearDayScheduleWithParamsCompletionHandler(params: MTRDoorLockClusterGetYearDayScheduleParams, completionHandler: (p1: MTRDoorLockClusterGetYearDayScheduleResponseParams, p2: NSError) => void): void;

	initWithDeviceEndpointIDQueue(device: MTRBaseDevice, endpointID: number, queue: interop.Pointer | interop.Reference<any>): this;

	initWithDeviceEndpointQueue(device: MTRBaseDevice, endpoint: number, queue: interop.Pointer | interop.Reference<any>): this;

	lockDoorWithCompletion(completion: (p1: NSError) => void): void;

	lockDoorWithParamsCompletion(params: MTRDoorLockClusterLockDoorParams, completion: (p1: NSError) => void): void;

	lockDoorWithParamsCompletionHandler(params: MTRDoorLockClusterLockDoorParams, completionHandler: (p1: NSError) => void): void;

	readAttributeAcceptedCommandListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAcceptedCommandListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeActuatorEnabledWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeActuatorEnabledWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeAttributeListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAttributeListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAutoRelockTimeWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeAutoRelockTimeWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeClusterRevisionWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeClusterRevisionWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeCredentialRulesSupportWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeCredentialRulesSupportWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeDefaultConfigurationRegisterWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeDefaultConfigurationRegisterWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeDoorClosedEventsWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeDoorClosedEventsWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeDoorOpenEventsWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeDoorOpenEventsWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeDoorStateWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeDoorStateWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeEnableInsideStatusLEDWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeEnableInsideStatusLEDWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeEnableLocalProgrammingWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeEnableLocalProgrammingWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeEnableOneTouchLockingWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeEnableOneTouchLockingWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeEnablePrivacyModeButtonWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeEnablePrivacyModeButtonWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeExpiringUserTimeoutWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeExpiringUserTimeoutWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeFeatureMapWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeFeatureMapWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeGeneratedCommandListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeGeneratedCommandListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeLEDSettingsWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeLEDSettingsWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeLanguageWithCompletion(completion: (p1: string, p2: NSError) => void): void;

	readAttributeLanguageWithCompletionHandler(completionHandler: (p1: string, p2: NSError) => void): void;

	readAttributeLocalProgrammingFeaturesWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeLocalProgrammingFeaturesWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeLockStateWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeLockStateWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeLockTypeWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeLockTypeWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeMaxPINCodeLengthWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeMaxPINCodeLengthWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeMaxRFIDCodeLengthWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeMaxRFIDCodeLengthWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeMinPINCodeLengthWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeMinPINCodeLengthWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeMinRFIDCodeLengthWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeMinRFIDCodeLengthWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeNumberOfCredentialsSupportedPerUserWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeNumberOfCredentialsSupportedPerUserWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeNumberOfHolidaySchedulesSupportedWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeNumberOfHolidaySchedulesSupportedWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeNumberOfPINUsersSupportedWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeNumberOfPINUsersSupportedWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeNumberOfRFIDUsersSupportedWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeNumberOfRFIDUsersSupportedWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeNumberOfTotalUsersSupportedWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeNumberOfTotalUsersSupportedWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeNumberOfWeekDaySchedulesSupportedPerUserWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeNumberOfWeekDaySchedulesSupportedPerUserWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeNumberOfYearDaySchedulesSupportedPerUserWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeNumberOfYearDaySchedulesSupportedPerUserWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeOpenPeriodWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeOpenPeriodWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeOperatingModeWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeOperatingModeWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeRequirePINforRemoteOperationWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeRequirePINforRemoteOperationWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeSendPINOverTheAirWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeSendPINOverTheAirWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeSoundVolumeWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeSoundVolumeWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeSupportedOperatingModesWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeSupportedOperatingModesWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeUserCodeTemporaryDisableTimeWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeUserCodeTemporaryDisableTimeWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeWrongCodeEntryLimitWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeWrongCodeEntryLimitWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	setCredentialWithParamsCompletion(params: MTRDoorLockClusterSetCredentialParams, completion: (p1: MTRDoorLockClusterSetCredentialResponseParams, p2: NSError) => void): void;

	setCredentialWithParamsCompletionHandler(params: MTRDoorLockClusterSetCredentialParams, completionHandler: (p1: MTRDoorLockClusterSetCredentialResponseParams, p2: NSError) => void): void;

	setHolidayScheduleWithParamsCompletion(params: MTRDoorLockClusterSetHolidayScheduleParams, completion: (p1: NSError) => void): void;

	setHolidayScheduleWithParamsCompletionHandler(params: MTRDoorLockClusterSetHolidayScheduleParams, completionHandler: (p1: NSError) => void): void;

	setUserWithParamsCompletion(params: MTRDoorLockClusterSetUserParams, completion: (p1: NSError) => void): void;

	setUserWithParamsCompletionHandler(params: MTRDoorLockClusterSetUserParams, completionHandler: (p1: NSError) => void): void;

	setWeekDayScheduleWithParamsCompletion(params: MTRDoorLockClusterSetWeekDayScheduleParams, completion: (p1: NSError) => void): void;

	setWeekDayScheduleWithParamsCompletionHandler(params: MTRDoorLockClusterSetWeekDayScheduleParams, completionHandler: (p1: NSError) => void): void;

	setYearDayScheduleWithParamsCompletion(params: MTRDoorLockClusterSetYearDayScheduleParams, completion: (p1: NSError) => void): void;

	setYearDayScheduleWithParamsCompletionHandler(params: MTRDoorLockClusterSetYearDayScheduleParams, completionHandler: (p1: NSError) => void): void;

	subscribeAttributeAcceptedCommandListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAcceptedCommandListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeActuatorEnabledWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeActuatorEnabledWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeAttributeListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAttributeListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAutoRelockTimeWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeAutoRelockTimeWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeClusterRevisionWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeClusterRevisionWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeCredentialRulesSupportWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeCredentialRulesSupportWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeDefaultConfigurationRegisterWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeDefaultConfigurationRegisterWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeDoorClosedEventsWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeDoorClosedEventsWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeDoorOpenEventsWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeDoorOpenEventsWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeDoorStateWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeDoorStateWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeEnableInsideStatusLEDWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeEnableInsideStatusLEDWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeEnableLocalProgrammingWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeEnableLocalProgrammingWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeEnableOneTouchLockingWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeEnableOneTouchLockingWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeEnablePrivacyModeButtonWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeEnablePrivacyModeButtonWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeExpiringUserTimeoutWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeExpiringUserTimeoutWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeFeatureMapWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeFeatureMapWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeGeneratedCommandListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeGeneratedCommandListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeLEDSettingsWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeLEDSettingsWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeLanguageWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: string, p2: NSError) => void): void;

	subscribeAttributeLanguageWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: string, p2: NSError) => void): void;

	subscribeAttributeLocalProgrammingFeaturesWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeLocalProgrammingFeaturesWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeLockStateWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeLockStateWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeLockTypeWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeLockTypeWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeMaxPINCodeLengthWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeMaxPINCodeLengthWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeMaxRFIDCodeLengthWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeMaxRFIDCodeLengthWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeMinPINCodeLengthWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeMinPINCodeLengthWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeMinRFIDCodeLengthWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeMinRFIDCodeLengthWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeNumberOfCredentialsSupportedPerUserWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeNumberOfCredentialsSupportedPerUserWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeNumberOfHolidaySchedulesSupportedWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeNumberOfHolidaySchedulesSupportedWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeNumberOfPINUsersSupportedWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeNumberOfPINUsersSupportedWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeNumberOfRFIDUsersSupportedWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeNumberOfRFIDUsersSupportedWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeNumberOfTotalUsersSupportedWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeNumberOfTotalUsersSupportedWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeNumberOfWeekDaySchedulesSupportedPerUserWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeNumberOfWeekDaySchedulesSupportedPerUserWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeNumberOfYearDaySchedulesSupportedPerUserWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeNumberOfYearDaySchedulesSupportedPerUserWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeOpenPeriodWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeOpenPeriodWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeOperatingModeWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeOperatingModeWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeRequirePINforRemoteOperationWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeRequirePINforRemoteOperationWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeSendPINOverTheAirWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeSendPINOverTheAirWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeSoundVolumeWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeSoundVolumeWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeSupportedOperatingModesWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeSupportedOperatingModesWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeUserCodeTemporaryDisableTimeWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeUserCodeTemporaryDisableTimeWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeWrongCodeEntryLimitWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeWrongCodeEntryLimitWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	unlockDoorWithCompletion(completion: (p1: NSError) => void): void;

	unlockDoorWithParamsCompletion(params: MTRDoorLockClusterUnlockDoorParams, completion: (p1: NSError) => void): void;

	unlockDoorWithParamsCompletionHandler(params: MTRDoorLockClusterUnlockDoorParams, completionHandler: (p1: NSError) => void): void;

	unlockWithTimeoutWithParamsCompletion(params: MTRDoorLockClusterUnlockWithTimeoutParams, completion: (p1: NSError) => void): void;

	unlockWithTimeoutWithParamsCompletionHandler(params: MTRDoorLockClusterUnlockWithTimeoutParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeAutoRelockTimeWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeAutoRelockTimeWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeAutoRelockTimeWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeAutoRelockTimeWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeDoorClosedEventsWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeDoorClosedEventsWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeDoorClosedEventsWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeDoorClosedEventsWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeDoorOpenEventsWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeDoorOpenEventsWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeDoorOpenEventsWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeDoorOpenEventsWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeEnableInsideStatusLEDWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeEnableInsideStatusLEDWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeEnableInsideStatusLEDWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeEnableInsideStatusLEDWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeEnableLocalProgrammingWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeEnableLocalProgrammingWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeEnableLocalProgrammingWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeEnableLocalProgrammingWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeEnableOneTouchLockingWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeEnableOneTouchLockingWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeEnableOneTouchLockingWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeEnableOneTouchLockingWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeEnablePrivacyModeButtonWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeEnablePrivacyModeButtonWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeEnablePrivacyModeButtonWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeEnablePrivacyModeButtonWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeExpiringUserTimeoutWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeExpiringUserTimeoutWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeExpiringUserTimeoutWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeExpiringUserTimeoutWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeLEDSettingsWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeLEDSettingsWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeLEDSettingsWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeLEDSettingsWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeLanguageWithValueCompletion(value: string, completion: (p1: NSError) => void): void;

	writeAttributeLanguageWithValueCompletionHandler(value: string, completionHandler: (p1: NSError) => void): void;

	writeAttributeLanguageWithValueParamsCompletion(value: string, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeLanguageWithValueParamsCompletionHandler(value: string, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeLocalProgrammingFeaturesWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeLocalProgrammingFeaturesWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeLocalProgrammingFeaturesWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeLocalProgrammingFeaturesWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeOpenPeriodWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeOpenPeriodWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeOpenPeriodWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeOpenPeriodWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeOperatingModeWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeOperatingModeWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeOperatingModeWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeOperatingModeWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeRequirePINforRemoteOperationWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeRequirePINforRemoteOperationWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeRequirePINforRemoteOperationWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeRequirePINforRemoteOperationWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeSendPINOverTheAirWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeSendPINOverTheAirWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeSendPINOverTheAirWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeSendPINOverTheAirWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeSoundVolumeWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeSoundVolumeWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeSoundVolumeWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeSoundVolumeWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeUserCodeTemporaryDisableTimeWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeUserCodeTemporaryDisableTimeWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeUserCodeTemporaryDisableTimeWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeUserCodeTemporaryDisableTimeWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeWrongCodeEntryLimitWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeWrongCodeEntryLimitWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeWrongCodeEntryLimitWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeWrongCodeEntryLimitWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;
}

declare class MTRBaseClusterElectricalMeasurement extends MTRGenericBaseCluster {

	static alloc(): MTRBaseClusterElectricalMeasurement; // inherited from NSObject

	static new(): MTRBaseClusterElectricalMeasurement; // inherited from NSObject

	static readAttributeAcActivePowerOverloadWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeAcActivePowerOverloadWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeAcCurrentDivisorWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeAcCurrentDivisorWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeAcCurrentMultiplierWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeAcCurrentMultiplierWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeAcCurrentOverloadWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeAcCurrentOverloadWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeAcFrequencyDivisorWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeAcFrequencyDivisorWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeAcFrequencyMaxWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeAcFrequencyMaxWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeAcFrequencyMinWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeAcFrequencyMinWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeAcFrequencyMultiplierWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeAcFrequencyMultiplierWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeAcFrequencyWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeAcFrequencyWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeAcOverloadAlarmsMaskWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeAcOverloadAlarmsMaskWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeAcPowerDivisorWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeAcPowerDivisorWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeAcPowerMultiplierWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeAcPowerMultiplierWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeAcReactivePowerOverloadWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeAcReactivePowerOverloadWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeAcVoltageDivisorWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeAcVoltageDivisorWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeAcVoltageMultiplierWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeAcVoltageMultiplierWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeAcVoltageOverloadWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeAcVoltageOverloadWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeAcceptedCommandListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAcceptedCommandListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeActiveCurrentPhaseBWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeActiveCurrentPhaseBWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeActiveCurrentPhaseCWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeActiveCurrentPhaseCWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeActivePowerMaxPhaseBWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeActivePowerMaxPhaseBWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeActivePowerMaxPhaseCWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeActivePowerMaxPhaseCWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeActivePowerMaxWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeActivePowerMaxWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeActivePowerMinPhaseBWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeActivePowerMinPhaseBWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeActivePowerMinPhaseCWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeActivePowerMinPhaseCWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeActivePowerMinWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeActivePowerMinWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeActivePowerPhaseBWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeActivePowerPhaseBWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeActivePowerPhaseCWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeActivePowerPhaseCWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeActivePowerWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeActivePowerWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeApparentPowerPhaseBWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeApparentPowerPhaseBWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeApparentPowerPhaseCWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeApparentPowerPhaseCWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeApparentPowerWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeApparentPowerWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeAttributeListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAttributeListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAverageRmsOverVoltageCounterPhaseBWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeAverageRmsOverVoltageCounterPhaseBWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeAverageRmsOverVoltageCounterPhaseCWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeAverageRmsOverVoltageCounterPhaseCWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeAverageRmsOverVoltageWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeAverageRmsOverVoltageWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeAverageRmsUnderVoltageCounterPhaseBWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeAverageRmsUnderVoltageCounterPhaseBWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeAverageRmsUnderVoltageCounterPhaseCWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeAverageRmsUnderVoltageCounterPhaseCWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeAverageRmsUnderVoltageCounterWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeAverageRmsUnderVoltageCounterWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeAverageRmsUnderVoltageWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeAverageRmsUnderVoltageWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeAverageRmsVoltageMeasurementPeriodPhaseBWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeAverageRmsVoltageMeasurementPeriodPhaseBWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeAverageRmsVoltageMeasurementPeriodPhaseCWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeAverageRmsVoltageMeasurementPeriodPhaseCWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeAverageRmsVoltageMeasurementPeriodWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeAverageRmsVoltageMeasurementPeriodWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeClusterRevisionWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeClusterRevisionWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeCurrentOverloadWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeCurrentOverloadWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeDcCurrentDivisorWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeDcCurrentDivisorWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeDcCurrentMaxWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeDcCurrentMaxWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeDcCurrentMinWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeDcCurrentMinWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeDcCurrentMultiplierWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeDcCurrentMultiplierWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeDcCurrentWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeDcCurrentWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeDcPowerDivisorWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeDcPowerDivisorWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeDcPowerMaxWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeDcPowerMaxWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeDcPowerMinWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeDcPowerMinWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeDcPowerMultiplierWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeDcPowerMultiplierWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeDcPowerWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeDcPowerWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeDcVoltageDivisorWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeDcVoltageDivisorWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeDcVoltageMaxWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeDcVoltageMaxWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeDcVoltageMinWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeDcVoltageMinWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeDcVoltageMultiplierWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeDcVoltageMultiplierWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeDcVoltageWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeDcVoltageWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeFeatureMapWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeFeatureMapWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeGeneratedCommandListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeGeneratedCommandListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeHarmonicCurrentMultiplierWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeHarmonicCurrentMultiplierWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeInstantaneousActiveCurrentWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeInstantaneousActiveCurrentWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeInstantaneousLineCurrentWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeInstantaneousLineCurrentWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeInstantaneousPowerWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeInstantaneousPowerWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeInstantaneousReactiveCurrentWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeInstantaneousReactiveCurrentWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeInstantaneousVoltageWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeInstantaneousVoltageWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeLineCurrentPhaseBWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeLineCurrentPhaseBWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeLineCurrentPhaseCWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeLineCurrentPhaseCWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeMeasured11thHarmonicCurrentWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeMeasured11thHarmonicCurrentWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeMeasured1stHarmonicCurrentWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeMeasured1stHarmonicCurrentWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeMeasured3rdHarmonicCurrentWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeMeasured3rdHarmonicCurrentWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeMeasured5thHarmonicCurrentWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeMeasured5thHarmonicCurrentWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeMeasured7thHarmonicCurrentWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeMeasured7thHarmonicCurrentWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeMeasured9thHarmonicCurrentWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeMeasured9thHarmonicCurrentWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeMeasuredPhase11thHarmonicCurrentWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeMeasuredPhase11thHarmonicCurrentWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeMeasuredPhase1stHarmonicCurrentWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeMeasuredPhase1stHarmonicCurrentWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeMeasuredPhase3rdHarmonicCurrentWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeMeasuredPhase3rdHarmonicCurrentWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeMeasuredPhase5thHarmonicCurrentWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeMeasuredPhase5thHarmonicCurrentWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeMeasuredPhase7thHarmonicCurrentWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeMeasuredPhase7thHarmonicCurrentWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeMeasuredPhase9thHarmonicCurrentWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeMeasuredPhase9thHarmonicCurrentWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeMeasurementTypeWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeMeasurementTypeWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeNeutralCurrentWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeNeutralCurrentWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeOverloadAlarmsMaskWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeOverloadAlarmsMaskWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributePhaseHarmonicCurrentMultiplierWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributePhaseHarmonicCurrentMultiplierWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributePowerDivisorWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributePowerDivisorWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributePowerFactorPhaseBWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributePowerFactorPhaseBWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributePowerFactorPhaseCWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributePowerFactorPhaseCWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributePowerFactorWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributePowerFactorWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributePowerMultiplierWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributePowerMultiplierWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeReactiveCurrentPhaseBWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeReactiveCurrentPhaseBWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeReactiveCurrentPhaseCWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeReactiveCurrentPhaseCWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeReactivePowerPhaseBWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeReactivePowerPhaseBWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeReactivePowerPhaseCWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeReactivePowerPhaseCWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeReactivePowerWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeReactivePowerWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeRmsCurrentMaxPhaseBWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeRmsCurrentMaxPhaseBWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeRmsCurrentMaxPhaseCWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeRmsCurrentMaxPhaseCWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeRmsCurrentMaxWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeRmsCurrentMaxWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeRmsCurrentMinPhaseBWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeRmsCurrentMinPhaseBWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeRmsCurrentMinPhaseCWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeRmsCurrentMinPhaseCWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeRmsCurrentMinWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeRmsCurrentMinWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeRmsCurrentPhaseBWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeRmsCurrentPhaseBWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeRmsCurrentPhaseCWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeRmsCurrentPhaseCWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeRmsCurrentWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeRmsCurrentWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeRmsExtremeOverVoltagePeriodPhaseBWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeRmsExtremeOverVoltagePeriodPhaseBWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeRmsExtremeOverVoltagePeriodPhaseCWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeRmsExtremeOverVoltagePeriodPhaseCWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeRmsExtremeOverVoltagePeriodWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeRmsExtremeOverVoltagePeriodWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeRmsExtremeOverVoltageWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeRmsExtremeOverVoltageWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeRmsExtremeUnderVoltagePeriodPhaseBWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeRmsExtremeUnderVoltagePeriodPhaseBWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeRmsExtremeUnderVoltagePeriodPhaseCWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeRmsExtremeUnderVoltagePeriodPhaseCWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeRmsExtremeUnderVoltagePeriodWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeRmsExtremeUnderVoltagePeriodWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeRmsExtremeUnderVoltageWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeRmsExtremeUnderVoltageWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeRmsVoltageMaxPhaseBWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeRmsVoltageMaxPhaseBWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeRmsVoltageMaxPhaseCWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeRmsVoltageMaxPhaseCWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeRmsVoltageMaxWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeRmsVoltageMaxWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeRmsVoltageMinPhaseBWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeRmsVoltageMinPhaseBWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeRmsVoltageMinPhaseCWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeRmsVoltageMinPhaseCWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeRmsVoltageMinWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeRmsVoltageMinWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeRmsVoltagePhaseBWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeRmsVoltagePhaseBWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeRmsVoltagePhaseCWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeRmsVoltagePhaseCWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeRmsVoltageSagPeriodPhaseBWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeRmsVoltageSagPeriodPhaseBWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeRmsVoltageSagPeriodPhaseCWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeRmsVoltageSagPeriodPhaseCWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeRmsVoltageSagPeriodWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeRmsVoltageSagPeriodWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeRmsVoltageSagWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeRmsVoltageSagWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeRmsVoltageSwellPeriodPhaseBWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeRmsVoltageSwellPeriodPhaseBWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeRmsVoltageSwellPeriodPhaseCWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeRmsVoltageSwellPeriodPhaseCWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeRmsVoltageSwellPeriodWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeRmsVoltageSwellPeriodWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeRmsVoltageSwellWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeRmsVoltageSwellWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeRmsVoltageWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeRmsVoltageWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeTotalActivePowerWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeTotalActivePowerWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeTotalApparentPowerWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeTotalApparentPowerWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeTotalReactivePowerWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeTotalReactivePowerWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeVoltageOverloadWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeVoltageOverloadWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	constructor(o: { device: MTRBaseDevice; endpointID: number; queue: interop.Pointer | interop.Reference<any>; });

	constructor(o: { device: MTRBaseDevice; endpoint: number; queue: interop.Pointer | interop.Reference<any>; });

	getMeasurementProfileCommandWithParamsCompletion(params: MTRElectricalMeasurementClusterGetMeasurementProfileCommandParams, completion: (p1: NSError) => void): void;

	getMeasurementProfileCommandWithParamsCompletionHandler(params: MTRElectricalMeasurementClusterGetMeasurementProfileCommandParams, completionHandler: (p1: NSError) => void): void;

	getProfileInfoCommandWithCompletion(completion: (p1: NSError) => void): void;

	getProfileInfoCommandWithCompletionHandler(completionHandler: (p1: NSError) => void): void;

	getProfileInfoCommandWithParamsCompletion(params: MTRElectricalMeasurementClusterGetProfileInfoCommandParams, completion: (p1: NSError) => void): void;

	getProfileInfoCommandWithParamsCompletionHandler(params: MTRElectricalMeasurementClusterGetProfileInfoCommandParams, completionHandler: (p1: NSError) => void): void;

	initWithDeviceEndpointIDQueue(device: MTRBaseDevice, endpointID: number, queue: interop.Pointer | interop.Reference<any>): this;

	initWithDeviceEndpointQueue(device: MTRBaseDevice, endpoint: number, queue: interop.Pointer | interop.Reference<any>): this;

	readAttributeAcActivePowerOverloadWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeAcActivePowerOverloadWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeAcCurrentDivisorWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeAcCurrentDivisorWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeAcCurrentMultiplierWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeAcCurrentMultiplierWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeAcCurrentOverloadWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeAcCurrentOverloadWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeAcFrequencyDivisorWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeAcFrequencyDivisorWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeAcFrequencyMaxWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeAcFrequencyMaxWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeAcFrequencyMinWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeAcFrequencyMinWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeAcFrequencyMultiplierWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeAcFrequencyMultiplierWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeAcFrequencyWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeAcFrequencyWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeAcOverloadAlarmsMaskWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeAcOverloadAlarmsMaskWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeAcPowerDivisorWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeAcPowerDivisorWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeAcPowerMultiplierWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeAcPowerMultiplierWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeAcReactivePowerOverloadWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeAcReactivePowerOverloadWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeAcVoltageDivisorWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeAcVoltageDivisorWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeAcVoltageMultiplierWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeAcVoltageMultiplierWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeAcVoltageOverloadWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeAcVoltageOverloadWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeAcceptedCommandListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAcceptedCommandListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeActiveCurrentPhaseBWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeActiveCurrentPhaseBWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeActiveCurrentPhaseCWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeActiveCurrentPhaseCWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeActivePowerMaxPhaseBWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeActivePowerMaxPhaseBWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeActivePowerMaxPhaseCWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeActivePowerMaxPhaseCWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeActivePowerMaxWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeActivePowerMaxWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeActivePowerMinPhaseBWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeActivePowerMinPhaseBWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeActivePowerMinPhaseCWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeActivePowerMinPhaseCWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeActivePowerMinWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeActivePowerMinWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeActivePowerPhaseBWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeActivePowerPhaseBWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeActivePowerPhaseCWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeActivePowerPhaseCWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeActivePowerWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeActivePowerWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeApparentPowerPhaseBWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeApparentPowerPhaseBWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeApparentPowerPhaseCWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeApparentPowerPhaseCWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeApparentPowerWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeApparentPowerWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeAttributeListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAttributeListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAverageRmsOverVoltageCounterPhaseBWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeAverageRmsOverVoltageCounterPhaseBWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeAverageRmsOverVoltageCounterPhaseCWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeAverageRmsOverVoltageCounterPhaseCWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeAverageRmsOverVoltageWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeAverageRmsOverVoltageWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeAverageRmsUnderVoltageCounterPhaseBWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeAverageRmsUnderVoltageCounterPhaseBWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeAverageRmsUnderVoltageCounterPhaseCWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeAverageRmsUnderVoltageCounterPhaseCWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeAverageRmsUnderVoltageCounterWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeAverageRmsUnderVoltageCounterWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeAverageRmsUnderVoltageWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeAverageRmsUnderVoltageWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeAverageRmsVoltageMeasurementPeriodPhaseBWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeAverageRmsVoltageMeasurementPeriodPhaseBWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeAverageRmsVoltageMeasurementPeriodPhaseCWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeAverageRmsVoltageMeasurementPeriodPhaseCWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeAverageRmsVoltageMeasurementPeriodWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeAverageRmsVoltageMeasurementPeriodWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeClusterRevisionWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeClusterRevisionWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeCurrentOverloadWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeCurrentOverloadWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeDcCurrentDivisorWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeDcCurrentDivisorWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeDcCurrentMaxWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeDcCurrentMaxWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeDcCurrentMinWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeDcCurrentMinWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeDcCurrentMultiplierWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeDcCurrentMultiplierWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeDcCurrentWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeDcCurrentWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeDcPowerDivisorWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeDcPowerDivisorWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeDcPowerMaxWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeDcPowerMaxWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeDcPowerMinWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeDcPowerMinWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeDcPowerMultiplierWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeDcPowerMultiplierWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeDcPowerWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeDcPowerWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeDcVoltageDivisorWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeDcVoltageDivisorWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeDcVoltageMaxWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeDcVoltageMaxWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeDcVoltageMinWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeDcVoltageMinWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeDcVoltageMultiplierWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeDcVoltageMultiplierWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeDcVoltageWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeDcVoltageWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeFeatureMapWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeFeatureMapWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeGeneratedCommandListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeGeneratedCommandListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeHarmonicCurrentMultiplierWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeHarmonicCurrentMultiplierWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeInstantaneousActiveCurrentWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeInstantaneousActiveCurrentWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeInstantaneousLineCurrentWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeInstantaneousLineCurrentWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeInstantaneousPowerWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeInstantaneousPowerWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeInstantaneousReactiveCurrentWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeInstantaneousReactiveCurrentWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeInstantaneousVoltageWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeInstantaneousVoltageWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeLineCurrentPhaseBWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeLineCurrentPhaseBWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeLineCurrentPhaseCWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeLineCurrentPhaseCWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeMeasured11thHarmonicCurrentWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeMeasured11thHarmonicCurrentWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeMeasured1stHarmonicCurrentWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeMeasured1stHarmonicCurrentWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeMeasured3rdHarmonicCurrentWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeMeasured3rdHarmonicCurrentWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeMeasured5thHarmonicCurrentWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeMeasured5thHarmonicCurrentWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeMeasured7thHarmonicCurrentWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeMeasured7thHarmonicCurrentWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeMeasured9thHarmonicCurrentWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeMeasured9thHarmonicCurrentWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeMeasuredPhase11thHarmonicCurrentWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeMeasuredPhase11thHarmonicCurrentWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeMeasuredPhase1stHarmonicCurrentWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeMeasuredPhase1stHarmonicCurrentWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeMeasuredPhase3rdHarmonicCurrentWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeMeasuredPhase3rdHarmonicCurrentWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeMeasuredPhase5thHarmonicCurrentWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeMeasuredPhase5thHarmonicCurrentWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeMeasuredPhase7thHarmonicCurrentWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeMeasuredPhase7thHarmonicCurrentWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeMeasuredPhase9thHarmonicCurrentWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeMeasuredPhase9thHarmonicCurrentWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeMeasurementTypeWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeMeasurementTypeWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeNeutralCurrentWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeNeutralCurrentWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeOverloadAlarmsMaskWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeOverloadAlarmsMaskWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributePhaseHarmonicCurrentMultiplierWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributePhaseHarmonicCurrentMultiplierWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributePowerDivisorWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributePowerDivisorWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributePowerFactorPhaseBWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributePowerFactorPhaseBWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributePowerFactorPhaseCWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributePowerFactorPhaseCWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributePowerFactorWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributePowerFactorWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributePowerMultiplierWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributePowerMultiplierWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeReactiveCurrentPhaseBWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeReactiveCurrentPhaseBWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeReactiveCurrentPhaseCWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeReactiveCurrentPhaseCWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeReactivePowerPhaseBWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeReactivePowerPhaseBWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeReactivePowerPhaseCWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeReactivePowerPhaseCWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeReactivePowerWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeReactivePowerWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeRmsCurrentMaxPhaseBWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeRmsCurrentMaxPhaseBWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeRmsCurrentMaxPhaseCWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeRmsCurrentMaxPhaseCWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeRmsCurrentMaxWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeRmsCurrentMaxWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeRmsCurrentMinPhaseBWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeRmsCurrentMinPhaseBWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeRmsCurrentMinPhaseCWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeRmsCurrentMinPhaseCWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeRmsCurrentMinWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeRmsCurrentMinWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeRmsCurrentPhaseBWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeRmsCurrentPhaseBWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeRmsCurrentPhaseCWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeRmsCurrentPhaseCWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeRmsCurrentWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeRmsCurrentWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeRmsExtremeOverVoltagePeriodPhaseBWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeRmsExtremeOverVoltagePeriodPhaseBWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeRmsExtremeOverVoltagePeriodPhaseCWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeRmsExtremeOverVoltagePeriodPhaseCWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeRmsExtremeOverVoltagePeriodWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeRmsExtremeOverVoltagePeriodWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeRmsExtremeOverVoltageWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeRmsExtremeOverVoltageWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeRmsExtremeUnderVoltagePeriodPhaseBWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeRmsExtremeUnderVoltagePeriodPhaseBWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeRmsExtremeUnderVoltagePeriodPhaseCWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeRmsExtremeUnderVoltagePeriodPhaseCWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeRmsExtremeUnderVoltagePeriodWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeRmsExtremeUnderVoltagePeriodWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeRmsExtremeUnderVoltageWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeRmsExtremeUnderVoltageWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeRmsVoltageMaxPhaseBWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeRmsVoltageMaxPhaseBWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeRmsVoltageMaxPhaseCWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeRmsVoltageMaxPhaseCWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeRmsVoltageMaxWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeRmsVoltageMaxWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeRmsVoltageMinPhaseBWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeRmsVoltageMinPhaseBWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeRmsVoltageMinPhaseCWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeRmsVoltageMinPhaseCWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeRmsVoltageMinWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeRmsVoltageMinWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeRmsVoltagePhaseBWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeRmsVoltagePhaseBWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeRmsVoltagePhaseCWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeRmsVoltagePhaseCWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeRmsVoltageSagPeriodPhaseBWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeRmsVoltageSagPeriodPhaseBWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeRmsVoltageSagPeriodPhaseCWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeRmsVoltageSagPeriodPhaseCWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeRmsVoltageSagPeriodWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeRmsVoltageSagPeriodWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeRmsVoltageSagWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeRmsVoltageSagWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeRmsVoltageSwellPeriodPhaseBWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeRmsVoltageSwellPeriodPhaseBWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeRmsVoltageSwellPeriodPhaseCWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeRmsVoltageSwellPeriodPhaseCWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeRmsVoltageSwellPeriodWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeRmsVoltageSwellPeriodWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeRmsVoltageSwellWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeRmsVoltageSwellWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeRmsVoltageWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeRmsVoltageWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeTotalActivePowerWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeTotalActivePowerWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeTotalApparentPowerWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeTotalApparentPowerWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeTotalReactivePowerWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeTotalReactivePowerWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeVoltageOverloadWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeVoltageOverloadWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeAcActivePowerOverloadWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeAcActivePowerOverloadWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeAcCurrentDivisorWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeAcCurrentDivisorWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeAcCurrentMultiplierWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeAcCurrentMultiplierWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeAcCurrentOverloadWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeAcCurrentOverloadWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeAcFrequencyDivisorWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeAcFrequencyDivisorWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeAcFrequencyMaxWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeAcFrequencyMaxWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeAcFrequencyMinWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeAcFrequencyMinWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeAcFrequencyMultiplierWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeAcFrequencyMultiplierWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeAcFrequencyWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeAcFrequencyWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeAcOverloadAlarmsMaskWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeAcOverloadAlarmsMaskWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeAcPowerDivisorWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeAcPowerDivisorWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeAcPowerMultiplierWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeAcPowerMultiplierWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeAcReactivePowerOverloadWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeAcReactivePowerOverloadWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeAcVoltageDivisorWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeAcVoltageDivisorWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeAcVoltageMultiplierWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeAcVoltageMultiplierWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeAcVoltageOverloadWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeAcVoltageOverloadWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeAcceptedCommandListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAcceptedCommandListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeActiveCurrentPhaseBWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeActiveCurrentPhaseBWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeActiveCurrentPhaseCWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeActiveCurrentPhaseCWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeActivePowerMaxPhaseBWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeActivePowerMaxPhaseBWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeActivePowerMaxPhaseCWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeActivePowerMaxPhaseCWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeActivePowerMaxWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeActivePowerMaxWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeActivePowerMinPhaseBWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeActivePowerMinPhaseBWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeActivePowerMinPhaseCWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeActivePowerMinPhaseCWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeActivePowerMinWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeActivePowerMinWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeActivePowerPhaseBWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeActivePowerPhaseBWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeActivePowerPhaseCWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeActivePowerPhaseCWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeActivePowerWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeActivePowerWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeApparentPowerPhaseBWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeApparentPowerPhaseBWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeApparentPowerPhaseCWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeApparentPowerPhaseCWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeApparentPowerWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeApparentPowerWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeAttributeListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAttributeListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAverageRmsOverVoltageCounterPhaseBWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeAverageRmsOverVoltageCounterPhaseBWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeAverageRmsOverVoltageCounterPhaseCWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeAverageRmsOverVoltageCounterPhaseCWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeAverageRmsOverVoltageWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeAverageRmsOverVoltageWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeAverageRmsUnderVoltageCounterPhaseBWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeAverageRmsUnderVoltageCounterPhaseBWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeAverageRmsUnderVoltageCounterPhaseCWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeAverageRmsUnderVoltageCounterPhaseCWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeAverageRmsUnderVoltageCounterWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeAverageRmsUnderVoltageCounterWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeAverageRmsUnderVoltageWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeAverageRmsUnderVoltageWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeAverageRmsVoltageMeasurementPeriodPhaseBWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeAverageRmsVoltageMeasurementPeriodPhaseBWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeAverageRmsVoltageMeasurementPeriodPhaseCWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeAverageRmsVoltageMeasurementPeriodPhaseCWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeAverageRmsVoltageMeasurementPeriodWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeAverageRmsVoltageMeasurementPeriodWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeClusterRevisionWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeClusterRevisionWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeCurrentOverloadWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeCurrentOverloadWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeDcCurrentDivisorWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeDcCurrentDivisorWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeDcCurrentMaxWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeDcCurrentMaxWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeDcCurrentMinWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeDcCurrentMinWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeDcCurrentMultiplierWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeDcCurrentMultiplierWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeDcCurrentWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeDcCurrentWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeDcPowerDivisorWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeDcPowerDivisorWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeDcPowerMaxWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeDcPowerMaxWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeDcPowerMinWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeDcPowerMinWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeDcPowerMultiplierWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeDcPowerMultiplierWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeDcPowerWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeDcPowerWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeDcVoltageDivisorWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeDcVoltageDivisorWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeDcVoltageMaxWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeDcVoltageMaxWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeDcVoltageMinWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeDcVoltageMinWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeDcVoltageMultiplierWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeDcVoltageMultiplierWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeDcVoltageWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeDcVoltageWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeFeatureMapWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeFeatureMapWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeGeneratedCommandListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeGeneratedCommandListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeHarmonicCurrentMultiplierWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeHarmonicCurrentMultiplierWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeInstantaneousActiveCurrentWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeInstantaneousActiveCurrentWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeInstantaneousLineCurrentWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeInstantaneousLineCurrentWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeInstantaneousPowerWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeInstantaneousPowerWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeInstantaneousReactiveCurrentWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeInstantaneousReactiveCurrentWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeInstantaneousVoltageWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeInstantaneousVoltageWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeLineCurrentPhaseBWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeLineCurrentPhaseBWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeLineCurrentPhaseCWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeLineCurrentPhaseCWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeMeasured11thHarmonicCurrentWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeMeasured11thHarmonicCurrentWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeMeasured1stHarmonicCurrentWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeMeasured1stHarmonicCurrentWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeMeasured3rdHarmonicCurrentWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeMeasured3rdHarmonicCurrentWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeMeasured5thHarmonicCurrentWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeMeasured5thHarmonicCurrentWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeMeasured7thHarmonicCurrentWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeMeasured7thHarmonicCurrentWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeMeasured9thHarmonicCurrentWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeMeasured9thHarmonicCurrentWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeMeasuredPhase11thHarmonicCurrentWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeMeasuredPhase11thHarmonicCurrentWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeMeasuredPhase1stHarmonicCurrentWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeMeasuredPhase1stHarmonicCurrentWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeMeasuredPhase3rdHarmonicCurrentWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeMeasuredPhase3rdHarmonicCurrentWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeMeasuredPhase5thHarmonicCurrentWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeMeasuredPhase5thHarmonicCurrentWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeMeasuredPhase7thHarmonicCurrentWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeMeasuredPhase7thHarmonicCurrentWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeMeasuredPhase9thHarmonicCurrentWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeMeasuredPhase9thHarmonicCurrentWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeMeasurementTypeWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeMeasurementTypeWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeNeutralCurrentWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeNeutralCurrentWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeOverloadAlarmsMaskWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeOverloadAlarmsMaskWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributePhaseHarmonicCurrentMultiplierWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributePhaseHarmonicCurrentMultiplierWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributePowerDivisorWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributePowerDivisorWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributePowerFactorPhaseBWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributePowerFactorPhaseBWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributePowerFactorPhaseCWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributePowerFactorPhaseCWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributePowerFactorWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributePowerFactorWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributePowerMultiplierWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributePowerMultiplierWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeReactiveCurrentPhaseBWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeReactiveCurrentPhaseBWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeReactiveCurrentPhaseCWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeReactiveCurrentPhaseCWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeReactivePowerPhaseBWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeReactivePowerPhaseBWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeReactivePowerPhaseCWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeReactivePowerPhaseCWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeReactivePowerWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeReactivePowerWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeRmsCurrentMaxPhaseBWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeRmsCurrentMaxPhaseBWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeRmsCurrentMaxPhaseCWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeRmsCurrentMaxPhaseCWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeRmsCurrentMaxWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeRmsCurrentMaxWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeRmsCurrentMinPhaseBWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeRmsCurrentMinPhaseBWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeRmsCurrentMinPhaseCWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeRmsCurrentMinPhaseCWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeRmsCurrentMinWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeRmsCurrentMinWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeRmsCurrentPhaseBWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeRmsCurrentPhaseBWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeRmsCurrentPhaseCWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeRmsCurrentPhaseCWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeRmsCurrentWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeRmsCurrentWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeRmsExtremeOverVoltagePeriodPhaseBWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeRmsExtremeOverVoltagePeriodPhaseBWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeRmsExtremeOverVoltagePeriodPhaseCWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeRmsExtremeOverVoltagePeriodPhaseCWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeRmsExtremeOverVoltagePeriodWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeRmsExtremeOverVoltagePeriodWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeRmsExtremeOverVoltageWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeRmsExtremeOverVoltageWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeRmsExtremeUnderVoltagePeriodPhaseBWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeRmsExtremeUnderVoltagePeriodPhaseBWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeRmsExtremeUnderVoltagePeriodPhaseCWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeRmsExtremeUnderVoltagePeriodPhaseCWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeRmsExtremeUnderVoltagePeriodWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeRmsExtremeUnderVoltagePeriodWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeRmsExtremeUnderVoltageWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeRmsExtremeUnderVoltageWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeRmsVoltageMaxPhaseBWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeRmsVoltageMaxPhaseBWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeRmsVoltageMaxPhaseCWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeRmsVoltageMaxPhaseCWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeRmsVoltageMaxWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeRmsVoltageMaxWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeRmsVoltageMinPhaseBWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeRmsVoltageMinPhaseBWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeRmsVoltageMinPhaseCWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeRmsVoltageMinPhaseCWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeRmsVoltageMinWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeRmsVoltageMinWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeRmsVoltagePhaseBWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeRmsVoltagePhaseBWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeRmsVoltagePhaseCWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeRmsVoltagePhaseCWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeRmsVoltageSagPeriodPhaseBWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeRmsVoltageSagPeriodPhaseBWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeRmsVoltageSagPeriodPhaseCWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeRmsVoltageSagPeriodPhaseCWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeRmsVoltageSagPeriodWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeRmsVoltageSagPeriodWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeRmsVoltageSagWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeRmsVoltageSagWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeRmsVoltageSwellPeriodPhaseBWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeRmsVoltageSwellPeriodPhaseBWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeRmsVoltageSwellPeriodPhaseCWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeRmsVoltageSwellPeriodPhaseCWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeRmsVoltageSwellPeriodWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeRmsVoltageSwellPeriodWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeRmsVoltageSwellWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeRmsVoltageSwellWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeRmsVoltageWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeRmsVoltageWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeTotalActivePowerWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeTotalActivePowerWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeTotalApparentPowerWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeTotalApparentPowerWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeTotalReactivePowerWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeTotalReactivePowerWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeVoltageOverloadWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeVoltageOverloadWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	writeAttributeAcOverloadAlarmsMaskWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeAcOverloadAlarmsMaskWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeAcOverloadAlarmsMaskWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeAcOverloadAlarmsMaskWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeAverageRmsUnderVoltageCounterWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeAverageRmsUnderVoltageCounterWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeAverageRmsUnderVoltageCounterWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeAverageRmsUnderVoltageCounterWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeAverageRmsVoltageMeasurementPeriodWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeAverageRmsVoltageMeasurementPeriodWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeAverageRmsVoltageMeasurementPeriodWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeAverageRmsVoltageMeasurementPeriodWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeOverloadAlarmsMaskWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeOverloadAlarmsMaskWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeOverloadAlarmsMaskWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeOverloadAlarmsMaskWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeRmsExtremeOverVoltagePeriodWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeRmsExtremeOverVoltagePeriodWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeRmsExtremeOverVoltagePeriodWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeRmsExtremeOverVoltagePeriodWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeRmsExtremeUnderVoltagePeriodWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeRmsExtremeUnderVoltagePeriodWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeRmsExtremeUnderVoltagePeriodWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeRmsExtremeUnderVoltagePeriodWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeRmsVoltageSagPeriodWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeRmsVoltageSagPeriodWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeRmsVoltageSagPeriodWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeRmsVoltageSagPeriodWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeRmsVoltageSwellPeriodWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeRmsVoltageSwellPeriodWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeRmsVoltageSwellPeriodWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeRmsVoltageSwellPeriodWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;
}

declare class MTRBaseClusterEthernetNetworkDiagnostics extends MTRGenericBaseCluster {

	static alloc(): MTRBaseClusterEthernetNetworkDiagnostics; // inherited from NSObject

	static new(): MTRBaseClusterEthernetNetworkDiagnostics; // inherited from NSObject

	static readAttributeAcceptedCommandListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAcceptedCommandListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAttributeListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAttributeListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeCarrierDetectWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeCarrierDetectWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeClusterRevisionWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeClusterRevisionWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeCollisionCountWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeCollisionCountWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeFeatureMapWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeFeatureMapWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeFullDuplexWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeFullDuplexWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeGeneratedCommandListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeGeneratedCommandListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeOverrunCountWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeOverrunCountWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributePHYRateWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributePHYRateWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributePacketRxCountWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributePacketRxCountWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributePacketTxCountWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributePacketTxCountWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeTimeSinceResetWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeTimeSinceResetWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeTxErrCountWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeTxErrCountWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	constructor(o: { device: MTRBaseDevice; endpointID: number; queue: interop.Pointer | interop.Reference<any>; });

	constructor(o: { device: MTRBaseDevice; endpoint: number; queue: interop.Pointer | interop.Reference<any>; });

	initWithDeviceEndpointIDQueue(device: MTRBaseDevice, endpointID: number, queue: interop.Pointer | interop.Reference<any>): this;

	initWithDeviceEndpointQueue(device: MTRBaseDevice, endpoint: number, queue: interop.Pointer | interop.Reference<any>): this;

	readAttributeAcceptedCommandListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAcceptedCommandListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAttributeListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAttributeListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeCarrierDetectWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeCarrierDetectWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeClusterRevisionWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeClusterRevisionWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeCollisionCountWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeCollisionCountWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeFeatureMapWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeFeatureMapWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeFullDuplexWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeFullDuplexWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeGeneratedCommandListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeGeneratedCommandListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeOverrunCountWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeOverrunCountWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributePHYRateWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributePHYRateWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributePacketRxCountWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributePacketRxCountWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributePacketTxCountWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributePacketTxCountWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeTimeSinceResetWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeTimeSinceResetWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeTxErrCountWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeTxErrCountWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	resetCountsWithCompletion(completion: (p1: NSError) => void): void;

	resetCountsWithCompletionHandler(completionHandler: (p1: NSError) => void): void;

	resetCountsWithParamsCompletion(params: MTREthernetNetworkDiagnosticsClusterResetCountsParams, completion: (p1: NSError) => void): void;

	resetCountsWithParamsCompletionHandler(params: MTREthernetNetworkDiagnosticsClusterResetCountsParams, completionHandler: (p1: NSError) => void): void;

	subscribeAttributeAcceptedCommandListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAcceptedCommandListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAttributeListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAttributeListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeCarrierDetectWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeCarrierDetectWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeClusterRevisionWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeClusterRevisionWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeCollisionCountWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeCollisionCountWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeFeatureMapWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeFeatureMapWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeFullDuplexWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeFullDuplexWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeGeneratedCommandListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeGeneratedCommandListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeOverrunCountWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeOverrunCountWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributePHYRateWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributePHYRateWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributePacketRxCountWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributePacketRxCountWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributePacketTxCountWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributePacketTxCountWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeTimeSinceResetWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeTimeSinceResetWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeTxErrCountWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeTxErrCountWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;
}

declare class MTRBaseClusterFanControl extends MTRGenericBaseCluster {

	static alloc(): MTRBaseClusterFanControl; // inherited from NSObject

	static new(): MTRBaseClusterFanControl; // inherited from NSObject

	static readAttributeAcceptedCommandListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAcceptedCommandListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAttributeListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAttributeListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeClusterRevisionWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeClusterRevisionWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeFanModeSequenceWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeFanModeSequenceWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeFanModeWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeFanModeWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeFeatureMapWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeFeatureMapWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeGeneratedCommandListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeGeneratedCommandListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributePercentCurrentWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributePercentCurrentWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributePercentSettingWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributePercentSettingWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeRockSettingWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeRockSettingWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeRockSupportWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeRockSupportWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeSpeedCurrentWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeSpeedCurrentWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeSpeedMaxWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeSpeedMaxWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeSpeedSettingWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeSpeedSettingWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeWindSettingWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeWindSettingWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeWindSupportWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeWindSupportWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	constructor(o: { device: MTRBaseDevice; endpointID: number; queue: interop.Pointer | interop.Reference<any>; });

	constructor(o: { device: MTRBaseDevice; endpoint: number; queue: interop.Pointer | interop.Reference<any>; });

	initWithDeviceEndpointIDQueue(device: MTRBaseDevice, endpointID: number, queue: interop.Pointer | interop.Reference<any>): this;

	initWithDeviceEndpointQueue(device: MTRBaseDevice, endpoint: number, queue: interop.Pointer | interop.Reference<any>): this;

	readAttributeAcceptedCommandListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAcceptedCommandListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAttributeListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAttributeListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeClusterRevisionWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeClusterRevisionWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeFanModeSequenceWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeFanModeSequenceWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeFanModeWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeFanModeWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeFeatureMapWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeFeatureMapWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeGeneratedCommandListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeGeneratedCommandListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributePercentCurrentWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributePercentCurrentWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributePercentSettingWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributePercentSettingWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeRockSettingWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeRockSettingWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeRockSupportWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeRockSupportWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeSpeedCurrentWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeSpeedCurrentWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeSpeedMaxWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeSpeedMaxWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeSpeedSettingWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeSpeedSettingWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeWindSettingWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeWindSettingWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeWindSupportWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeWindSupportWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeAcceptedCommandListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAcceptedCommandListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAttributeListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAttributeListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeClusterRevisionWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeClusterRevisionWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeFanModeSequenceWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeFanModeSequenceWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeFanModeWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeFanModeWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeFeatureMapWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeFeatureMapWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeGeneratedCommandListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeGeneratedCommandListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributePercentCurrentWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributePercentCurrentWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributePercentSettingWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributePercentSettingWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeRockSettingWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeRockSettingWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeRockSupportWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeRockSupportWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeSpeedCurrentWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeSpeedCurrentWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeSpeedMaxWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeSpeedMaxWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeSpeedSettingWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeSpeedSettingWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeWindSettingWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeWindSettingWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeWindSupportWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeWindSupportWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	writeAttributeFanModeSequenceWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeFanModeSequenceWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeFanModeSequenceWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeFanModeSequenceWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeFanModeWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeFanModeWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeFanModeWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeFanModeWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributePercentSettingWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributePercentSettingWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributePercentSettingWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributePercentSettingWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeRockSettingWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeRockSettingWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeRockSettingWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeRockSettingWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeSpeedSettingWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeSpeedSettingWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeSpeedSettingWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeSpeedSettingWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeWindSettingWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeWindSettingWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeWindSettingWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeWindSettingWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;
}

declare class MTRBaseClusterFixedLabel extends MTRGenericBaseCluster {

	static alloc(): MTRBaseClusterFixedLabel; // inherited from NSObject

	static new(): MTRBaseClusterFixedLabel; // inherited from NSObject

	static readAttributeAcceptedCommandListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAcceptedCommandListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAttributeListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAttributeListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeClusterRevisionWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeClusterRevisionWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeFeatureMapWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeFeatureMapWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeGeneratedCommandListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeGeneratedCommandListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeLabelListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeLabelListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	constructor(o: { device: MTRBaseDevice; endpointID: number; queue: interop.Pointer | interop.Reference<any>; });

	constructor(o: { device: MTRBaseDevice; endpoint: number; queue: interop.Pointer | interop.Reference<any>; });

	initWithDeviceEndpointIDQueue(device: MTRBaseDevice, endpointID: number, queue: interop.Pointer | interop.Reference<any>): this;

	initWithDeviceEndpointQueue(device: MTRBaseDevice, endpoint: number, queue: interop.Pointer | interop.Reference<any>): this;

	readAttributeAcceptedCommandListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAcceptedCommandListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAttributeListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAttributeListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeClusterRevisionWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeClusterRevisionWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeFeatureMapWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeFeatureMapWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeGeneratedCommandListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeGeneratedCommandListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeLabelListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeLabelListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAcceptedCommandListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAcceptedCommandListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAttributeListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAttributeListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeClusterRevisionWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeClusterRevisionWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeFeatureMapWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeFeatureMapWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeGeneratedCommandListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeGeneratedCommandListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeLabelListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeLabelListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;
}

declare class MTRBaseClusterFlowMeasurement extends MTRGenericBaseCluster {

	static alloc(): MTRBaseClusterFlowMeasurement; // inherited from NSObject

	static new(): MTRBaseClusterFlowMeasurement; // inherited from NSObject

	static readAttributeAcceptedCommandListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAcceptedCommandListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAttributeListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAttributeListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeClusterRevisionWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeClusterRevisionWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeFeatureMapWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeFeatureMapWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeGeneratedCommandListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeGeneratedCommandListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeMaxMeasuredValueWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeMaxMeasuredValueWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeMeasuredValueWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeMeasuredValueWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeMinMeasuredValueWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeMinMeasuredValueWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeToleranceWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeToleranceWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	constructor(o: { device: MTRBaseDevice; endpointID: number; queue: interop.Pointer | interop.Reference<any>; });

	constructor(o: { device: MTRBaseDevice; endpoint: number; queue: interop.Pointer | interop.Reference<any>; });

	initWithDeviceEndpointIDQueue(device: MTRBaseDevice, endpointID: number, queue: interop.Pointer | interop.Reference<any>): this;

	initWithDeviceEndpointQueue(device: MTRBaseDevice, endpoint: number, queue: interop.Pointer | interop.Reference<any>): this;

	readAttributeAcceptedCommandListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAcceptedCommandListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAttributeListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAttributeListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeClusterRevisionWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeClusterRevisionWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeFeatureMapWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeFeatureMapWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeGeneratedCommandListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeGeneratedCommandListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeMaxMeasuredValueWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeMaxMeasuredValueWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeMeasuredValueWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeMeasuredValueWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeMinMeasuredValueWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeMinMeasuredValueWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeToleranceWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeToleranceWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeAcceptedCommandListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAcceptedCommandListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAttributeListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAttributeListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeClusterRevisionWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeClusterRevisionWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeFeatureMapWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeFeatureMapWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeGeneratedCommandListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeGeneratedCommandListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeMaxMeasuredValueWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeMaxMeasuredValueWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeMeasuredValueWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeMeasuredValueWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeMinMeasuredValueWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeMinMeasuredValueWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeToleranceWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeToleranceWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;
}

declare class MTRBaseClusterGeneralCommissioning extends MTRGenericBaseCluster {

	static alloc(): MTRBaseClusterGeneralCommissioning; // inherited from NSObject

	static new(): MTRBaseClusterGeneralCommissioning; // inherited from NSObject

	static readAttributeAcceptedCommandListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAcceptedCommandListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAttributeListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAttributeListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeBasicCommissioningInfoWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: MTRGeneralCommissioningClusterBasicCommissioningInfo, p2: NSError) => void): void;

	static readAttributeBasicCommissioningInfoWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: MTRGeneralCommissioningClusterBasicCommissioningInfo, p2: NSError) => void): void;

	static readAttributeBreadcrumbWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeBreadcrumbWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeClusterRevisionWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeClusterRevisionWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeFeatureMapWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeFeatureMapWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeGeneratedCommandListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeGeneratedCommandListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeLocationCapabilityWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeLocationCapabilityWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeRegulatoryConfigWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeRegulatoryConfigWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeSupportsConcurrentConnectionWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeSupportsConcurrentConnectionWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	constructor(o: { device: MTRBaseDevice; endpointID: number; queue: interop.Pointer | interop.Reference<any>; });

	constructor(o: { device: MTRBaseDevice; endpoint: number; queue: interop.Pointer | interop.Reference<any>; });

	armFailSafeWithParamsCompletion(params: MTRGeneralCommissioningClusterArmFailSafeParams, completion: (p1: MTRGeneralCommissioningClusterArmFailSafeResponseParams, p2: NSError) => void): void;

	armFailSafeWithParamsCompletionHandler(params: MTRGeneralCommissioningClusterArmFailSafeParams, completionHandler: (p1: MTRGeneralCommissioningClusterArmFailSafeResponseParams, p2: NSError) => void): void;

	commissioningCompleteWithCompletion(completion: (p1: MTRGeneralCommissioningClusterCommissioningCompleteResponseParams, p2: NSError) => void): void;

	commissioningCompleteWithCompletionHandler(completionHandler: (p1: MTRGeneralCommissioningClusterCommissioningCompleteResponseParams, p2: NSError) => void): void;

	commissioningCompleteWithParamsCompletion(params: MTRGeneralCommissioningClusterCommissioningCompleteParams, completion: (p1: MTRGeneralCommissioningClusterCommissioningCompleteResponseParams, p2: NSError) => void): void;

	commissioningCompleteWithParamsCompletionHandler(params: MTRGeneralCommissioningClusterCommissioningCompleteParams, completionHandler: (p1: MTRGeneralCommissioningClusterCommissioningCompleteResponseParams, p2: NSError) => void): void;

	initWithDeviceEndpointIDQueue(device: MTRBaseDevice, endpointID: number, queue: interop.Pointer | interop.Reference<any>): this;

	initWithDeviceEndpointQueue(device: MTRBaseDevice, endpoint: number, queue: interop.Pointer | interop.Reference<any>): this;

	readAttributeAcceptedCommandListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAcceptedCommandListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAttributeListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAttributeListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeBasicCommissioningInfoWithCompletion(completion: (p1: MTRGeneralCommissioningClusterBasicCommissioningInfo, p2: NSError) => void): void;

	readAttributeBasicCommissioningInfoWithCompletionHandler(completionHandler: (p1: MTRGeneralCommissioningClusterBasicCommissioningInfo, p2: NSError) => void): void;

	readAttributeBreadcrumbWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeBreadcrumbWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeClusterRevisionWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeClusterRevisionWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeFeatureMapWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeFeatureMapWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeGeneratedCommandListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeGeneratedCommandListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeLocationCapabilityWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeLocationCapabilityWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeRegulatoryConfigWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeRegulatoryConfigWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeSupportsConcurrentConnectionWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeSupportsConcurrentConnectionWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	setRegulatoryConfigWithParamsCompletion(params: MTRGeneralCommissioningClusterSetRegulatoryConfigParams, completion: (p1: MTRGeneralCommissioningClusterSetRegulatoryConfigResponseParams, p2: NSError) => void): void;

	setRegulatoryConfigWithParamsCompletionHandler(params: MTRGeneralCommissioningClusterSetRegulatoryConfigParams, completionHandler: (p1: MTRGeneralCommissioningClusterSetRegulatoryConfigResponseParams, p2: NSError) => void): void;

	subscribeAttributeAcceptedCommandListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAcceptedCommandListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAttributeListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAttributeListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeBasicCommissioningInfoWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: MTRGeneralCommissioningClusterBasicCommissioningInfo, p2: NSError) => void): void;

	subscribeAttributeBasicCommissioningInfoWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: MTRGeneralCommissioningClusterBasicCommissioningInfo, p2: NSError) => void): void;

	subscribeAttributeBreadcrumbWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeBreadcrumbWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeClusterRevisionWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeClusterRevisionWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeFeatureMapWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeFeatureMapWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeGeneratedCommandListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeGeneratedCommandListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeLocationCapabilityWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeLocationCapabilityWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeRegulatoryConfigWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeRegulatoryConfigWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeSupportsConcurrentConnectionWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeSupportsConcurrentConnectionWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	writeAttributeBreadcrumbWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeBreadcrumbWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeBreadcrumbWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeBreadcrumbWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;
}

declare class MTRBaseClusterGeneralDiagnostics extends MTRGenericBaseCluster {

	static alloc(): MTRBaseClusterGeneralDiagnostics; // inherited from NSObject

	static new(): MTRBaseClusterGeneralDiagnostics; // inherited from NSObject

	static readAttributeAcceptedCommandListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAcceptedCommandListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeActiveHardwareFaultsWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeActiveHardwareFaultsWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeActiveNetworkFaultsWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeActiveNetworkFaultsWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeActiveRadioFaultsWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeActiveRadioFaultsWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAttributeListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAttributeListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeBootReasonWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeBootReasonsWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeClusterRevisionWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeClusterRevisionWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeFeatureMapWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeFeatureMapWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeGeneratedCommandListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeGeneratedCommandListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeNetworkInterfacesWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeNetworkInterfacesWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeRebootCountWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeRebootCountWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeTestEventTriggersEnabledWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeTestEventTriggersEnabledWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeTotalOperationalHoursWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeTotalOperationalHoursWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeUpTimeWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeUpTimeWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	constructor(o: { device: MTRBaseDevice; endpointID: number; queue: interop.Pointer | interop.Reference<any>; });

	constructor(o: { device: MTRBaseDevice; endpoint: number; queue: interop.Pointer | interop.Reference<any>; });

	initWithDeviceEndpointIDQueue(device: MTRBaseDevice, endpointID: number, queue: interop.Pointer | interop.Reference<any>): this;

	initWithDeviceEndpointQueue(device: MTRBaseDevice, endpoint: number, queue: interop.Pointer | interop.Reference<any>): this;

	readAttributeAcceptedCommandListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAcceptedCommandListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeActiveHardwareFaultsWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeActiveHardwareFaultsWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeActiveNetworkFaultsWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeActiveNetworkFaultsWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeActiveRadioFaultsWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeActiveRadioFaultsWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAttributeListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAttributeListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeBootReasonWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeBootReasonsWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeClusterRevisionWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeClusterRevisionWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeFeatureMapWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeFeatureMapWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeGeneratedCommandListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeGeneratedCommandListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeNetworkInterfacesWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeNetworkInterfacesWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeRebootCountWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeRebootCountWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeTestEventTriggersEnabledWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeTestEventTriggersEnabledWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeTotalOperationalHoursWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeTotalOperationalHoursWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeUpTimeWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeUpTimeWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeAcceptedCommandListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAcceptedCommandListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeActiveHardwareFaultsWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeActiveHardwareFaultsWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeActiveNetworkFaultsWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeActiveNetworkFaultsWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeActiveRadioFaultsWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeActiveRadioFaultsWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAttributeListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAttributeListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeBootReasonWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeBootReasonsWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeClusterRevisionWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeClusterRevisionWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeFeatureMapWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeFeatureMapWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeGeneratedCommandListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeGeneratedCommandListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeNetworkInterfacesWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeNetworkInterfacesWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeRebootCountWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeRebootCountWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeTestEventTriggersEnabledWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeTestEventTriggersEnabledWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeTotalOperationalHoursWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeTotalOperationalHoursWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeUpTimeWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeUpTimeWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	testEventTriggerWithParamsCompletion(params: MTRGeneralDiagnosticsClusterTestEventTriggerParams, completion: (p1: NSError) => void): void;

	testEventTriggerWithParamsCompletionHandler(params: MTRGeneralDiagnosticsClusterTestEventTriggerParams, completionHandler: (p1: NSError) => void): void;
}

declare class MTRBaseClusterGroupKeyManagement extends MTRGenericBaseCluster {

	static alloc(): MTRBaseClusterGroupKeyManagement; // inherited from NSObject

	static new(): MTRBaseClusterGroupKeyManagement; // inherited from NSObject

	static readAttributeAcceptedCommandListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAcceptedCommandListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAttributeListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAttributeListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeClusterRevisionWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeClusterRevisionWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeFeatureMapWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeFeatureMapWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeGeneratedCommandListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeGeneratedCommandListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeGroupKeyMapWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeGroupKeyMapWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeGroupTableWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeGroupTableWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeMaxGroupKeysPerFabricWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeMaxGroupKeysPerFabricWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeMaxGroupsPerFabricWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeMaxGroupsPerFabricWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	constructor(o: { device: MTRBaseDevice; endpointID: number; queue: interop.Pointer | interop.Reference<any>; });

	constructor(o: { device: MTRBaseDevice; endpoint: number; queue: interop.Pointer | interop.Reference<any>; });

	initWithDeviceEndpointIDQueue(device: MTRBaseDevice, endpointID: number, queue: interop.Pointer | interop.Reference<any>): this;

	initWithDeviceEndpointQueue(device: MTRBaseDevice, endpoint: number, queue: interop.Pointer | interop.Reference<any>): this;

	keySetReadAllIndicesWithCompletion(completion: (p1: MTRGroupKeyManagementClusterKeySetReadAllIndicesResponseParams, p2: NSError) => void): void;

	keySetReadAllIndicesWithParamsCompletion(params: MTRGroupKeyManagementClusterKeySetReadAllIndicesParams, completion: (p1: MTRGroupKeyManagementClusterKeySetReadAllIndicesResponseParams, p2: NSError) => void): void;

	keySetReadAllIndicesWithParamsCompletionHandler(params: MTRGroupKeyManagementClusterKeySetReadAllIndicesParams, completionHandler: (p1: MTRGroupKeyManagementClusterKeySetReadAllIndicesResponseParams, p2: NSError) => void): void;

	keySetReadWithParamsCompletion(params: MTRGroupKeyManagementClusterKeySetReadParams, completion: (p1: MTRGroupKeyManagementClusterKeySetReadResponseParams, p2: NSError) => void): void;

	keySetReadWithParamsCompletionHandler(params: MTRGroupKeyManagementClusterKeySetReadParams, completionHandler: (p1: MTRGroupKeyManagementClusterKeySetReadResponseParams, p2: NSError) => void): void;

	keySetRemoveWithParamsCompletion(params: MTRGroupKeyManagementClusterKeySetRemoveParams, completion: (p1: NSError) => void): void;

	keySetRemoveWithParamsCompletionHandler(params: MTRGroupKeyManagementClusterKeySetRemoveParams, completionHandler: (p1: NSError) => void): void;

	keySetWriteWithParamsCompletion(params: MTRGroupKeyManagementClusterKeySetWriteParams, completion: (p1: NSError) => void): void;

	keySetWriteWithParamsCompletionHandler(params: MTRGroupKeyManagementClusterKeySetWriteParams, completionHandler: (p1: NSError) => void): void;

	readAttributeAcceptedCommandListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAcceptedCommandListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAttributeListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAttributeListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeClusterRevisionWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeClusterRevisionWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeFeatureMapWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeFeatureMapWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeGeneratedCommandListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeGeneratedCommandListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeGroupKeyMapWithParamsCompletion(params: MTRReadParams, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeGroupKeyMapWithParamsCompletionHandler(params: MTRReadParams, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeGroupTableWithParamsCompletion(params: MTRReadParams, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeGroupTableWithParamsCompletionHandler(params: MTRReadParams, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeMaxGroupKeysPerFabricWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeMaxGroupKeysPerFabricWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeMaxGroupsPerFabricWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeMaxGroupsPerFabricWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeAcceptedCommandListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAcceptedCommandListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAttributeListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAttributeListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeClusterRevisionWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeClusterRevisionWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeFeatureMapWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeFeatureMapWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeGeneratedCommandListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeGeneratedCommandListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeGroupKeyMapWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeGroupKeyMapWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeGroupTableWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeGroupTableWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeMaxGroupKeysPerFabricWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeMaxGroupKeysPerFabricWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeMaxGroupsPerFabricWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeMaxGroupsPerFabricWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	writeAttributeGroupKeyMapWithValueCompletion(value: NSArray<any> | any[], completion: (p1: NSError) => void): void;

	writeAttributeGroupKeyMapWithValueCompletionHandler(value: NSArray<any> | any[], completionHandler: (p1: NSError) => void): void;

	writeAttributeGroupKeyMapWithValueParamsCompletion(value: NSArray<any> | any[], params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeGroupKeyMapWithValueParamsCompletionHandler(value: NSArray<any> | any[], params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;
}

declare class MTRBaseClusterGroups extends MTRGenericBaseCluster {

	static alloc(): MTRBaseClusterGroups; // inherited from NSObject

	static new(): MTRBaseClusterGroups; // inherited from NSObject

	static readAttributeAcceptedCommandListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAcceptedCommandListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAttributeListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAttributeListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeClusterRevisionWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeClusterRevisionWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeFeatureMapWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeFeatureMapWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeGeneratedCommandListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeGeneratedCommandListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeNameSupportWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeNameSupportWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	constructor(o: { device: MTRBaseDevice; endpointID: number; queue: interop.Pointer | interop.Reference<any>; });

	constructor(o: { device: MTRBaseDevice; endpoint: number; queue: interop.Pointer | interop.Reference<any>; });

	addGroupIfIdentifyingWithParamsCompletion(params: MTRGroupsClusterAddGroupIfIdentifyingParams, completion: (p1: NSError) => void): void;

	addGroupIfIdentifyingWithParamsCompletionHandler(params: MTRGroupsClusterAddGroupIfIdentifyingParams, completionHandler: (p1: NSError) => void): void;

	addGroupWithParamsCompletion(params: MTRGroupsClusterAddGroupParams, completion: (p1: MTRGroupsClusterAddGroupResponseParams, p2: NSError) => void): void;

	addGroupWithParamsCompletionHandler(params: MTRGroupsClusterAddGroupParams, completionHandler: (p1: MTRGroupsClusterAddGroupResponseParams, p2: NSError) => void): void;

	getGroupMembershipWithParamsCompletion(params: MTRGroupsClusterGetGroupMembershipParams, completion: (p1: MTRGroupsClusterGetGroupMembershipResponseParams, p2: NSError) => void): void;

	getGroupMembershipWithParamsCompletionHandler(params: MTRGroupsClusterGetGroupMembershipParams, completionHandler: (p1: MTRGroupsClusterGetGroupMembershipResponseParams, p2: NSError) => void): void;

	initWithDeviceEndpointIDQueue(device: MTRBaseDevice, endpointID: number, queue: interop.Pointer | interop.Reference<any>): this;

	initWithDeviceEndpointQueue(device: MTRBaseDevice, endpoint: number, queue: interop.Pointer | interop.Reference<any>): this;

	readAttributeAcceptedCommandListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAcceptedCommandListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAttributeListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAttributeListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeClusterRevisionWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeClusterRevisionWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeFeatureMapWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeFeatureMapWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeGeneratedCommandListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeGeneratedCommandListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeNameSupportWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeNameSupportWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	removeAllGroupsWithCompletion(completion: (p1: NSError) => void): void;

	removeAllGroupsWithCompletionHandler(completionHandler: (p1: NSError) => void): void;

	removeAllGroupsWithParamsCompletion(params: MTRGroupsClusterRemoveAllGroupsParams, completion: (p1: NSError) => void): void;

	removeAllGroupsWithParamsCompletionHandler(params: MTRGroupsClusterRemoveAllGroupsParams, completionHandler: (p1: NSError) => void): void;

	removeGroupWithParamsCompletion(params: MTRGroupsClusterRemoveGroupParams, completion: (p1: MTRGroupsClusterRemoveGroupResponseParams, p2: NSError) => void): void;

	removeGroupWithParamsCompletionHandler(params: MTRGroupsClusterRemoveGroupParams, completionHandler: (p1: MTRGroupsClusterRemoveGroupResponseParams, p2: NSError) => void): void;

	subscribeAttributeAcceptedCommandListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAcceptedCommandListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAttributeListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAttributeListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeClusterRevisionWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeClusterRevisionWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeFeatureMapWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeFeatureMapWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeGeneratedCommandListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeGeneratedCommandListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeNameSupportWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeNameSupportWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	viewGroupWithParamsCompletion(params: MTRGroupsClusterViewGroupParams, completion: (p1: MTRGroupsClusterViewGroupResponseParams, p2: NSError) => void): void;

	viewGroupWithParamsCompletionHandler(params: MTRGroupsClusterViewGroupParams, completionHandler: (p1: MTRGroupsClusterViewGroupResponseParams, p2: NSError) => void): void;
}

declare class MTRBaseClusterIdentify extends MTRGenericBaseCluster {

	static alloc(): MTRBaseClusterIdentify; // inherited from NSObject

	static new(): MTRBaseClusterIdentify; // inherited from NSObject

	static readAttributeAcceptedCommandListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAcceptedCommandListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAttributeListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAttributeListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeClusterRevisionWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeClusterRevisionWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeFeatureMapWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeFeatureMapWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeGeneratedCommandListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeGeneratedCommandListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeIdentifyTimeWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeIdentifyTimeWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeIdentifyTypeWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeIdentifyTypeWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	constructor(o: { device: MTRBaseDevice; endpointID: number; queue: interop.Pointer | interop.Reference<any>; });

	constructor(o: { device: MTRBaseDevice; endpoint: number; queue: interop.Pointer | interop.Reference<any>; });

	identifyWithParamsCompletion(params: MTRIdentifyClusterIdentifyParams, completion: (p1: NSError) => void): void;

	identifyWithParamsCompletionHandler(params: MTRIdentifyClusterIdentifyParams, completionHandler: (p1: NSError) => void): void;

	initWithDeviceEndpointIDQueue(device: MTRBaseDevice, endpointID: number, queue: interop.Pointer | interop.Reference<any>): this;

	initWithDeviceEndpointQueue(device: MTRBaseDevice, endpoint: number, queue: interop.Pointer | interop.Reference<any>): this;

	readAttributeAcceptedCommandListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAcceptedCommandListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAttributeListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAttributeListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeClusterRevisionWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeClusterRevisionWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeFeatureMapWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeFeatureMapWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeGeneratedCommandListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeGeneratedCommandListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeIdentifyTimeWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeIdentifyTimeWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeIdentifyTypeWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeIdentifyTypeWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeAcceptedCommandListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAcceptedCommandListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAttributeListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAttributeListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeClusterRevisionWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeClusterRevisionWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeFeatureMapWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeFeatureMapWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeGeneratedCommandListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeGeneratedCommandListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeIdentifyTimeWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeIdentifyTimeWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeIdentifyTypeWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeIdentifyTypeWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	triggerEffectWithParamsCompletion(params: MTRIdentifyClusterTriggerEffectParams, completion: (p1: NSError) => void): void;

	triggerEffectWithParamsCompletionHandler(params: MTRIdentifyClusterTriggerEffectParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeIdentifyTimeWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeIdentifyTimeWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeIdentifyTimeWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeIdentifyTimeWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;
}

declare class MTRBaseClusterIlluminanceMeasurement extends MTRGenericBaseCluster {

	static alloc(): MTRBaseClusterIlluminanceMeasurement; // inherited from NSObject

	static new(): MTRBaseClusterIlluminanceMeasurement; // inherited from NSObject

	static readAttributeAcceptedCommandListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAcceptedCommandListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAttributeListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAttributeListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeClusterRevisionWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeClusterRevisionWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeFeatureMapWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeFeatureMapWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeGeneratedCommandListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeGeneratedCommandListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeLightSensorTypeWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeLightSensorTypeWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeMaxMeasuredValueWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeMaxMeasuredValueWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeMeasuredValueWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeMeasuredValueWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeMinMeasuredValueWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeMinMeasuredValueWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeToleranceWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeToleranceWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	constructor(o: { device: MTRBaseDevice; endpointID: number; queue: interop.Pointer | interop.Reference<any>; });

	constructor(o: { device: MTRBaseDevice; endpoint: number; queue: interop.Pointer | interop.Reference<any>; });

	initWithDeviceEndpointIDQueue(device: MTRBaseDevice, endpointID: number, queue: interop.Pointer | interop.Reference<any>): this;

	initWithDeviceEndpointQueue(device: MTRBaseDevice, endpoint: number, queue: interop.Pointer | interop.Reference<any>): this;

	readAttributeAcceptedCommandListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAcceptedCommandListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAttributeListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAttributeListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeClusterRevisionWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeClusterRevisionWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeFeatureMapWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeFeatureMapWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeGeneratedCommandListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeGeneratedCommandListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeLightSensorTypeWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeLightSensorTypeWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeMaxMeasuredValueWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeMaxMeasuredValueWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeMeasuredValueWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeMeasuredValueWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeMinMeasuredValueWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeMinMeasuredValueWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeToleranceWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeToleranceWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeAcceptedCommandListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAcceptedCommandListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAttributeListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAttributeListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeClusterRevisionWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeClusterRevisionWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeFeatureMapWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeFeatureMapWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeGeneratedCommandListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeGeneratedCommandListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeLightSensorTypeWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeLightSensorTypeWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeMaxMeasuredValueWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeMaxMeasuredValueWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeMeasuredValueWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeMeasuredValueWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeMinMeasuredValueWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeMinMeasuredValueWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeToleranceWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeToleranceWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;
}

declare class MTRBaseClusterKeypadInput extends MTRGenericBaseCluster {

	static alloc(): MTRBaseClusterKeypadInput; // inherited from NSObject

	static new(): MTRBaseClusterKeypadInput; // inherited from NSObject

	static readAttributeAcceptedCommandListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAcceptedCommandListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAttributeListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAttributeListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeClusterRevisionWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeClusterRevisionWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeFeatureMapWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeFeatureMapWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeGeneratedCommandListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeGeneratedCommandListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	constructor(o: { device: MTRBaseDevice; endpointID: number; queue: interop.Pointer | interop.Reference<any>; });

	constructor(o: { device: MTRBaseDevice; endpoint: number; queue: interop.Pointer | interop.Reference<any>; });

	initWithDeviceEndpointIDQueue(device: MTRBaseDevice, endpointID: number, queue: interop.Pointer | interop.Reference<any>): this;

	initWithDeviceEndpointQueue(device: MTRBaseDevice, endpoint: number, queue: interop.Pointer | interop.Reference<any>): this;

	readAttributeAcceptedCommandListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAcceptedCommandListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAttributeListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAttributeListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeClusterRevisionWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeClusterRevisionWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeFeatureMapWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeFeatureMapWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeGeneratedCommandListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeGeneratedCommandListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	sendKeyWithParamsCompletion(params: MTRKeypadInputClusterSendKeyParams, completion: (p1: MTRKeypadInputClusterSendKeyResponseParams, p2: NSError) => void): void;

	sendKeyWithParamsCompletionHandler(params: MTRKeypadInputClusterSendKeyParams, completionHandler: (p1: MTRKeypadInputClusterSendKeyResponseParams, p2: NSError) => void): void;

	subscribeAttributeAcceptedCommandListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAcceptedCommandListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAttributeListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAttributeListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeClusterRevisionWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeClusterRevisionWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeFeatureMapWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeFeatureMapWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeGeneratedCommandListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeGeneratedCommandListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;
}

declare class MTRBaseClusterLevelControl extends MTRGenericBaseCluster {

	static alloc(): MTRBaseClusterLevelControl; // inherited from NSObject

	static new(): MTRBaseClusterLevelControl; // inherited from NSObject

	static readAttributeAcceptedCommandListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAcceptedCommandListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAttributeListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAttributeListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeClusterRevisionWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeClusterRevisionWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeCurrentFrequencyWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeCurrentFrequencyWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeCurrentLevelWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeCurrentLevelWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeDefaultMoveRateWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeDefaultMoveRateWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeFeatureMapWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeFeatureMapWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeGeneratedCommandListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeGeneratedCommandListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeMaxFrequencyWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeMaxFrequencyWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeMaxLevelWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeMaxLevelWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeMinFrequencyWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeMinFrequencyWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeMinLevelWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeMinLevelWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeOffTransitionTimeWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeOffTransitionTimeWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeOnLevelWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeOnLevelWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeOnOffTransitionTimeWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeOnOffTransitionTimeWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeOnTransitionTimeWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeOnTransitionTimeWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeOptionsWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeOptionsWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeRemainingTimeWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeRemainingTimeWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeStartUpCurrentLevelWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeStartUpCurrentLevelWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	constructor(o: { device: MTRBaseDevice; endpointID: number; queue: interop.Pointer | interop.Reference<any>; });

	constructor(o: { device: MTRBaseDevice; endpoint: number; queue: interop.Pointer | interop.Reference<any>; });

	initWithDeviceEndpointIDQueue(device: MTRBaseDevice, endpointID: number, queue: interop.Pointer | interop.Reference<any>): this;

	initWithDeviceEndpointQueue(device: MTRBaseDevice, endpoint: number, queue: interop.Pointer | interop.Reference<any>): this;

	moveToClosestFrequencyWithParamsCompletion(params: MTRLevelControlClusterMoveToClosestFrequencyParams, completion: (p1: NSError) => void): void;

	moveToClosestFrequencyWithParamsCompletionHandler(params: MTRLevelControlClusterMoveToClosestFrequencyParams, completionHandler: (p1: NSError) => void): void;

	moveToLevelWithOnOffWithParamsCompletion(params: MTRLevelControlClusterMoveToLevelWithOnOffParams, completion: (p1: NSError) => void): void;

	moveToLevelWithOnOffWithParamsCompletionHandler(params: MTRLevelControlClusterMoveToLevelWithOnOffParams, completionHandler: (p1: NSError) => void): void;

	moveToLevelWithParamsCompletion(params: MTRLevelControlClusterMoveToLevelParams, completion: (p1: NSError) => void): void;

	moveToLevelWithParamsCompletionHandler(params: MTRLevelControlClusterMoveToLevelParams, completionHandler: (p1: NSError) => void): void;

	moveWithOnOffWithParamsCompletion(params: MTRLevelControlClusterMoveWithOnOffParams, completion: (p1: NSError) => void): void;

	moveWithOnOffWithParamsCompletionHandler(params: MTRLevelControlClusterMoveWithOnOffParams, completionHandler: (p1: NSError) => void): void;

	moveWithParamsCompletion(params: MTRLevelControlClusterMoveParams, completion: (p1: NSError) => void): void;

	moveWithParamsCompletionHandler(params: MTRLevelControlClusterMoveParams, completionHandler: (p1: NSError) => void): void;

	readAttributeAcceptedCommandListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAcceptedCommandListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAttributeListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAttributeListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeClusterRevisionWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeClusterRevisionWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeCurrentFrequencyWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeCurrentFrequencyWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeCurrentLevelWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeCurrentLevelWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeDefaultMoveRateWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeDefaultMoveRateWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeFeatureMapWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeFeatureMapWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeGeneratedCommandListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeGeneratedCommandListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeMaxFrequencyWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeMaxFrequencyWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeMaxLevelWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeMaxLevelWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeMinFrequencyWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeMinFrequencyWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeMinLevelWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeMinLevelWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeOffTransitionTimeWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeOffTransitionTimeWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeOnLevelWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeOnLevelWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeOnOffTransitionTimeWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeOnOffTransitionTimeWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeOnTransitionTimeWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeOnTransitionTimeWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeOptionsWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeOptionsWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeRemainingTimeWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeRemainingTimeWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeStartUpCurrentLevelWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeStartUpCurrentLevelWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	stepWithOnOffWithParamsCompletion(params: MTRLevelControlClusterStepWithOnOffParams, completion: (p1: NSError) => void): void;

	stepWithOnOffWithParamsCompletionHandler(params: MTRLevelControlClusterStepWithOnOffParams, completionHandler: (p1: NSError) => void): void;

	stepWithParamsCompletion(params: MTRLevelControlClusterStepParams, completion: (p1: NSError) => void): void;

	stepWithParamsCompletionHandler(params: MTRLevelControlClusterStepParams, completionHandler: (p1: NSError) => void): void;

	stopWithOnOffWithParamsCompletion(params: MTRLevelControlClusterStopWithOnOffParams, completion: (p1: NSError) => void): void;

	stopWithOnOffWithParamsCompletionHandler(params: MTRLevelControlClusterStopWithOnOffParams, completionHandler: (p1: NSError) => void): void;

	stopWithParamsCompletion(params: MTRLevelControlClusterStopParams, completion: (p1: NSError) => void): void;

	stopWithParamsCompletionHandler(params: MTRLevelControlClusterStopParams, completionHandler: (p1: NSError) => void): void;

	subscribeAttributeAcceptedCommandListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAcceptedCommandListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAttributeListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAttributeListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeClusterRevisionWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeClusterRevisionWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeCurrentFrequencyWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeCurrentFrequencyWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeCurrentLevelWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeCurrentLevelWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeDefaultMoveRateWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeDefaultMoveRateWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeFeatureMapWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeFeatureMapWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeGeneratedCommandListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeGeneratedCommandListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeMaxFrequencyWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeMaxFrequencyWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeMaxLevelWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeMaxLevelWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeMinFrequencyWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeMinFrequencyWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeMinLevelWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeMinLevelWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeOffTransitionTimeWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeOffTransitionTimeWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeOnLevelWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeOnLevelWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeOnOffTransitionTimeWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeOnOffTransitionTimeWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeOnTransitionTimeWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeOnTransitionTimeWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeOptionsWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeOptionsWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeRemainingTimeWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeRemainingTimeWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeStartUpCurrentLevelWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeStartUpCurrentLevelWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	writeAttributeDefaultMoveRateWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeDefaultMoveRateWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeDefaultMoveRateWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeDefaultMoveRateWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeOffTransitionTimeWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeOffTransitionTimeWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeOffTransitionTimeWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeOffTransitionTimeWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeOnLevelWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeOnLevelWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeOnLevelWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeOnLevelWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeOnOffTransitionTimeWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeOnOffTransitionTimeWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeOnOffTransitionTimeWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeOnOffTransitionTimeWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeOnTransitionTimeWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeOnTransitionTimeWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeOnTransitionTimeWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeOnTransitionTimeWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeOptionsWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeOptionsWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeOptionsWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeOptionsWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeStartUpCurrentLevelWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeStartUpCurrentLevelWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeStartUpCurrentLevelWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeStartUpCurrentLevelWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;
}

declare class MTRBaseClusterLocalizationConfiguration extends MTRGenericBaseCluster {

	static alloc(): MTRBaseClusterLocalizationConfiguration; // inherited from NSObject

	static new(): MTRBaseClusterLocalizationConfiguration; // inherited from NSObject

	static readAttributeAcceptedCommandListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAcceptedCommandListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeActiveLocaleWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: string, p2: NSError) => void): void;

	static readAttributeActiveLocaleWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: string, p2: NSError) => void): void;

	static readAttributeAttributeListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAttributeListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeClusterRevisionWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeClusterRevisionWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeFeatureMapWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeFeatureMapWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeGeneratedCommandListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeGeneratedCommandListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeSupportedLocalesWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeSupportedLocalesWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	constructor(o: { device: MTRBaseDevice; endpointID: number; queue: interop.Pointer | interop.Reference<any>; });

	constructor(o: { device: MTRBaseDevice; endpoint: number; queue: interop.Pointer | interop.Reference<any>; });

	initWithDeviceEndpointIDQueue(device: MTRBaseDevice, endpointID: number, queue: interop.Pointer | interop.Reference<any>): this;

	initWithDeviceEndpointQueue(device: MTRBaseDevice, endpoint: number, queue: interop.Pointer | interop.Reference<any>): this;

	readAttributeAcceptedCommandListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAcceptedCommandListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeActiveLocaleWithCompletion(completion: (p1: string, p2: NSError) => void): void;

	readAttributeActiveLocaleWithCompletionHandler(completionHandler: (p1: string, p2: NSError) => void): void;

	readAttributeAttributeListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAttributeListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeClusterRevisionWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeClusterRevisionWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeFeatureMapWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeFeatureMapWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeGeneratedCommandListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeGeneratedCommandListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeSupportedLocalesWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeSupportedLocalesWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAcceptedCommandListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAcceptedCommandListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeActiveLocaleWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: string, p2: NSError) => void): void;

	subscribeAttributeActiveLocaleWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: string, p2: NSError) => void): void;

	subscribeAttributeAttributeListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAttributeListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeClusterRevisionWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeClusterRevisionWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeFeatureMapWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeFeatureMapWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeGeneratedCommandListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeGeneratedCommandListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeSupportedLocalesWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeSupportedLocalesWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	writeAttributeActiveLocaleWithValueCompletion(value: string, completion: (p1: NSError) => void): void;

	writeAttributeActiveLocaleWithValueCompletionHandler(value: string, completionHandler: (p1: NSError) => void): void;

	writeAttributeActiveLocaleWithValueParamsCompletion(value: string, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeActiveLocaleWithValueParamsCompletionHandler(value: string, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;
}

declare class MTRBaseClusterLowPower extends MTRGenericBaseCluster {

	static alloc(): MTRBaseClusterLowPower; // inherited from NSObject

	static new(): MTRBaseClusterLowPower; // inherited from NSObject

	static readAttributeAcceptedCommandListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAcceptedCommandListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAttributeListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAttributeListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeClusterRevisionWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeClusterRevisionWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeFeatureMapWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeFeatureMapWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeGeneratedCommandListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeGeneratedCommandListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	constructor(o: { device: MTRBaseDevice; endpointID: number; queue: interop.Pointer | interop.Reference<any>; });

	constructor(o: { device: MTRBaseDevice; endpoint: number; queue: interop.Pointer | interop.Reference<any>; });

	initWithDeviceEndpointIDQueue(device: MTRBaseDevice, endpointID: number, queue: interop.Pointer | interop.Reference<any>): this;

	initWithDeviceEndpointQueue(device: MTRBaseDevice, endpoint: number, queue: interop.Pointer | interop.Reference<any>): this;

	readAttributeAcceptedCommandListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAcceptedCommandListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAttributeListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAttributeListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeClusterRevisionWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeClusterRevisionWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeFeatureMapWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeFeatureMapWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeGeneratedCommandListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeGeneratedCommandListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	sleepWithCompletion(completion: (p1: NSError) => void): void;

	sleepWithCompletionHandler(completionHandler: (p1: NSError) => void): void;

	sleepWithParamsCompletion(params: MTRLowPowerClusterSleepParams, completion: (p1: NSError) => void): void;

	sleepWithParamsCompletionHandler(params: MTRLowPowerClusterSleepParams, completionHandler: (p1: NSError) => void): void;

	subscribeAttributeAcceptedCommandListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAcceptedCommandListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAttributeListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAttributeListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeClusterRevisionWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeClusterRevisionWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeFeatureMapWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeFeatureMapWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeGeneratedCommandListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeGeneratedCommandListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;
}

declare class MTRBaseClusterMediaInput extends MTRGenericBaseCluster {

	static alloc(): MTRBaseClusterMediaInput; // inherited from NSObject

	static new(): MTRBaseClusterMediaInput; // inherited from NSObject

	static readAttributeAcceptedCommandListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAcceptedCommandListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAttributeListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAttributeListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeClusterRevisionWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeClusterRevisionWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeCurrentInputWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeCurrentInputWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeFeatureMapWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeFeatureMapWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeGeneratedCommandListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeGeneratedCommandListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeInputListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeInputListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	constructor(o: { device: MTRBaseDevice; endpointID: number; queue: interop.Pointer | interop.Reference<any>; });

	constructor(o: { device: MTRBaseDevice; endpoint: number; queue: interop.Pointer | interop.Reference<any>; });

	hideInputStatusWithCompletion(completion: (p1: NSError) => void): void;

	hideInputStatusWithCompletionHandler(completionHandler: (p1: NSError) => void): void;

	hideInputStatusWithParamsCompletion(params: MTRMediaInputClusterHideInputStatusParams, completion: (p1: NSError) => void): void;

	hideInputStatusWithParamsCompletionHandler(params: MTRMediaInputClusterHideInputStatusParams, completionHandler: (p1: NSError) => void): void;

	initWithDeviceEndpointIDQueue(device: MTRBaseDevice, endpointID: number, queue: interop.Pointer | interop.Reference<any>): this;

	initWithDeviceEndpointQueue(device: MTRBaseDevice, endpoint: number, queue: interop.Pointer | interop.Reference<any>): this;

	readAttributeAcceptedCommandListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAcceptedCommandListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAttributeListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAttributeListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeClusterRevisionWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeClusterRevisionWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeCurrentInputWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeCurrentInputWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeFeatureMapWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeFeatureMapWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeGeneratedCommandListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeGeneratedCommandListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeInputListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeInputListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	renameInputWithParamsCompletion(params: MTRMediaInputClusterRenameInputParams, completion: (p1: NSError) => void): void;

	renameInputWithParamsCompletionHandler(params: MTRMediaInputClusterRenameInputParams, completionHandler: (p1: NSError) => void): void;

	selectInputWithParamsCompletion(params: MTRMediaInputClusterSelectInputParams, completion: (p1: NSError) => void): void;

	selectInputWithParamsCompletionHandler(params: MTRMediaInputClusterSelectInputParams, completionHandler: (p1: NSError) => void): void;

	showInputStatusWithCompletion(completion: (p1: NSError) => void): void;

	showInputStatusWithCompletionHandler(completionHandler: (p1: NSError) => void): void;

	showInputStatusWithParamsCompletion(params: MTRMediaInputClusterShowInputStatusParams, completion: (p1: NSError) => void): void;

	showInputStatusWithParamsCompletionHandler(params: MTRMediaInputClusterShowInputStatusParams, completionHandler: (p1: NSError) => void): void;

	subscribeAttributeAcceptedCommandListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAcceptedCommandListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAttributeListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAttributeListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeClusterRevisionWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeClusterRevisionWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeCurrentInputWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeCurrentInputWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeFeatureMapWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeFeatureMapWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeGeneratedCommandListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeGeneratedCommandListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeInputListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeInputListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;
}

declare class MTRBaseClusterMediaPlayback extends MTRGenericBaseCluster {

	static alloc(): MTRBaseClusterMediaPlayback; // inherited from NSObject

	static new(): MTRBaseClusterMediaPlayback; // inherited from NSObject

	static readAttributeAcceptedCommandListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAcceptedCommandListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAttributeListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAttributeListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeClusterRevisionWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeClusterRevisionWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeCurrentStateWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeCurrentStateWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeDurationWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeDurationWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeFeatureMapWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeFeatureMapWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeGeneratedCommandListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeGeneratedCommandListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributePlaybackSpeedWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributePlaybackSpeedWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeSampledPositionWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: MTRMediaPlaybackClusterPlaybackPosition, p2: NSError) => void): void;

	static readAttributeSampledPositionWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: MTRMediaPlaybackClusterPlaybackPositionStruct, p2: NSError) => void): void;

	static readAttributeSeekRangeEndWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeSeekRangeEndWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeSeekRangeStartWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeSeekRangeStartWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeStartTimeWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeStartTimeWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	constructor(o: { device: MTRBaseDevice; endpointID: number; queue: interop.Pointer | interop.Reference<any>; });

	constructor(o: { device: MTRBaseDevice; endpoint: number; queue: interop.Pointer | interop.Reference<any>; });

	fastForwardWithCompletion(completion: (p1: MTRMediaPlaybackClusterPlaybackResponseParams, p2: NSError) => void): void;

	fastForwardWithCompletionHandler(completionHandler: (p1: MTRMediaPlaybackClusterPlaybackResponseParams, p2: NSError) => void): void;

	fastForwardWithParamsCompletion(params: MTRMediaPlaybackClusterFastForwardParams, completion: (p1: MTRMediaPlaybackClusterPlaybackResponseParams, p2: NSError) => void): void;

	fastForwardWithParamsCompletionHandler(params: MTRMediaPlaybackClusterFastForwardParams, completionHandler: (p1: MTRMediaPlaybackClusterPlaybackResponseParams, p2: NSError) => void): void;

	initWithDeviceEndpointIDQueue(device: MTRBaseDevice, endpointID: number, queue: interop.Pointer | interop.Reference<any>): this;

	initWithDeviceEndpointQueue(device: MTRBaseDevice, endpoint: number, queue: interop.Pointer | interop.Reference<any>): this;

	nextWithCompletion(completion: (p1: MTRMediaPlaybackClusterPlaybackResponseParams, p2: NSError) => void): void;

	nextWithCompletionHandler(completionHandler: (p1: MTRMediaPlaybackClusterPlaybackResponseParams, p2: NSError) => void): void;

	nextWithParamsCompletion(params: MTRMediaPlaybackClusterNextParams, completion: (p1: MTRMediaPlaybackClusterPlaybackResponseParams, p2: NSError) => void): void;

	nextWithParamsCompletionHandler(params: MTRMediaPlaybackClusterNextParams, completionHandler: (p1: MTRMediaPlaybackClusterPlaybackResponseParams, p2: NSError) => void): void;

	pauseWithCompletion(completion: (p1: MTRMediaPlaybackClusterPlaybackResponseParams, p2: NSError) => void): void;

	pauseWithCompletionHandler(completionHandler: (p1: MTRMediaPlaybackClusterPlaybackResponseParams, p2: NSError) => void): void;

	pauseWithParamsCompletion(params: MTRMediaPlaybackClusterPauseParams, completion: (p1: MTRMediaPlaybackClusterPlaybackResponseParams, p2: NSError) => void): void;

	pauseWithParamsCompletionHandler(params: MTRMediaPlaybackClusterPauseParams, completionHandler: (p1: MTRMediaPlaybackClusterPlaybackResponseParams, p2: NSError) => void): void;

	playWithCompletion(completion: (p1: MTRMediaPlaybackClusterPlaybackResponseParams, p2: NSError) => void): void;

	playWithCompletionHandler(completionHandler: (p1: MTRMediaPlaybackClusterPlaybackResponseParams, p2: NSError) => void): void;

	playWithParamsCompletion(params: MTRMediaPlaybackClusterPlayParams, completion: (p1: MTRMediaPlaybackClusterPlaybackResponseParams, p2: NSError) => void): void;

	playWithParamsCompletionHandler(params: MTRMediaPlaybackClusterPlayParams, completionHandler: (p1: MTRMediaPlaybackClusterPlaybackResponseParams, p2: NSError) => void): void;

	previousWithCompletion(completion: (p1: MTRMediaPlaybackClusterPlaybackResponseParams, p2: NSError) => void): void;

	previousWithCompletionHandler(completionHandler: (p1: MTRMediaPlaybackClusterPlaybackResponseParams, p2: NSError) => void): void;

	previousWithParamsCompletion(params: MTRMediaPlaybackClusterPreviousParams, completion: (p1: MTRMediaPlaybackClusterPlaybackResponseParams, p2: NSError) => void): void;

	previousWithParamsCompletionHandler(params: MTRMediaPlaybackClusterPreviousParams, completionHandler: (p1: MTRMediaPlaybackClusterPlaybackResponseParams, p2: NSError) => void): void;

	readAttributeAcceptedCommandListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAcceptedCommandListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAttributeListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAttributeListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeClusterRevisionWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeClusterRevisionWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeCurrentStateWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeCurrentStateWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeDurationWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeDurationWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeFeatureMapWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeFeatureMapWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeGeneratedCommandListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeGeneratedCommandListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributePlaybackSpeedWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributePlaybackSpeedWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeSampledPositionWithCompletion(completion: (p1: MTRMediaPlaybackClusterPlaybackPositionStruct, p2: NSError) => void): void;

	readAttributeSampledPositionWithCompletionHandler(completionHandler: (p1: MTRMediaPlaybackClusterPlaybackPosition, p2: NSError) => void): void;

	readAttributeSeekRangeEndWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeSeekRangeEndWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeSeekRangeStartWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeSeekRangeStartWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeStartTimeWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeStartTimeWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	rewindWithCompletion(completion: (p1: MTRMediaPlaybackClusterPlaybackResponseParams, p2: NSError) => void): void;

	rewindWithCompletionHandler(completionHandler: (p1: MTRMediaPlaybackClusterPlaybackResponseParams, p2: NSError) => void): void;

	rewindWithParamsCompletion(params: MTRMediaPlaybackClusterRewindParams, completion: (p1: MTRMediaPlaybackClusterPlaybackResponseParams, p2: NSError) => void): void;

	rewindWithParamsCompletionHandler(params: MTRMediaPlaybackClusterRewindParams, completionHandler: (p1: MTRMediaPlaybackClusterPlaybackResponseParams, p2: NSError) => void): void;

	seekWithParamsCompletion(params: MTRMediaPlaybackClusterSeekParams, completion: (p1: MTRMediaPlaybackClusterPlaybackResponseParams, p2: NSError) => void): void;

	seekWithParamsCompletionHandler(params: MTRMediaPlaybackClusterSeekParams, completionHandler: (p1: MTRMediaPlaybackClusterPlaybackResponseParams, p2: NSError) => void): void;

	skipBackwardWithParamsCompletion(params: MTRMediaPlaybackClusterSkipBackwardParams, completion: (p1: MTRMediaPlaybackClusterPlaybackResponseParams, p2: NSError) => void): void;

	skipBackwardWithParamsCompletionHandler(params: MTRMediaPlaybackClusterSkipBackwardParams, completionHandler: (p1: MTRMediaPlaybackClusterPlaybackResponseParams, p2: NSError) => void): void;

	skipForwardWithParamsCompletion(params: MTRMediaPlaybackClusterSkipForwardParams, completion: (p1: MTRMediaPlaybackClusterPlaybackResponseParams, p2: NSError) => void): void;

	skipForwardWithParamsCompletionHandler(params: MTRMediaPlaybackClusterSkipForwardParams, completionHandler: (p1: MTRMediaPlaybackClusterPlaybackResponseParams, p2: NSError) => void): void;

	startOverWithCompletion(completion: (p1: MTRMediaPlaybackClusterPlaybackResponseParams, p2: NSError) => void): void;

	startOverWithCompletionHandler(completionHandler: (p1: MTRMediaPlaybackClusterPlaybackResponseParams, p2: NSError) => void): void;

	startOverWithParamsCompletion(params: MTRMediaPlaybackClusterStartOverParams, completion: (p1: MTRMediaPlaybackClusterPlaybackResponseParams, p2: NSError) => void): void;

	startOverWithParamsCompletionHandler(params: MTRMediaPlaybackClusterStartOverParams, completionHandler: (p1: MTRMediaPlaybackClusterPlaybackResponseParams, p2: NSError) => void): void;

	stopPlaybackWithCompletionHandler(completionHandler: (p1: MTRMediaPlaybackClusterPlaybackResponseParams, p2: NSError) => void): void;

	stopPlaybackWithParamsCompletionHandler(params: MTRMediaPlaybackClusterStopPlaybackParams, completionHandler: (p1: MTRMediaPlaybackClusterPlaybackResponseParams, p2: NSError) => void): void;

	stopWithCompletion(completion: (p1: MTRMediaPlaybackClusterPlaybackResponseParams, p2: NSError) => void): void;

	stopWithParamsCompletion(params: MTRMediaPlaybackClusterStopParams, completion: (p1: MTRMediaPlaybackClusterPlaybackResponseParams, p2: NSError) => void): void;

	subscribeAttributeAcceptedCommandListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAcceptedCommandListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAttributeListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAttributeListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeClusterRevisionWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeClusterRevisionWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeCurrentStateWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeCurrentStateWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeDurationWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeDurationWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeFeatureMapWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeFeatureMapWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeGeneratedCommandListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeGeneratedCommandListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributePlaybackSpeedWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributePlaybackSpeedWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeSampledPositionWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: MTRMediaPlaybackClusterPlaybackPosition, p2: NSError) => void): void;

	subscribeAttributeSampledPositionWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: MTRMediaPlaybackClusterPlaybackPositionStruct, p2: NSError) => void): void;

	subscribeAttributeSeekRangeEndWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeSeekRangeEndWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeSeekRangeStartWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeSeekRangeStartWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeStartTimeWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeStartTimeWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;
}

declare class MTRBaseClusterModeSelect extends MTRGenericBaseCluster {

	static alloc(): MTRBaseClusterModeSelect; // inherited from NSObject

	static new(): MTRBaseClusterModeSelect; // inherited from NSObject

	static readAttributeAcceptedCommandListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAcceptedCommandListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAttributeListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAttributeListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeClusterRevisionWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeClusterRevisionWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeCurrentModeWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeCurrentModeWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeDescriptionWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: string, p2: NSError) => void): void;

	static readAttributeDescriptionWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: string, p2: NSError) => void): void;

	static readAttributeFeatureMapWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeFeatureMapWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeGeneratedCommandListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeGeneratedCommandListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeOnModeWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeOnModeWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeStandardNamespaceWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeStandardNamespaceWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeStartUpModeWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeStartUpModeWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeSupportedModesWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeSupportedModesWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	constructor(o: { device: MTRBaseDevice; endpointID: number; queue: interop.Pointer | interop.Reference<any>; });

	constructor(o: { device: MTRBaseDevice; endpoint: number; queue: interop.Pointer | interop.Reference<any>; });

	changeToModeWithParamsCompletion(params: MTRModeSelectClusterChangeToModeParams, completion: (p1: NSError) => void): void;

	changeToModeWithParamsCompletionHandler(params: MTRModeSelectClusterChangeToModeParams, completionHandler: (p1: NSError) => void): void;

	initWithDeviceEndpointIDQueue(device: MTRBaseDevice, endpointID: number, queue: interop.Pointer | interop.Reference<any>): this;

	initWithDeviceEndpointQueue(device: MTRBaseDevice, endpoint: number, queue: interop.Pointer | interop.Reference<any>): this;

	readAttributeAcceptedCommandListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAcceptedCommandListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAttributeListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAttributeListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeClusterRevisionWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeClusterRevisionWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeCurrentModeWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeCurrentModeWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeDescriptionWithCompletion(completion: (p1: string, p2: NSError) => void): void;

	readAttributeDescriptionWithCompletionHandler(completionHandler: (p1: string, p2: NSError) => void): void;

	readAttributeFeatureMapWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeFeatureMapWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeGeneratedCommandListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeGeneratedCommandListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeOnModeWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeOnModeWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeStandardNamespaceWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeStandardNamespaceWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeStartUpModeWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeStartUpModeWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeSupportedModesWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeSupportedModesWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAcceptedCommandListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAcceptedCommandListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAttributeListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAttributeListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeClusterRevisionWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeClusterRevisionWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeCurrentModeWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeCurrentModeWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeDescriptionWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: string, p2: NSError) => void): void;

	subscribeAttributeDescriptionWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: string, p2: NSError) => void): void;

	subscribeAttributeFeatureMapWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeFeatureMapWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeGeneratedCommandListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeGeneratedCommandListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeOnModeWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeOnModeWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeStandardNamespaceWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeStandardNamespaceWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeStartUpModeWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeStartUpModeWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeSupportedModesWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeSupportedModesWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	writeAttributeOnModeWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeOnModeWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeOnModeWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeOnModeWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeStartUpModeWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeStartUpModeWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeStartUpModeWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeStartUpModeWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;
}

declare class MTRBaseClusterNetworkCommissioning extends MTRGenericBaseCluster {

	static alloc(): MTRBaseClusterNetworkCommissioning; // inherited from NSObject

	static new(): MTRBaseClusterNetworkCommissioning; // inherited from NSObject

	static readAttributeAcceptedCommandListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAcceptedCommandListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAttributeListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAttributeListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeClusterRevisionWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeClusterRevisionWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeConnectMaxTimeSecondsWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeConnectMaxTimeSecondsWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeFeatureMapWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeFeatureMapWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeGeneratedCommandListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeGeneratedCommandListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeInterfaceEnabledWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeInterfaceEnabledWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeLastConnectErrorValueWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeLastConnectErrorValueWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeLastNetworkIDWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSData, p2: NSError) => void): void;

	static readAttributeLastNetworkIDWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSData, p2: NSError) => void): void;

	static readAttributeLastNetworkingStatusWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeLastNetworkingStatusWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeMaxNetworksWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeMaxNetworksWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeNetworksWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeNetworksWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeScanMaxTimeSecondsWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeScanMaxTimeSecondsWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	constructor(o: { device: MTRBaseDevice; endpointID: number; queue: interop.Pointer | interop.Reference<any>; });

	constructor(o: { device: MTRBaseDevice; endpoint: number; queue: interop.Pointer | interop.Reference<any>; });

	addOrUpdateThreadNetworkWithParamsCompletion(params: MTRNetworkCommissioningClusterAddOrUpdateThreadNetworkParams, completion: (p1: MTRNetworkCommissioningClusterNetworkConfigResponseParams, p2: NSError) => void): void;

	addOrUpdateThreadNetworkWithParamsCompletionHandler(params: MTRNetworkCommissioningClusterAddOrUpdateThreadNetworkParams, completionHandler: (p1: MTRNetworkCommissioningClusterNetworkConfigResponseParams, p2: NSError) => void): void;

	addOrUpdateWiFiNetworkWithParamsCompletion(params: MTRNetworkCommissioningClusterAddOrUpdateWiFiNetworkParams, completion: (p1: MTRNetworkCommissioningClusterNetworkConfigResponseParams, p2: NSError) => void): void;

	addOrUpdateWiFiNetworkWithParamsCompletionHandler(params: MTRNetworkCommissioningClusterAddOrUpdateWiFiNetworkParams, completionHandler: (p1: MTRNetworkCommissioningClusterNetworkConfigResponseParams, p2: NSError) => void): void;

	connectNetworkWithParamsCompletion(params: MTRNetworkCommissioningClusterConnectNetworkParams, completion: (p1: MTRNetworkCommissioningClusterConnectNetworkResponseParams, p2: NSError) => void): void;

	connectNetworkWithParamsCompletionHandler(params: MTRNetworkCommissioningClusterConnectNetworkParams, completionHandler: (p1: MTRNetworkCommissioningClusterConnectNetworkResponseParams, p2: NSError) => void): void;

	initWithDeviceEndpointIDQueue(device: MTRBaseDevice, endpointID: number, queue: interop.Pointer | interop.Reference<any>): this;

	initWithDeviceEndpointQueue(device: MTRBaseDevice, endpoint: number, queue: interop.Pointer | interop.Reference<any>): this;

	readAttributeAcceptedCommandListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAcceptedCommandListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAttributeListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAttributeListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeClusterRevisionWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeClusterRevisionWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeConnectMaxTimeSecondsWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeConnectMaxTimeSecondsWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeFeatureMapWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeFeatureMapWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeGeneratedCommandListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeGeneratedCommandListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeInterfaceEnabledWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeInterfaceEnabledWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeLastConnectErrorValueWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeLastConnectErrorValueWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeLastNetworkIDWithCompletion(completion: (p1: NSData, p2: NSError) => void): void;

	readAttributeLastNetworkIDWithCompletionHandler(completionHandler: (p1: NSData, p2: NSError) => void): void;

	readAttributeLastNetworkingStatusWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeLastNetworkingStatusWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeMaxNetworksWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeMaxNetworksWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeNetworksWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeNetworksWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeScanMaxTimeSecondsWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeScanMaxTimeSecondsWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	removeNetworkWithParamsCompletion(params: MTRNetworkCommissioningClusterRemoveNetworkParams, completion: (p1: MTRNetworkCommissioningClusterNetworkConfigResponseParams, p2: NSError) => void): void;

	removeNetworkWithParamsCompletionHandler(params: MTRNetworkCommissioningClusterRemoveNetworkParams, completionHandler: (p1: MTRNetworkCommissioningClusterNetworkConfigResponseParams, p2: NSError) => void): void;

	reorderNetworkWithParamsCompletion(params: MTRNetworkCommissioningClusterReorderNetworkParams, completion: (p1: MTRNetworkCommissioningClusterNetworkConfigResponseParams, p2: NSError) => void): void;

	reorderNetworkWithParamsCompletionHandler(params: MTRNetworkCommissioningClusterReorderNetworkParams, completionHandler: (p1: MTRNetworkCommissioningClusterNetworkConfigResponseParams, p2: NSError) => void): void;

	scanNetworksWithCompletion(completion: (p1: MTRNetworkCommissioningClusterScanNetworksResponseParams, p2: NSError) => void): void;

	scanNetworksWithParamsCompletion(params: MTRNetworkCommissioningClusterScanNetworksParams, completion: (p1: MTRNetworkCommissioningClusterScanNetworksResponseParams, p2: NSError) => void): void;

	scanNetworksWithParamsCompletionHandler(params: MTRNetworkCommissioningClusterScanNetworksParams, completionHandler: (p1: MTRNetworkCommissioningClusterScanNetworksResponseParams, p2: NSError) => void): void;

	subscribeAttributeAcceptedCommandListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAcceptedCommandListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAttributeListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAttributeListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeClusterRevisionWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeClusterRevisionWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeConnectMaxTimeSecondsWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeConnectMaxTimeSecondsWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeFeatureMapWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeFeatureMapWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeGeneratedCommandListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeGeneratedCommandListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeInterfaceEnabledWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeInterfaceEnabledWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeLastConnectErrorValueWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeLastConnectErrorValueWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeLastNetworkIDWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSData, p2: NSError) => void): void;

	subscribeAttributeLastNetworkIDWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSData, p2: NSError) => void): void;

	subscribeAttributeLastNetworkingStatusWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeLastNetworkingStatusWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeMaxNetworksWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeMaxNetworksWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeNetworksWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeNetworksWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeScanMaxTimeSecondsWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeScanMaxTimeSecondsWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	writeAttributeInterfaceEnabledWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeInterfaceEnabledWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeInterfaceEnabledWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeInterfaceEnabledWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;
}

declare class MTRBaseClusterOTASoftwareUpdateProvider extends MTRGenericBaseCluster {

	static alloc(): MTRBaseClusterOTASoftwareUpdateProvider; // inherited from NSObject

	static new(): MTRBaseClusterOTASoftwareUpdateProvider; // inherited from NSObject

	static readAttributeAcceptedCommandListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAttributeListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeClusterRevisionWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeFeatureMapWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeGeneratedCommandListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	constructor(o: { device: MTRBaseDevice; endpointID: number; queue: interop.Pointer | interop.Reference<any>; });

	applyUpdateRequestWithParamsCompletion(params: MTROTASoftwareUpdateProviderClusterApplyUpdateRequestParams, completion: (p1: MTROTASoftwareUpdateProviderClusterApplyUpdateResponseParams, p2: NSError) => void): void;

	initWithDeviceEndpointIDQueue(device: MTRBaseDevice, endpointID: number, queue: interop.Pointer | interop.Reference<any>): this;

	notifyUpdateAppliedWithParamsCompletion(params: MTROTASoftwareUpdateProviderClusterNotifyUpdateAppliedParams, completion: (p1: NSError) => void): void;

	queryImageWithParamsCompletion(params: MTROTASoftwareUpdateProviderClusterQueryImageParams, completion: (p1: MTROTASoftwareUpdateProviderClusterQueryImageResponseParams, p2: NSError) => void): void;

	readAttributeAcceptedCommandListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAttributeListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeClusterRevisionWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeFeatureMapWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeGeneratedCommandListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAcceptedCommandListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAttributeListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeClusterRevisionWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeFeatureMapWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeGeneratedCommandListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;
}

declare class MTRBaseClusterOTASoftwareUpdateRequestor extends MTRGenericBaseCluster {

	static alloc(): MTRBaseClusterOTASoftwareUpdateRequestor; // inherited from NSObject

	static new(): MTRBaseClusterOTASoftwareUpdateRequestor; // inherited from NSObject

	static readAttributeAcceptedCommandListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAttributeListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeClusterRevisionWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeDefaultOTAProvidersWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeFeatureMapWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeGeneratedCommandListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeUpdatePossibleWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeUpdateStateProgressWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeUpdateStateWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	constructor(o: { device: MTRBaseDevice; endpointID: number; queue: interop.Pointer | interop.Reference<any>; });

	announceOTAProviderWithParamsCompletion(params: MTROTASoftwareUpdateRequestorClusterAnnounceOTAProviderParams, completion: (p1: NSError) => void): void;

	initWithDeviceEndpointIDQueue(device: MTRBaseDevice, endpointID: number, queue: interop.Pointer | interop.Reference<any>): this;

	readAttributeAcceptedCommandListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAttributeListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeClusterRevisionWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeDefaultOTAProvidersWithParamsCompletion(params: MTRReadParams, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeFeatureMapWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeGeneratedCommandListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeUpdatePossibleWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeUpdateStateProgressWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeUpdateStateWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	subscribeAttributeAcceptedCommandListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAttributeListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeClusterRevisionWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeDefaultOTAProvidersWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeFeatureMapWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeGeneratedCommandListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeUpdatePossibleWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeUpdateStateProgressWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeUpdateStateWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	writeAttributeDefaultOTAProvidersWithValueCompletion(value: NSArray<any> | any[], completion: (p1: NSError) => void): void;

	writeAttributeDefaultOTAProvidersWithValueParamsCompletion(value: NSArray<any> | any[], params: MTRWriteParams, completion: (p1: NSError) => void): void;
}

declare class MTRBaseClusterOccupancySensing extends MTRGenericBaseCluster {

	static alloc(): MTRBaseClusterOccupancySensing; // inherited from NSObject

	static new(): MTRBaseClusterOccupancySensing; // inherited from NSObject

	static readAttributeAcceptedCommandListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAcceptedCommandListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAttributeListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAttributeListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeClusterRevisionWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeClusterRevisionWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeFeatureMapWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeFeatureMapWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeGeneratedCommandListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeGeneratedCommandListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeOccupancySensorTypeBitmapWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeOccupancySensorTypeBitmapWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeOccupancySensorTypeWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeOccupancySensorTypeWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeOccupancyWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeOccupancyWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributePIROccupiedToUnoccupiedDelayWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributePIRUnoccupiedToOccupiedDelayWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributePIRUnoccupiedToOccupiedThresholdWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributePhysicalContactOccupiedToUnoccupiedDelayWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributePhysicalContactOccupiedToUnoccupiedDelayWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributePhysicalContactUnoccupiedToOccupiedDelayWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributePhysicalContactUnoccupiedToOccupiedDelayWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributePhysicalContactUnoccupiedToOccupiedThresholdWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributePhysicalContactUnoccupiedToOccupiedThresholdWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributePirOccupiedToUnoccupiedDelayWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributePirUnoccupiedToOccupiedDelayWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributePirUnoccupiedToOccupiedThresholdWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeUltrasonicOccupiedToUnoccupiedDelayWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeUltrasonicOccupiedToUnoccupiedDelayWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeUltrasonicUnoccupiedToOccupiedDelayWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeUltrasonicUnoccupiedToOccupiedDelayWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeUltrasonicUnoccupiedToOccupiedThresholdWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeUltrasonicUnoccupiedToOccupiedThresholdWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	constructor(o: { device: MTRBaseDevice; endpointID: number; queue: interop.Pointer | interop.Reference<any>; });

	constructor(o: { device: MTRBaseDevice; endpoint: number; queue: interop.Pointer | interop.Reference<any>; });

	initWithDeviceEndpointIDQueue(device: MTRBaseDevice, endpointID: number, queue: interop.Pointer | interop.Reference<any>): this;

	initWithDeviceEndpointQueue(device: MTRBaseDevice, endpoint: number, queue: interop.Pointer | interop.Reference<any>): this;

	readAttributeAcceptedCommandListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAcceptedCommandListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAttributeListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAttributeListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeClusterRevisionWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeClusterRevisionWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeFeatureMapWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeFeatureMapWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeGeneratedCommandListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeGeneratedCommandListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeOccupancySensorTypeBitmapWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeOccupancySensorTypeBitmapWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeOccupancySensorTypeWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeOccupancySensorTypeWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeOccupancyWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeOccupancyWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributePIROccupiedToUnoccupiedDelayWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributePIRUnoccupiedToOccupiedDelayWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributePIRUnoccupiedToOccupiedThresholdWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributePhysicalContactOccupiedToUnoccupiedDelayWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributePhysicalContactOccupiedToUnoccupiedDelayWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributePhysicalContactUnoccupiedToOccupiedDelayWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributePhysicalContactUnoccupiedToOccupiedDelayWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributePhysicalContactUnoccupiedToOccupiedThresholdWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributePhysicalContactUnoccupiedToOccupiedThresholdWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributePirOccupiedToUnoccupiedDelayWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributePirUnoccupiedToOccupiedDelayWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributePirUnoccupiedToOccupiedThresholdWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeUltrasonicOccupiedToUnoccupiedDelayWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeUltrasonicOccupiedToUnoccupiedDelayWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeUltrasonicUnoccupiedToOccupiedDelayWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeUltrasonicUnoccupiedToOccupiedDelayWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeUltrasonicUnoccupiedToOccupiedThresholdWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeUltrasonicUnoccupiedToOccupiedThresholdWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeAcceptedCommandListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAcceptedCommandListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAttributeListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAttributeListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeClusterRevisionWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeClusterRevisionWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeFeatureMapWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeFeatureMapWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeGeneratedCommandListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeGeneratedCommandListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeOccupancySensorTypeBitmapWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeOccupancySensorTypeBitmapWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeOccupancySensorTypeWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeOccupancySensorTypeWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeOccupancyWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeOccupancyWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributePIROccupiedToUnoccupiedDelayWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributePIRUnoccupiedToOccupiedDelayWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributePIRUnoccupiedToOccupiedThresholdWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributePhysicalContactOccupiedToUnoccupiedDelayWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributePhysicalContactOccupiedToUnoccupiedDelayWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributePhysicalContactUnoccupiedToOccupiedDelayWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributePhysicalContactUnoccupiedToOccupiedDelayWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributePhysicalContactUnoccupiedToOccupiedThresholdWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributePhysicalContactUnoccupiedToOccupiedThresholdWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributePirOccupiedToUnoccupiedDelayWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributePirUnoccupiedToOccupiedDelayWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributePirUnoccupiedToOccupiedThresholdWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeUltrasonicOccupiedToUnoccupiedDelayWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeUltrasonicOccupiedToUnoccupiedDelayWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeUltrasonicUnoccupiedToOccupiedDelayWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeUltrasonicUnoccupiedToOccupiedDelayWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeUltrasonicUnoccupiedToOccupiedThresholdWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeUltrasonicUnoccupiedToOccupiedThresholdWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	writeAttributePIROccupiedToUnoccupiedDelayWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributePIROccupiedToUnoccupiedDelayWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributePIRUnoccupiedToOccupiedDelayWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributePIRUnoccupiedToOccupiedDelayWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributePIRUnoccupiedToOccupiedThresholdWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributePIRUnoccupiedToOccupiedThresholdWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributePhysicalContactOccupiedToUnoccupiedDelayWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributePhysicalContactOccupiedToUnoccupiedDelayWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributePhysicalContactOccupiedToUnoccupiedDelayWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributePhysicalContactOccupiedToUnoccupiedDelayWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributePhysicalContactUnoccupiedToOccupiedDelayWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributePhysicalContactUnoccupiedToOccupiedDelayWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributePhysicalContactUnoccupiedToOccupiedDelayWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributePhysicalContactUnoccupiedToOccupiedDelayWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributePhysicalContactUnoccupiedToOccupiedThresholdWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributePhysicalContactUnoccupiedToOccupiedThresholdWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributePhysicalContactUnoccupiedToOccupiedThresholdWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributePhysicalContactUnoccupiedToOccupiedThresholdWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributePirOccupiedToUnoccupiedDelayWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributePirOccupiedToUnoccupiedDelayWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributePirUnoccupiedToOccupiedDelayWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributePirUnoccupiedToOccupiedDelayWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributePirUnoccupiedToOccupiedThresholdWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributePirUnoccupiedToOccupiedThresholdWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeUltrasonicOccupiedToUnoccupiedDelayWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeUltrasonicOccupiedToUnoccupiedDelayWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeUltrasonicOccupiedToUnoccupiedDelayWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeUltrasonicOccupiedToUnoccupiedDelayWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeUltrasonicUnoccupiedToOccupiedDelayWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeUltrasonicUnoccupiedToOccupiedDelayWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeUltrasonicUnoccupiedToOccupiedDelayWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeUltrasonicUnoccupiedToOccupiedDelayWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeUltrasonicUnoccupiedToOccupiedThresholdWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeUltrasonicUnoccupiedToOccupiedThresholdWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeUltrasonicUnoccupiedToOccupiedThresholdWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeUltrasonicUnoccupiedToOccupiedThresholdWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;
}

declare class MTRBaseClusterOnOff extends MTRGenericBaseCluster {

	static alloc(): MTRBaseClusterOnOff; // inherited from NSObject

	static new(): MTRBaseClusterOnOff; // inherited from NSObject

	static readAttributeAcceptedCommandListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAcceptedCommandListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAttributeListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAttributeListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeClusterRevisionWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeClusterRevisionWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeFeatureMapWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeFeatureMapWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeGeneratedCommandListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeGeneratedCommandListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeGlobalSceneControlWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeGlobalSceneControlWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeOffWaitTimeWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeOffWaitTimeWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeOnOffWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeOnOffWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeOnTimeWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeOnTimeWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeStartUpOnOffWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeStartUpOnOffWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	constructor(o: { device: MTRBaseDevice; endpointID: number; queue: interop.Pointer | interop.Reference<any>; });

	constructor(o: { device: MTRBaseDevice; endpoint: number; queue: interop.Pointer | interop.Reference<any>; });

	initWithDeviceEndpointIDQueue(device: MTRBaseDevice, endpointID: number, queue: interop.Pointer | interop.Reference<any>): this;

	initWithDeviceEndpointQueue(device: MTRBaseDevice, endpoint: number, queue: interop.Pointer | interop.Reference<any>): this;

	offWithCompletion(completion: (p1: NSError) => void): void;

	offWithCompletionHandler(completionHandler: (p1: NSError) => void): void;

	offWithEffectWithParamsCompletion(params: MTROnOffClusterOffWithEffectParams, completion: (p1: NSError) => void): void;

	offWithEffectWithParamsCompletionHandler(params: MTROnOffClusterOffWithEffectParams, completionHandler: (p1: NSError) => void): void;

	offWithParamsCompletion(params: MTROnOffClusterOffParams, completion: (p1: NSError) => void): void;

	offWithParamsCompletionHandler(params: MTROnOffClusterOffParams, completionHandler: (p1: NSError) => void): void;

	onWithCompletion(completion: (p1: NSError) => void): void;

	onWithCompletionHandler(completionHandler: (p1: NSError) => void): void;

	onWithParamsCompletion(params: MTROnOffClusterOnParams, completion: (p1: NSError) => void): void;

	onWithParamsCompletionHandler(params: MTROnOffClusterOnParams, completionHandler: (p1: NSError) => void): void;

	onWithRecallGlobalSceneWithCompletion(completion: (p1: NSError) => void): void;

	onWithRecallGlobalSceneWithCompletionHandler(completionHandler: (p1: NSError) => void): void;

	onWithRecallGlobalSceneWithParamsCompletion(params: MTROnOffClusterOnWithRecallGlobalSceneParams, completion: (p1: NSError) => void): void;

	onWithRecallGlobalSceneWithParamsCompletionHandler(params: MTROnOffClusterOnWithRecallGlobalSceneParams, completionHandler: (p1: NSError) => void): void;

	onWithTimedOffWithParamsCompletion(params: MTROnOffClusterOnWithTimedOffParams, completion: (p1: NSError) => void): void;

	onWithTimedOffWithParamsCompletionHandler(params: MTROnOffClusterOnWithTimedOffParams, completionHandler: (p1: NSError) => void): void;

	readAttributeAcceptedCommandListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAcceptedCommandListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAttributeListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAttributeListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeClusterRevisionWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeClusterRevisionWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeFeatureMapWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeFeatureMapWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeGeneratedCommandListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeGeneratedCommandListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeGlobalSceneControlWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeGlobalSceneControlWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeOffWaitTimeWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeOffWaitTimeWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeOnOffWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeOnOffWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeOnTimeWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeOnTimeWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeStartUpOnOffWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeStartUpOnOffWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeAcceptedCommandListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAcceptedCommandListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAttributeListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAttributeListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeClusterRevisionWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeClusterRevisionWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeFeatureMapWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeFeatureMapWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeGeneratedCommandListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeGeneratedCommandListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeGlobalSceneControlWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeGlobalSceneControlWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeOffWaitTimeWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeOffWaitTimeWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeOnOffWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeOnOffWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeOnTimeWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeOnTimeWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeStartUpOnOffWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeStartUpOnOffWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	toggleWithCompletion(completion: (p1: NSError) => void): void;

	toggleWithCompletionHandler(completionHandler: (p1: NSError) => void): void;

	toggleWithParamsCompletion(params: MTROnOffClusterToggleParams, completion: (p1: NSError) => void): void;

	toggleWithParamsCompletionHandler(params: MTROnOffClusterToggleParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeOffWaitTimeWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeOffWaitTimeWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeOffWaitTimeWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeOffWaitTimeWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeOnTimeWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeOnTimeWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeOnTimeWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeOnTimeWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeStartUpOnOffWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeStartUpOnOffWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeStartUpOnOffWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeStartUpOnOffWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;
}

declare class MTRBaseClusterOnOffSwitchConfiguration extends MTRGenericBaseCluster {

	static alloc(): MTRBaseClusterOnOffSwitchConfiguration; // inherited from NSObject

	static new(): MTRBaseClusterOnOffSwitchConfiguration; // inherited from NSObject

	static readAttributeAcceptedCommandListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAcceptedCommandListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAttributeListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAttributeListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeClusterRevisionWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeClusterRevisionWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeFeatureMapWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeFeatureMapWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeGeneratedCommandListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeGeneratedCommandListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeSwitchActionsWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeSwitchActionsWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeSwitchTypeWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeSwitchTypeWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	constructor(o: { device: MTRBaseDevice; endpointID: number; queue: interop.Pointer | interop.Reference<any>; });

	constructor(o: { device: MTRBaseDevice; endpoint: number; queue: interop.Pointer | interop.Reference<any>; });

	initWithDeviceEndpointIDQueue(device: MTRBaseDevice, endpointID: number, queue: interop.Pointer | interop.Reference<any>): this;

	initWithDeviceEndpointQueue(device: MTRBaseDevice, endpoint: number, queue: interop.Pointer | interop.Reference<any>): this;

	readAttributeAcceptedCommandListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAcceptedCommandListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAttributeListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAttributeListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeClusterRevisionWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeClusterRevisionWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeFeatureMapWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeFeatureMapWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeGeneratedCommandListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeGeneratedCommandListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeSwitchActionsWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeSwitchActionsWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeSwitchTypeWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeSwitchTypeWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeAcceptedCommandListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAcceptedCommandListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAttributeListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAttributeListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeClusterRevisionWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeClusterRevisionWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeFeatureMapWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeFeatureMapWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeGeneratedCommandListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeGeneratedCommandListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeSwitchActionsWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeSwitchActionsWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeSwitchTypeWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeSwitchTypeWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	writeAttributeSwitchActionsWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeSwitchActionsWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeSwitchActionsWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeSwitchActionsWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;
}

declare class MTRBaseClusterOperationalCredentials extends MTRGenericBaseCluster {

	static alloc(): MTRBaseClusterOperationalCredentials; // inherited from NSObject

	static new(): MTRBaseClusterOperationalCredentials; // inherited from NSObject

	static readAttributeAcceptedCommandListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAcceptedCommandListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAttributeListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAttributeListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeClusterRevisionWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeClusterRevisionWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeCommissionedFabricsWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeCommissionedFabricsWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeCurrentFabricIndexWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeCurrentFabricIndexWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeFabricsWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeFabricsWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeFeatureMapWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeFeatureMapWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeGeneratedCommandListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeGeneratedCommandListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeNOCsWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeNOCsWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeSupportedFabricsWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeSupportedFabricsWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeTrustedRootCertificatesWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeTrustedRootCertificatesWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	constructor(o: { device: MTRBaseDevice; endpointID: number; queue: interop.Pointer | interop.Reference<any>; });

	constructor(o: { device: MTRBaseDevice; endpoint: number; queue: interop.Pointer | interop.Reference<any>; });

	CSRRequestWithParamsCompletion(params: MTROperationalCredentialsClusterCSRRequestParams, completion: (p1: MTROperationalCredentialsClusterCSRResponseParams, p2: NSError) => void): void;

	CSRRequestWithParamsCompletionHandler(params: MTROperationalCredentialsClusterCSRRequestParams, completionHandler: (p1: MTROperationalCredentialsClusterCSRResponseParams, p2: NSError) => void): void;

	addNOCWithParamsCompletion(params: MTROperationalCredentialsClusterAddNOCParams, completion: (p1: MTROperationalCredentialsClusterNOCResponseParams, p2: NSError) => void): void;

	addNOCWithParamsCompletionHandler(params: MTROperationalCredentialsClusterAddNOCParams, completionHandler: (p1: MTROperationalCredentialsClusterNOCResponseParams, p2: NSError) => void): void;

	addTrustedRootCertificateWithParamsCompletion(params: MTROperationalCredentialsClusterAddTrustedRootCertificateParams, completion: (p1: NSError) => void): void;

	addTrustedRootCertificateWithParamsCompletionHandler(params: MTROperationalCredentialsClusterAddTrustedRootCertificateParams, completionHandler: (p1: NSError) => void): void;

	attestationRequestWithParamsCompletion(params: MTROperationalCredentialsClusterAttestationRequestParams, completion: (p1: MTROperationalCredentialsClusterAttestationResponseParams, p2: NSError) => void): void;

	attestationRequestWithParamsCompletionHandler(params: MTROperationalCredentialsClusterAttestationRequestParams, completionHandler: (p1: MTROperationalCredentialsClusterAttestationResponseParams, p2: NSError) => void): void;

	certificateChainRequestWithParamsCompletion(params: MTROperationalCredentialsClusterCertificateChainRequestParams, completion: (p1: MTROperationalCredentialsClusterCertificateChainResponseParams, p2: NSError) => void): void;

	certificateChainRequestWithParamsCompletionHandler(params: MTROperationalCredentialsClusterCertificateChainRequestParams, completionHandler: (p1: MTROperationalCredentialsClusterCertificateChainResponseParams, p2: NSError) => void): void;

	initWithDeviceEndpointIDQueue(device: MTRBaseDevice, endpointID: number, queue: interop.Pointer | interop.Reference<any>): this;

	initWithDeviceEndpointQueue(device: MTRBaseDevice, endpoint: number, queue: interop.Pointer | interop.Reference<any>): this;

	readAttributeAcceptedCommandListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAcceptedCommandListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAttributeListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAttributeListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeClusterRevisionWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeClusterRevisionWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeCommissionedFabricsWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeCommissionedFabricsWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeCurrentFabricIndexWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeCurrentFabricIndexWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeFabricsWithParamsCompletion(params: MTRReadParams, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeFabricsWithParamsCompletionHandler(params: MTRReadParams, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeFeatureMapWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeFeatureMapWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeGeneratedCommandListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeGeneratedCommandListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeNOCsWithParamsCompletion(params: MTRReadParams, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeNOCsWithParamsCompletionHandler(params: MTRReadParams, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeSupportedFabricsWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeSupportedFabricsWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeTrustedRootCertificatesWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeTrustedRootCertificatesWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	removeFabricWithParamsCompletion(params: MTROperationalCredentialsClusterRemoveFabricParams, completion: (p1: MTROperationalCredentialsClusterNOCResponseParams, p2: NSError) => void): void;

	removeFabricWithParamsCompletionHandler(params: MTROperationalCredentialsClusterRemoveFabricParams, completionHandler: (p1: MTROperationalCredentialsClusterNOCResponseParams, p2: NSError) => void): void;

	subscribeAttributeAcceptedCommandListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAcceptedCommandListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAttributeListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAttributeListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeClusterRevisionWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeClusterRevisionWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeCommissionedFabricsWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeCommissionedFabricsWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeCurrentFabricIndexWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeCurrentFabricIndexWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeFabricsWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeFabricsWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeFeatureMapWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeFeatureMapWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeGeneratedCommandListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeGeneratedCommandListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeNOCsWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeNOCsWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeSupportedFabricsWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeSupportedFabricsWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeTrustedRootCertificatesWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeTrustedRootCertificatesWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	updateFabricLabelWithParamsCompletion(params: MTROperationalCredentialsClusterUpdateFabricLabelParams, completion: (p1: MTROperationalCredentialsClusterNOCResponseParams, p2: NSError) => void): void;

	updateFabricLabelWithParamsCompletionHandler(params: MTROperationalCredentialsClusterUpdateFabricLabelParams, completionHandler: (p1: MTROperationalCredentialsClusterNOCResponseParams, p2: NSError) => void): void;

	updateNOCWithParamsCompletion(params: MTROperationalCredentialsClusterUpdateNOCParams, completion: (p1: MTROperationalCredentialsClusterNOCResponseParams, p2: NSError) => void): void;

	updateNOCWithParamsCompletionHandler(params: MTROperationalCredentialsClusterUpdateNOCParams, completionHandler: (p1: MTROperationalCredentialsClusterNOCResponseParams, p2: NSError) => void): void;
}

declare class MTRBaseClusterOperationalState extends MTRGenericBaseCluster {

	static alloc(): MTRBaseClusterOperationalState; // inherited from NSObject

	static new(): MTRBaseClusterOperationalState; // inherited from NSObject

	static readAttributeAcceptedCommandListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAttributeListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeClusterRevisionWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeCountdownTimeWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeCurrentPhaseWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeFeatureMapWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeGeneratedCommandListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeOperationalErrorWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: MTROperationalStateClusterErrorStateStruct, p2: NSError) => void): void;

	static readAttributeOperationalStateListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeOperationalStateWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributePhaseListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	constructor(o: { device: MTRBaseDevice; endpointID: number; queue: interop.Pointer | interop.Reference<any>; });

	initWithDeviceEndpointIDQueue(device: MTRBaseDevice, endpointID: number, queue: interop.Pointer | interop.Reference<any>): this;

	pauseWithCompletion(completion: (p1: MTROperationalStateClusterOperationalCommandResponseParams, p2: NSError) => void): void;

	pauseWithParamsCompletion(params: MTROperationalStateClusterPauseParams, completion: (p1: MTROperationalStateClusterOperationalCommandResponseParams, p2: NSError) => void): void;

	readAttributeAcceptedCommandListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAttributeListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeClusterRevisionWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeCountdownTimeWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeCurrentPhaseWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeFeatureMapWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeGeneratedCommandListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeOperationalErrorWithCompletion(completion: (p1: MTROperationalStateClusterErrorStateStruct, p2: NSError) => void): void;

	readAttributeOperationalStateListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeOperationalStateWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributePhaseListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	resumeWithCompletion(completion: (p1: MTROperationalStateClusterOperationalCommandResponseParams, p2: NSError) => void): void;

	resumeWithParamsCompletion(params: MTROperationalStateClusterResumeParams, completion: (p1: MTROperationalStateClusterOperationalCommandResponseParams, p2: NSError) => void): void;

	startWithCompletion(completion: (p1: MTROperationalStateClusterOperationalCommandResponseParams, p2: NSError) => void): void;

	startWithParamsCompletion(params: MTROperationalStateClusterStartParams, completion: (p1: MTROperationalStateClusterOperationalCommandResponseParams, p2: NSError) => void): void;

	stopWithCompletion(completion: (p1: MTROperationalStateClusterOperationalCommandResponseParams, p2: NSError) => void): void;

	stopWithParamsCompletion(params: MTROperationalStateClusterStopParams, completion: (p1: MTROperationalStateClusterOperationalCommandResponseParams, p2: NSError) => void): void;

	subscribeAttributeAcceptedCommandListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAttributeListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeClusterRevisionWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeCountdownTimeWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeCurrentPhaseWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeFeatureMapWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeGeneratedCommandListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeOperationalErrorWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: MTROperationalStateClusterErrorStateStruct, p2: NSError) => void): void;

	subscribeAttributeOperationalStateListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeOperationalStateWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributePhaseListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;
}

declare class MTRBaseClusterOtaSoftwareUpdateProvider extends MTRBaseClusterOTASoftwareUpdateProvider {

	static alloc(): MTRBaseClusterOtaSoftwareUpdateProvider; // inherited from NSObject

	static new(): MTRBaseClusterOtaSoftwareUpdateProvider; // inherited from NSObject

	static readAttributeAcceptedCommandListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAttributeListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeClusterRevisionWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeFeatureMapWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeGeneratedCommandListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	constructor(o: { device: MTRBaseDevice; endpoint: number; queue: interop.Pointer | interop.Reference<any>; });

	applyUpdateRequestWithParamsCompletionHandler(params: MTROtaSoftwareUpdateProviderClusterApplyUpdateRequestParams, completionHandler: (p1: MTROtaSoftwareUpdateProviderClusterApplyUpdateResponseParams, p2: NSError) => void): void;

	initWithDeviceEndpointQueue(device: MTRBaseDevice, endpoint: number, queue: interop.Pointer | interop.Reference<any>): this;

	notifyUpdateAppliedWithParamsCompletionHandler(params: MTROtaSoftwareUpdateProviderClusterNotifyUpdateAppliedParams, completionHandler: (p1: NSError) => void): void;

	queryImageWithParamsCompletionHandler(params: MTROtaSoftwareUpdateProviderClusterQueryImageParams, completionHandler: (p1: MTROtaSoftwareUpdateProviderClusterQueryImageResponseParams, p2: NSError) => void): void;

	readAttributeAcceptedCommandListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAttributeListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeClusterRevisionWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeFeatureMapWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeGeneratedCommandListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAcceptedCommandListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAttributeListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeClusterRevisionWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeFeatureMapWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeGeneratedCommandListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;
}

declare class MTRBaseClusterOtaSoftwareUpdateRequestor extends MTRBaseClusterOTASoftwareUpdateRequestor {

	static alloc(): MTRBaseClusterOtaSoftwareUpdateRequestor; // inherited from NSObject

	static new(): MTRBaseClusterOtaSoftwareUpdateRequestor; // inherited from NSObject

	static readAttributeAcceptedCommandListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAttributeListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeClusterRevisionWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeDefaultOtaProvidersWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeFeatureMapWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeGeneratedCommandListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeUpdatePossibleWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeUpdateStateProgressWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeUpdateStateWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	constructor(o: { device: MTRBaseDevice; endpoint: number; queue: interop.Pointer | interop.Reference<any>; });

	announceOtaProviderWithParamsCompletionHandler(params: MTROtaSoftwareUpdateRequestorClusterAnnounceOtaProviderParams, completionHandler: (p1: NSError) => void): void;

	initWithDeviceEndpointQueue(device: MTRBaseDevice, endpoint: number, queue: interop.Pointer | interop.Reference<any>): this;

	readAttributeAcceptedCommandListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAttributeListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeClusterRevisionWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeDefaultOtaProvidersWithParamsCompletionHandler(params: MTRReadParams, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeFeatureMapWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeGeneratedCommandListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeUpdatePossibleWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeUpdateStateProgressWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeUpdateStateWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeAcceptedCommandListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAttributeListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeClusterRevisionWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeDefaultOtaProvidersWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeFeatureMapWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeGeneratedCommandListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeUpdatePossibleWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeUpdateStateProgressWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeUpdateStateWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	writeAttributeDefaultOtaProvidersWithValueCompletionHandler(value: NSArray<any> | any[], completionHandler: (p1: NSError) => void): void;

	writeAttributeDefaultOtaProvidersWithValueParamsCompletionHandler(value: NSArray<any> | any[], params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;
}

declare class MTRBaseClusterPowerSource extends MTRGenericBaseCluster {

	static alloc(): MTRBaseClusterPowerSource; // inherited from NSObject

	static new(): MTRBaseClusterPowerSource; // inherited from NSObject

	static readAttributeAcceptedCommandListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAcceptedCommandListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeActiveBatChargeFaultsWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeActiveBatChargeFaultsWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeActiveBatFaultsWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeActiveBatFaultsWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeActiveWiredFaultsWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeActiveWiredFaultsWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAttributeListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAttributeListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeBatANSIDesignationWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: string, p2: NSError) => void): void;

	static readAttributeBatANSIDesignationWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: string, p2: NSError) => void): void;

	static readAttributeBatApprovedChemistryWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeBatApprovedChemistryWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeBatCapacityWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeBatCapacityWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeBatChargeLevelWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeBatChargeLevelWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeBatChargeStateWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeBatChargeStateWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeBatChargingCurrentWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeBatChargingCurrentWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeBatCommonDesignationWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeBatCommonDesignationWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeBatFunctionalWhileChargingWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeBatFunctionalWhileChargingWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeBatIECDesignationWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: string, p2: NSError) => void): void;

	static readAttributeBatIECDesignationWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: string, p2: NSError) => void): void;

	static readAttributeBatPercentRemainingWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeBatPercentRemainingWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeBatPresentWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeBatPresentWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeBatQuantityWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeBatQuantityWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeBatReplaceabilityWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeBatReplaceabilityWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeBatReplacementDescriptionWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: string, p2: NSError) => void): void;

	static readAttributeBatReplacementDescriptionWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: string, p2: NSError) => void): void;

	static readAttributeBatReplacementNeededWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeBatReplacementNeededWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeBatTimeRemainingWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeBatTimeRemainingWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeBatTimeToFullChargeWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeBatTimeToFullChargeWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeBatVoltageWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeBatVoltageWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeClusterRevisionWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeClusterRevisionWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeDescriptionWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: string, p2: NSError) => void): void;

	static readAttributeDescriptionWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: string, p2: NSError) => void): void;

	static readAttributeEndpointListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeFeatureMapWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeFeatureMapWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeGeneratedCommandListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeGeneratedCommandListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeOrderWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeOrderWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeStatusWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeStatusWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeWiredAssessedCurrentWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeWiredAssessedCurrentWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeWiredAssessedInputFrequencyWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeWiredAssessedInputFrequencyWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeWiredAssessedInputVoltageWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeWiredAssessedInputVoltageWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeWiredCurrentTypeWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeWiredCurrentTypeWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeWiredMaximumCurrentWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeWiredMaximumCurrentWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeWiredNominalVoltageWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeWiredNominalVoltageWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeWiredPresentWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeWiredPresentWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	constructor(o: { device: MTRBaseDevice; endpointID: number; queue: interop.Pointer | interop.Reference<any>; });

	constructor(o: { device: MTRBaseDevice; endpoint: number; queue: interop.Pointer | interop.Reference<any>; });

	initWithDeviceEndpointIDQueue(device: MTRBaseDevice, endpointID: number, queue: interop.Pointer | interop.Reference<any>): this;

	initWithDeviceEndpointQueue(device: MTRBaseDevice, endpoint: number, queue: interop.Pointer | interop.Reference<any>): this;

	readAttributeAcceptedCommandListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAcceptedCommandListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeActiveBatChargeFaultsWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeActiveBatChargeFaultsWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeActiveBatFaultsWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeActiveBatFaultsWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeActiveWiredFaultsWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeActiveWiredFaultsWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAttributeListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAttributeListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeBatANSIDesignationWithCompletion(completion: (p1: string, p2: NSError) => void): void;

	readAttributeBatANSIDesignationWithCompletionHandler(completionHandler: (p1: string, p2: NSError) => void): void;

	readAttributeBatApprovedChemistryWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeBatApprovedChemistryWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeBatCapacityWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeBatCapacityWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeBatChargeLevelWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeBatChargeLevelWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeBatChargeStateWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeBatChargeStateWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeBatChargingCurrentWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeBatChargingCurrentWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeBatCommonDesignationWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeBatCommonDesignationWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeBatFunctionalWhileChargingWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeBatFunctionalWhileChargingWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeBatIECDesignationWithCompletion(completion: (p1: string, p2: NSError) => void): void;

	readAttributeBatIECDesignationWithCompletionHandler(completionHandler: (p1: string, p2: NSError) => void): void;

	readAttributeBatPercentRemainingWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeBatPercentRemainingWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeBatPresentWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeBatPresentWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeBatQuantityWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeBatQuantityWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeBatReplaceabilityWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeBatReplaceabilityWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeBatReplacementDescriptionWithCompletion(completion: (p1: string, p2: NSError) => void): void;

	readAttributeBatReplacementDescriptionWithCompletionHandler(completionHandler: (p1: string, p2: NSError) => void): void;

	readAttributeBatReplacementNeededWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeBatReplacementNeededWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeBatTimeRemainingWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeBatTimeRemainingWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeBatTimeToFullChargeWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeBatTimeToFullChargeWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeBatVoltageWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeBatVoltageWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeClusterRevisionWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeClusterRevisionWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeDescriptionWithCompletion(completion: (p1: string, p2: NSError) => void): void;

	readAttributeDescriptionWithCompletionHandler(completionHandler: (p1: string, p2: NSError) => void): void;

	readAttributeEndpointListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeFeatureMapWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeFeatureMapWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeGeneratedCommandListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeGeneratedCommandListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeOrderWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeOrderWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeStatusWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeStatusWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeWiredAssessedCurrentWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeWiredAssessedCurrentWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeWiredAssessedInputFrequencyWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeWiredAssessedInputFrequencyWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeWiredAssessedInputVoltageWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeWiredAssessedInputVoltageWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeWiredCurrentTypeWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeWiredCurrentTypeWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeWiredMaximumCurrentWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeWiredMaximumCurrentWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeWiredNominalVoltageWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeWiredNominalVoltageWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeWiredPresentWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeWiredPresentWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeAcceptedCommandListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAcceptedCommandListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeActiveBatChargeFaultsWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeActiveBatChargeFaultsWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeActiveBatFaultsWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeActiveBatFaultsWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeActiveWiredFaultsWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeActiveWiredFaultsWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAttributeListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAttributeListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeBatANSIDesignationWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: string, p2: NSError) => void): void;

	subscribeAttributeBatANSIDesignationWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: string, p2: NSError) => void): void;

	subscribeAttributeBatApprovedChemistryWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeBatApprovedChemistryWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeBatCapacityWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeBatCapacityWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeBatChargeLevelWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeBatChargeLevelWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeBatChargeStateWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeBatChargeStateWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeBatChargingCurrentWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeBatChargingCurrentWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeBatCommonDesignationWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeBatCommonDesignationWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeBatFunctionalWhileChargingWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeBatFunctionalWhileChargingWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeBatIECDesignationWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: string, p2: NSError) => void): void;

	subscribeAttributeBatIECDesignationWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: string, p2: NSError) => void): void;

	subscribeAttributeBatPercentRemainingWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeBatPercentRemainingWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeBatPresentWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeBatPresentWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeBatQuantityWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeBatQuantityWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeBatReplaceabilityWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeBatReplaceabilityWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeBatReplacementDescriptionWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: string, p2: NSError) => void): void;

	subscribeAttributeBatReplacementDescriptionWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: string, p2: NSError) => void): void;

	subscribeAttributeBatReplacementNeededWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeBatReplacementNeededWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeBatTimeRemainingWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeBatTimeRemainingWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeBatTimeToFullChargeWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeBatTimeToFullChargeWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeBatVoltageWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeBatVoltageWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeClusterRevisionWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeClusterRevisionWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeDescriptionWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: string, p2: NSError) => void): void;

	subscribeAttributeDescriptionWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: string, p2: NSError) => void): void;

	subscribeAttributeEndpointListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeFeatureMapWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeFeatureMapWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeGeneratedCommandListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeGeneratedCommandListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeOrderWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeOrderWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeStatusWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeStatusWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeWiredAssessedCurrentWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeWiredAssessedCurrentWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeWiredAssessedInputFrequencyWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeWiredAssessedInputFrequencyWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeWiredAssessedInputVoltageWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeWiredAssessedInputVoltageWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeWiredCurrentTypeWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeWiredCurrentTypeWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeWiredMaximumCurrentWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeWiredMaximumCurrentWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeWiredNominalVoltageWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeWiredNominalVoltageWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeWiredPresentWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeWiredPresentWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;
}

declare class MTRBaseClusterPowerSourceConfiguration extends MTRGenericBaseCluster {

	static alloc(): MTRBaseClusterPowerSourceConfiguration; // inherited from NSObject

	static new(): MTRBaseClusterPowerSourceConfiguration; // inherited from NSObject

	static readAttributeAcceptedCommandListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAcceptedCommandListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAttributeListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAttributeListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeClusterRevisionWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeClusterRevisionWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeFeatureMapWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeFeatureMapWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeGeneratedCommandListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeGeneratedCommandListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeSourcesWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeSourcesWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	constructor(o: { device: MTRBaseDevice; endpointID: number; queue: interop.Pointer | interop.Reference<any>; });

	constructor(o: { device: MTRBaseDevice; endpoint: number; queue: interop.Pointer | interop.Reference<any>; });

	initWithDeviceEndpointIDQueue(device: MTRBaseDevice, endpointID: number, queue: interop.Pointer | interop.Reference<any>): this;

	initWithDeviceEndpointQueue(device: MTRBaseDevice, endpoint: number, queue: interop.Pointer | interop.Reference<any>): this;

	readAttributeAcceptedCommandListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAcceptedCommandListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAttributeListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAttributeListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeClusterRevisionWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeClusterRevisionWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeFeatureMapWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeFeatureMapWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeGeneratedCommandListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeGeneratedCommandListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeSourcesWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeSourcesWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAcceptedCommandListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAcceptedCommandListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAttributeListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAttributeListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeClusterRevisionWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeClusterRevisionWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeFeatureMapWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeFeatureMapWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeGeneratedCommandListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeGeneratedCommandListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeSourcesWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeSourcesWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;
}

declare class MTRBaseClusterPressureMeasurement extends MTRGenericBaseCluster {

	static alloc(): MTRBaseClusterPressureMeasurement; // inherited from NSObject

	static new(): MTRBaseClusterPressureMeasurement; // inherited from NSObject

	static readAttributeAcceptedCommandListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAcceptedCommandListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAttributeListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAttributeListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeClusterRevisionWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeClusterRevisionWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeFeatureMapWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeFeatureMapWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeGeneratedCommandListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeGeneratedCommandListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeMaxMeasuredValueWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeMaxMeasuredValueWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeMaxScaledValueWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeMaxScaledValueWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeMeasuredValueWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeMeasuredValueWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeMinMeasuredValueWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeMinMeasuredValueWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeMinScaledValueWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeMinScaledValueWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeScaleWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeScaleWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeScaledToleranceWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeScaledToleranceWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeScaledValueWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeScaledValueWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeToleranceWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeToleranceWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	constructor(o: { device: MTRBaseDevice; endpointID: number; queue: interop.Pointer | interop.Reference<any>; });

	constructor(o: { device: MTRBaseDevice; endpoint: number; queue: interop.Pointer | interop.Reference<any>; });

	initWithDeviceEndpointIDQueue(device: MTRBaseDevice, endpointID: number, queue: interop.Pointer | interop.Reference<any>): this;

	initWithDeviceEndpointQueue(device: MTRBaseDevice, endpoint: number, queue: interop.Pointer | interop.Reference<any>): this;

	readAttributeAcceptedCommandListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAcceptedCommandListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAttributeListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAttributeListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeClusterRevisionWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeClusterRevisionWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeFeatureMapWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeFeatureMapWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeGeneratedCommandListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeGeneratedCommandListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeMaxMeasuredValueWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeMaxMeasuredValueWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeMaxScaledValueWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeMaxScaledValueWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeMeasuredValueWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeMeasuredValueWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeMinMeasuredValueWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeMinMeasuredValueWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeMinScaledValueWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeMinScaledValueWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeScaleWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeScaleWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeScaledToleranceWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeScaledToleranceWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeScaledValueWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeScaledValueWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeToleranceWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeToleranceWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeAcceptedCommandListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAcceptedCommandListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAttributeListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAttributeListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeClusterRevisionWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeClusterRevisionWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeFeatureMapWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeFeatureMapWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeGeneratedCommandListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeGeneratedCommandListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeMaxMeasuredValueWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeMaxMeasuredValueWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeMaxScaledValueWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeMaxScaledValueWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeMeasuredValueWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeMeasuredValueWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeMinMeasuredValueWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeMinMeasuredValueWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeMinScaledValueWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeMinScaledValueWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeScaleWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeScaleWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeScaledToleranceWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeScaledToleranceWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeScaledValueWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeScaledValueWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeToleranceWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeToleranceWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;
}

declare class MTRBaseClusterPumpConfigurationAndControl extends MTRGenericBaseCluster {

	static alloc(): MTRBaseClusterPumpConfigurationAndControl; // inherited from NSObject

	static new(): MTRBaseClusterPumpConfigurationAndControl; // inherited from NSObject

	static readAttributeAcceptedCommandListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAcceptedCommandListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAttributeListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAttributeListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeCapacityWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeCapacityWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeClusterRevisionWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeClusterRevisionWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeControlModeWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeControlModeWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeEffectiveControlModeWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeEffectiveControlModeWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeEffectiveOperationModeWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeEffectiveOperationModeWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeFeatureMapWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeFeatureMapWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeGeneratedCommandListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeGeneratedCommandListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeLifetimeEnergyConsumedWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeLifetimeEnergyConsumedWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeLifetimeRunningHoursWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeLifetimeRunningHoursWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeMaxCompPressureWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeMaxCompPressureWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeMaxConstFlowWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeMaxConstFlowWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeMaxConstPressureWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeMaxConstPressureWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeMaxConstSpeedWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeMaxConstSpeedWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeMaxConstTempWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeMaxConstTempWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeMaxFlowWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeMaxFlowWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeMaxPressureWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeMaxPressureWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeMaxSpeedWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeMaxSpeedWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeMinCompPressureWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeMinCompPressureWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeMinConstFlowWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeMinConstFlowWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeMinConstPressureWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeMinConstPressureWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeMinConstSpeedWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeMinConstSpeedWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeMinConstTempWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeMinConstTempWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeOperationModeWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeOperationModeWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributePowerWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributePowerWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributePumpStatusWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributePumpStatusWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeSpeedWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeSpeedWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	constructor(o: { device: MTRBaseDevice; endpointID: number; queue: interop.Pointer | interop.Reference<any>; });

	constructor(o: { device: MTRBaseDevice; endpoint: number; queue: interop.Pointer | interop.Reference<any>; });

	initWithDeviceEndpointIDQueue(device: MTRBaseDevice, endpointID: number, queue: interop.Pointer | interop.Reference<any>): this;

	initWithDeviceEndpointQueue(device: MTRBaseDevice, endpoint: number, queue: interop.Pointer | interop.Reference<any>): this;

	readAttributeAcceptedCommandListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAcceptedCommandListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAttributeListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAttributeListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeCapacityWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeCapacityWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeClusterRevisionWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeClusterRevisionWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeControlModeWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeControlModeWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeEffectiveControlModeWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeEffectiveControlModeWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeEffectiveOperationModeWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeEffectiveOperationModeWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeFeatureMapWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeFeatureMapWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeGeneratedCommandListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeGeneratedCommandListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeLifetimeEnergyConsumedWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeLifetimeEnergyConsumedWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeLifetimeRunningHoursWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeLifetimeRunningHoursWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeMaxCompPressureWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeMaxCompPressureWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeMaxConstFlowWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeMaxConstFlowWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeMaxConstPressureWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeMaxConstPressureWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeMaxConstSpeedWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeMaxConstSpeedWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeMaxConstTempWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeMaxConstTempWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeMaxFlowWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeMaxFlowWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeMaxPressureWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeMaxPressureWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeMaxSpeedWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeMaxSpeedWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeMinCompPressureWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeMinCompPressureWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeMinConstFlowWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeMinConstFlowWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeMinConstPressureWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeMinConstPressureWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeMinConstSpeedWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeMinConstSpeedWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeMinConstTempWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeMinConstTempWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeOperationModeWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeOperationModeWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributePowerWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributePowerWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributePumpStatusWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributePumpStatusWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeSpeedWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeSpeedWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeAcceptedCommandListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAcceptedCommandListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAttributeListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAttributeListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeCapacityWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeCapacityWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeClusterRevisionWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeClusterRevisionWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeControlModeWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeControlModeWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeEffectiveControlModeWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeEffectiveControlModeWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeEffectiveOperationModeWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeEffectiveOperationModeWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeFeatureMapWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeFeatureMapWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeGeneratedCommandListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeGeneratedCommandListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeLifetimeEnergyConsumedWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeLifetimeEnergyConsumedWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeLifetimeRunningHoursWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeLifetimeRunningHoursWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeMaxCompPressureWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeMaxCompPressureWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeMaxConstFlowWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeMaxConstFlowWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeMaxConstPressureWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeMaxConstPressureWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeMaxConstSpeedWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeMaxConstSpeedWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeMaxConstTempWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeMaxConstTempWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeMaxFlowWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeMaxFlowWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeMaxPressureWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeMaxPressureWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeMaxSpeedWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeMaxSpeedWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeMinCompPressureWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeMinCompPressureWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeMinConstFlowWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeMinConstFlowWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeMinConstPressureWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeMinConstPressureWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeMinConstSpeedWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeMinConstSpeedWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeMinConstTempWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeMinConstTempWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeOperationModeWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeOperationModeWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributePowerWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributePowerWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributePumpStatusWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributePumpStatusWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeSpeedWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeSpeedWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	writeAttributeControlModeWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeControlModeWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeControlModeWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeControlModeWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeLifetimeEnergyConsumedWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeLifetimeEnergyConsumedWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeLifetimeEnergyConsumedWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeLifetimeEnergyConsumedWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeLifetimeRunningHoursWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeLifetimeRunningHoursWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeLifetimeRunningHoursWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeLifetimeRunningHoursWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeOperationModeWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeOperationModeWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeOperationModeWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeOperationModeWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;
}

declare class MTRBaseClusterRVCCleanMode extends MTRGenericBaseCluster {

	static alloc(): MTRBaseClusterRVCCleanMode; // inherited from NSObject

	static new(): MTRBaseClusterRVCCleanMode; // inherited from NSObject

	static readAttributeAcceptedCommandListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAttributeListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeClusterRevisionWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeCurrentModeWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeFeatureMapWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeGeneratedCommandListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeSupportedModesWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	constructor(o: { device: MTRBaseDevice; endpointID: number; queue: interop.Pointer | interop.Reference<any>; });

	changeToModeWithParamsCompletion(params: MTRRVCCleanModeClusterChangeToModeParams, completion: (p1: MTRRVCCleanModeClusterChangeToModeResponseParams, p2: NSError) => void): void;

	initWithDeviceEndpointIDQueue(device: MTRBaseDevice, endpointID: number, queue: interop.Pointer | interop.Reference<any>): this;

	readAttributeAcceptedCommandListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAttributeListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeClusterRevisionWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeCurrentModeWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeFeatureMapWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeGeneratedCommandListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeSupportedModesWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAcceptedCommandListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAttributeListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeClusterRevisionWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeCurrentModeWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeFeatureMapWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeGeneratedCommandListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeSupportedModesWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;
}

declare class MTRBaseClusterRVCOperationalState extends MTRGenericBaseCluster {

	static alloc(): MTRBaseClusterRVCOperationalState; // inherited from NSObject

	static new(): MTRBaseClusterRVCOperationalState; // inherited from NSObject

	static readAttributeAcceptedCommandListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAttributeListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeClusterRevisionWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeCountdownTimeWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeCurrentPhaseWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeFeatureMapWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeGeneratedCommandListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeOperationalErrorWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: MTRRVCOperationalStateClusterErrorStateStruct, p2: NSError) => void): void;

	static readAttributeOperationalStateListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeOperationalStateWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributePhaseListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	constructor(o: { device: MTRBaseDevice; endpointID: number; queue: interop.Pointer | interop.Reference<any>; });

	initWithDeviceEndpointIDQueue(device: MTRBaseDevice, endpointID: number, queue: interop.Pointer | interop.Reference<any>): this;

	pauseWithCompletion(completion: (p1: MTRRVCOperationalStateClusterOperationalCommandResponseParams, p2: NSError) => void): void;

	pauseWithParamsCompletion(params: MTRRVCOperationalStateClusterPauseParams, completion: (p1: MTRRVCOperationalStateClusterOperationalCommandResponseParams, p2: NSError) => void): void;

	readAttributeAcceptedCommandListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAttributeListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeClusterRevisionWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeCountdownTimeWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeCurrentPhaseWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeFeatureMapWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeGeneratedCommandListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeOperationalErrorWithCompletion(completion: (p1: MTRRVCOperationalStateClusterErrorStateStruct, p2: NSError) => void): void;

	readAttributeOperationalStateListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeOperationalStateWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributePhaseListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	resumeWithCompletion(completion: (p1: MTRRVCOperationalStateClusterOperationalCommandResponseParams, p2: NSError) => void): void;

	resumeWithParamsCompletion(params: MTRRVCOperationalStateClusterResumeParams, completion: (p1: MTRRVCOperationalStateClusterOperationalCommandResponseParams, p2: NSError) => void): void;

	subscribeAttributeAcceptedCommandListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAttributeListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeClusterRevisionWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeCountdownTimeWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeCurrentPhaseWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeFeatureMapWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeGeneratedCommandListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeOperationalErrorWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: MTRRVCOperationalStateClusterErrorStateStruct, p2: NSError) => void): void;

	subscribeAttributeOperationalStateListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeOperationalStateWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributePhaseListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;
}

declare class MTRBaseClusterRVCRunMode extends MTRGenericBaseCluster {

	static alloc(): MTRBaseClusterRVCRunMode; // inherited from NSObject

	static new(): MTRBaseClusterRVCRunMode; // inherited from NSObject

	static readAttributeAcceptedCommandListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAttributeListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeClusterRevisionWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeCurrentModeWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeFeatureMapWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeGeneratedCommandListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeSupportedModesWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	constructor(o: { device: MTRBaseDevice; endpointID: number; queue: interop.Pointer | interop.Reference<any>; });

	changeToModeWithParamsCompletion(params: MTRRVCRunModeClusterChangeToModeParams, completion: (p1: MTRRVCRunModeClusterChangeToModeResponseParams, p2: NSError) => void): void;

	initWithDeviceEndpointIDQueue(device: MTRBaseDevice, endpointID: number, queue: interop.Pointer | interop.Reference<any>): this;

	readAttributeAcceptedCommandListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAttributeListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeClusterRevisionWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeCurrentModeWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeFeatureMapWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeGeneratedCommandListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeSupportedModesWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAcceptedCommandListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAttributeListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeClusterRevisionWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeCurrentModeWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeFeatureMapWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeGeneratedCommandListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeSupportedModesWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;
}

declare class MTRBaseClusterRelativeHumidityMeasurement extends MTRGenericBaseCluster {

	static alloc(): MTRBaseClusterRelativeHumidityMeasurement; // inherited from NSObject

	static new(): MTRBaseClusterRelativeHumidityMeasurement; // inherited from NSObject

	static readAttributeAcceptedCommandListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAcceptedCommandListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAttributeListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAttributeListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeClusterRevisionWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeClusterRevisionWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeFeatureMapWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeFeatureMapWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeGeneratedCommandListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeGeneratedCommandListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeMaxMeasuredValueWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeMaxMeasuredValueWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeMeasuredValueWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeMeasuredValueWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeMinMeasuredValueWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeMinMeasuredValueWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeToleranceWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeToleranceWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	constructor(o: { device: MTRBaseDevice; endpointID: number; queue: interop.Pointer | interop.Reference<any>; });

	constructor(o: { device: MTRBaseDevice; endpoint: number; queue: interop.Pointer | interop.Reference<any>; });

	initWithDeviceEndpointIDQueue(device: MTRBaseDevice, endpointID: number, queue: interop.Pointer | interop.Reference<any>): this;

	initWithDeviceEndpointQueue(device: MTRBaseDevice, endpoint: number, queue: interop.Pointer | interop.Reference<any>): this;

	readAttributeAcceptedCommandListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAcceptedCommandListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAttributeListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAttributeListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeClusterRevisionWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeClusterRevisionWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeFeatureMapWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeFeatureMapWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeGeneratedCommandListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeGeneratedCommandListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeMaxMeasuredValueWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeMaxMeasuredValueWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeMeasuredValueWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeMeasuredValueWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeMinMeasuredValueWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeMinMeasuredValueWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeToleranceWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeToleranceWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeAcceptedCommandListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAcceptedCommandListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAttributeListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAttributeListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeClusterRevisionWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeClusterRevisionWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeFeatureMapWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeFeatureMapWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeGeneratedCommandListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeGeneratedCommandListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeMaxMeasuredValueWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeMaxMeasuredValueWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeMeasuredValueWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeMeasuredValueWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeMinMeasuredValueWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeMinMeasuredValueWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeToleranceWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeToleranceWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;
}

declare class MTRBaseClusterScenes extends MTRGenericBaseCluster {

	static alloc(): MTRBaseClusterScenes; // inherited from NSObject

	static new(): MTRBaseClusterScenes; // inherited from NSObject

	static readAttributeAcceptedCommandListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAcceptedCommandListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAttributeListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAttributeListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeClusterRevisionWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeClusterRevisionWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeCurrentGroupWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeCurrentGroupWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeCurrentSceneWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeCurrentSceneWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeFeatureMapWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeFeatureMapWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeGeneratedCommandListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeGeneratedCommandListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeLastConfiguredByWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeLastConfiguredByWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeNameSupportWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeNameSupportWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeSceneCountWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeSceneCountWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeSceneValidWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeSceneValidWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	constructor(o: { device: MTRBaseDevice; endpointID: number; queue: interop.Pointer | interop.Reference<any>; });

	constructor(o: { device: MTRBaseDevice; endpoint: number; queue: interop.Pointer | interop.Reference<any>; });

	addSceneWithParamsCompletion(params: MTRScenesClusterAddSceneParams, completion: (p1: MTRScenesClusterAddSceneResponseParams, p2: NSError) => void): void;

	addSceneWithParamsCompletionHandler(params: MTRScenesClusterAddSceneParams, completionHandler: (p1: MTRScenesClusterAddSceneResponseParams, p2: NSError) => void): void;

	copySceneWithParamsCompletion(params: MTRScenesClusterCopySceneParams, completion: (p1: MTRScenesClusterCopySceneResponseParams, p2: NSError) => void): void;

	copySceneWithParamsCompletionHandler(params: MTRScenesClusterCopySceneParams, completionHandler: (p1: MTRScenesClusterCopySceneResponseParams, p2: NSError) => void): void;

	enhancedAddSceneWithParamsCompletion(params: MTRScenesClusterEnhancedAddSceneParams, completion: (p1: MTRScenesClusterEnhancedAddSceneResponseParams, p2: NSError) => void): void;

	enhancedAddSceneWithParamsCompletionHandler(params: MTRScenesClusterEnhancedAddSceneParams, completionHandler: (p1: MTRScenesClusterEnhancedAddSceneResponseParams, p2: NSError) => void): void;

	enhancedViewSceneWithParamsCompletion(params: MTRScenesClusterEnhancedViewSceneParams, completion: (p1: MTRScenesClusterEnhancedViewSceneResponseParams, p2: NSError) => void): void;

	enhancedViewSceneWithParamsCompletionHandler(params: MTRScenesClusterEnhancedViewSceneParams, completionHandler: (p1: MTRScenesClusterEnhancedViewSceneResponseParams, p2: NSError) => void): void;

	getSceneMembershipWithParamsCompletion(params: MTRScenesClusterGetSceneMembershipParams, completion: (p1: MTRScenesClusterGetSceneMembershipResponseParams, p2: NSError) => void): void;

	getSceneMembershipWithParamsCompletionHandler(params: MTRScenesClusterGetSceneMembershipParams, completionHandler: (p1: MTRScenesClusterGetSceneMembershipResponseParams, p2: NSError) => void): void;

	initWithDeviceEndpointIDQueue(device: MTRBaseDevice, endpointID: number, queue: interop.Pointer | interop.Reference<any>): this;

	initWithDeviceEndpointQueue(device: MTRBaseDevice, endpoint: number, queue: interop.Pointer | interop.Reference<any>): this;

	readAttributeAcceptedCommandListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAcceptedCommandListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAttributeListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAttributeListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeClusterRevisionWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeClusterRevisionWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeCurrentGroupWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeCurrentGroupWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeCurrentSceneWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeCurrentSceneWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeFeatureMapWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeFeatureMapWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeGeneratedCommandListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeGeneratedCommandListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeLastConfiguredByWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeLastConfiguredByWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeNameSupportWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeNameSupportWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeSceneCountWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeSceneCountWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeSceneValidWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeSceneValidWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	recallSceneWithParamsCompletion(params: MTRScenesClusterRecallSceneParams, completion: (p1: NSError) => void): void;

	recallSceneWithParamsCompletionHandler(params: MTRScenesClusterRecallSceneParams, completionHandler: (p1: NSError) => void): void;

	removeAllScenesWithParamsCompletion(params: MTRScenesClusterRemoveAllScenesParams, completion: (p1: MTRScenesClusterRemoveAllScenesResponseParams, p2: NSError) => void): void;

	removeAllScenesWithParamsCompletionHandler(params: MTRScenesClusterRemoveAllScenesParams, completionHandler: (p1: MTRScenesClusterRemoveAllScenesResponseParams, p2: NSError) => void): void;

	removeSceneWithParamsCompletion(params: MTRScenesClusterRemoveSceneParams, completion: (p1: MTRScenesClusterRemoveSceneResponseParams, p2: NSError) => void): void;

	removeSceneWithParamsCompletionHandler(params: MTRScenesClusterRemoveSceneParams, completionHandler: (p1: MTRScenesClusterRemoveSceneResponseParams, p2: NSError) => void): void;

	storeSceneWithParamsCompletion(params: MTRScenesClusterStoreSceneParams, completion: (p1: MTRScenesClusterStoreSceneResponseParams, p2: NSError) => void): void;

	storeSceneWithParamsCompletionHandler(params: MTRScenesClusterStoreSceneParams, completionHandler: (p1: MTRScenesClusterStoreSceneResponseParams, p2: NSError) => void): void;

	subscribeAttributeAcceptedCommandListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAcceptedCommandListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAttributeListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAttributeListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeClusterRevisionWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeClusterRevisionWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeCurrentGroupWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeCurrentGroupWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeCurrentSceneWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeCurrentSceneWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeFeatureMapWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeFeatureMapWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeGeneratedCommandListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeGeneratedCommandListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeLastConfiguredByWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeLastConfiguredByWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeNameSupportWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeNameSupportWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeSceneCountWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeSceneCountWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeSceneValidWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeSceneValidWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	viewSceneWithParamsCompletion(params: MTRScenesClusterViewSceneParams, completion: (p1: MTRScenesClusterViewSceneResponseParams, p2: NSError) => void): void;

	viewSceneWithParamsCompletionHandler(params: MTRScenesClusterViewSceneParams, completionHandler: (p1: MTRScenesClusterViewSceneResponseParams, p2: NSError) => void): void;
}

declare class MTRBaseClusterSoftwareDiagnostics extends MTRGenericBaseCluster {

	static alloc(): MTRBaseClusterSoftwareDiagnostics; // inherited from NSObject

	static new(): MTRBaseClusterSoftwareDiagnostics; // inherited from NSObject

	static readAttributeAcceptedCommandListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAcceptedCommandListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAttributeListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAttributeListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeClusterRevisionWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeClusterRevisionWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeCurrentHeapFreeWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeCurrentHeapFreeWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeCurrentHeapHighWatermarkWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeCurrentHeapHighWatermarkWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeCurrentHeapUsedWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeCurrentHeapUsedWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeFeatureMapWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeFeatureMapWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeGeneratedCommandListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeGeneratedCommandListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeThreadMetricsWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeThreadMetricsWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	constructor(o: { device: MTRBaseDevice; endpointID: number; queue: interop.Pointer | interop.Reference<any>; });

	constructor(o: { device: MTRBaseDevice; endpoint: number; queue: interop.Pointer | interop.Reference<any>; });

	initWithDeviceEndpointIDQueue(device: MTRBaseDevice, endpointID: number, queue: interop.Pointer | interop.Reference<any>): this;

	initWithDeviceEndpointQueue(device: MTRBaseDevice, endpoint: number, queue: interop.Pointer | interop.Reference<any>): this;

	readAttributeAcceptedCommandListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAcceptedCommandListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAttributeListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAttributeListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeClusterRevisionWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeClusterRevisionWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeCurrentHeapFreeWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeCurrentHeapFreeWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeCurrentHeapHighWatermarkWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeCurrentHeapHighWatermarkWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeCurrentHeapUsedWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeCurrentHeapUsedWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeFeatureMapWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeFeatureMapWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeGeneratedCommandListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeGeneratedCommandListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeThreadMetricsWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeThreadMetricsWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	resetWatermarksWithCompletion(completion: (p1: NSError) => void): void;

	resetWatermarksWithCompletionHandler(completionHandler: (p1: NSError) => void): void;

	resetWatermarksWithParamsCompletion(params: MTRSoftwareDiagnosticsClusterResetWatermarksParams, completion: (p1: NSError) => void): void;

	resetWatermarksWithParamsCompletionHandler(params: MTRSoftwareDiagnosticsClusterResetWatermarksParams, completionHandler: (p1: NSError) => void): void;

	subscribeAttributeAcceptedCommandListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAcceptedCommandListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAttributeListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAttributeListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeClusterRevisionWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeClusterRevisionWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeCurrentHeapFreeWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeCurrentHeapFreeWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeCurrentHeapHighWatermarkWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeCurrentHeapHighWatermarkWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeCurrentHeapUsedWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeCurrentHeapUsedWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeFeatureMapWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeFeatureMapWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeGeneratedCommandListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeGeneratedCommandListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeThreadMetricsWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeThreadMetricsWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;
}

declare class MTRBaseClusterSwitch extends MTRGenericBaseCluster {

	static alloc(): MTRBaseClusterSwitch; // inherited from NSObject

	static new(): MTRBaseClusterSwitch; // inherited from NSObject

	static readAttributeAcceptedCommandListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAcceptedCommandListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAttributeListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAttributeListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeClusterRevisionWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeClusterRevisionWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeCurrentPositionWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeCurrentPositionWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeFeatureMapWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeFeatureMapWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeGeneratedCommandListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeGeneratedCommandListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeMultiPressMaxWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeMultiPressMaxWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeNumberOfPositionsWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeNumberOfPositionsWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	constructor(o: { device: MTRBaseDevice; endpointID: number; queue: interop.Pointer | interop.Reference<any>; });

	constructor(o: { device: MTRBaseDevice; endpoint: number; queue: interop.Pointer | interop.Reference<any>; });

	initWithDeviceEndpointIDQueue(device: MTRBaseDevice, endpointID: number, queue: interop.Pointer | interop.Reference<any>): this;

	initWithDeviceEndpointQueue(device: MTRBaseDevice, endpoint: number, queue: interop.Pointer | interop.Reference<any>): this;

	readAttributeAcceptedCommandListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAcceptedCommandListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAttributeListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAttributeListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeClusterRevisionWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeClusterRevisionWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeCurrentPositionWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeCurrentPositionWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeFeatureMapWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeFeatureMapWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeGeneratedCommandListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeGeneratedCommandListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeMultiPressMaxWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeMultiPressMaxWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeNumberOfPositionsWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeNumberOfPositionsWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeAcceptedCommandListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAcceptedCommandListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAttributeListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAttributeListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeClusterRevisionWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeClusterRevisionWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeCurrentPositionWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeCurrentPositionWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeFeatureMapWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeFeatureMapWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeGeneratedCommandListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeGeneratedCommandListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeMultiPressMaxWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeMultiPressMaxWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeNumberOfPositionsWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeNumberOfPositionsWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;
}

declare class MTRBaseClusterTargetNavigator extends MTRGenericBaseCluster {

	static alloc(): MTRBaseClusterTargetNavigator; // inherited from NSObject

	static new(): MTRBaseClusterTargetNavigator; // inherited from NSObject

	static readAttributeAcceptedCommandListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAcceptedCommandListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAttributeListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAttributeListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeClusterRevisionWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeClusterRevisionWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeCurrentTargetWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeCurrentTargetWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeFeatureMapWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeFeatureMapWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeGeneratedCommandListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeGeneratedCommandListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeTargetListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeTargetListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	constructor(o: { device: MTRBaseDevice; endpointID: number; queue: interop.Pointer | interop.Reference<any>; });

	constructor(o: { device: MTRBaseDevice; endpoint: number; queue: interop.Pointer | interop.Reference<any>; });

	initWithDeviceEndpointIDQueue(device: MTRBaseDevice, endpointID: number, queue: interop.Pointer | interop.Reference<any>): this;

	initWithDeviceEndpointQueue(device: MTRBaseDevice, endpoint: number, queue: interop.Pointer | interop.Reference<any>): this;

	navigateTargetWithParamsCompletion(params: MTRTargetNavigatorClusterNavigateTargetParams, completion: (p1: MTRTargetNavigatorClusterNavigateTargetResponseParams, p2: NSError) => void): void;

	navigateTargetWithParamsCompletionHandler(params: MTRTargetNavigatorClusterNavigateTargetParams, completionHandler: (p1: MTRTargetNavigatorClusterNavigateTargetResponseParams, p2: NSError) => void): void;

	readAttributeAcceptedCommandListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAcceptedCommandListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAttributeListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAttributeListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeClusterRevisionWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeClusterRevisionWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeCurrentTargetWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeCurrentTargetWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeFeatureMapWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeFeatureMapWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeGeneratedCommandListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeGeneratedCommandListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeTargetListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeTargetListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAcceptedCommandListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAcceptedCommandListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAttributeListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAttributeListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeClusterRevisionWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeClusterRevisionWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeCurrentTargetWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeCurrentTargetWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeFeatureMapWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeFeatureMapWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeGeneratedCommandListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeGeneratedCommandListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeTargetListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeTargetListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;
}

declare class MTRBaseClusterTemperatureMeasurement extends MTRGenericBaseCluster {

	static alloc(): MTRBaseClusterTemperatureMeasurement; // inherited from NSObject

	static new(): MTRBaseClusterTemperatureMeasurement; // inherited from NSObject

	static readAttributeAcceptedCommandListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAcceptedCommandListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAttributeListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAttributeListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeClusterRevisionWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeClusterRevisionWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeFeatureMapWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeFeatureMapWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeGeneratedCommandListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeGeneratedCommandListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeMaxMeasuredValueWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeMaxMeasuredValueWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeMeasuredValueWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeMeasuredValueWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeMinMeasuredValueWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeMinMeasuredValueWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeToleranceWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeToleranceWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	constructor(o: { device: MTRBaseDevice; endpointID: number; queue: interop.Pointer | interop.Reference<any>; });

	constructor(o: { device: MTRBaseDevice; endpoint: number; queue: interop.Pointer | interop.Reference<any>; });

	initWithDeviceEndpointIDQueue(device: MTRBaseDevice, endpointID: number, queue: interop.Pointer | interop.Reference<any>): this;

	initWithDeviceEndpointQueue(device: MTRBaseDevice, endpoint: number, queue: interop.Pointer | interop.Reference<any>): this;

	readAttributeAcceptedCommandListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAcceptedCommandListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAttributeListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAttributeListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeClusterRevisionWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeClusterRevisionWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeFeatureMapWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeFeatureMapWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeGeneratedCommandListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeGeneratedCommandListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeMaxMeasuredValueWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeMaxMeasuredValueWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeMeasuredValueWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeMeasuredValueWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeMinMeasuredValueWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeMinMeasuredValueWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeToleranceWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeToleranceWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeAcceptedCommandListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAcceptedCommandListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAttributeListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAttributeListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeClusterRevisionWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeClusterRevisionWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeFeatureMapWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeFeatureMapWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeGeneratedCommandListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeGeneratedCommandListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeMaxMeasuredValueWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeMaxMeasuredValueWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeMeasuredValueWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeMeasuredValueWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeMinMeasuredValueWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeMinMeasuredValueWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeToleranceWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeToleranceWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;
}

declare class MTRBaseClusterTestCluster extends MTRBaseClusterUnitTesting {

	static alloc(): MTRBaseClusterTestCluster; // inherited from NSObject

	static new(): MTRBaseClusterTestCluster; // inherited from NSObject

	static readAttributeAcceptedCommandListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAttributeListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeBitmap16WithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeBitmap32WithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeBitmap64WithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeBitmap8WithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeBooleanWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeCharStringWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: string, p2: NSError) => void): void;

	static readAttributeClusterErrorBooleanWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeClusterRevisionWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeEnum16WithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeEnum8WithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeEnumAttrWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeEpochSWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeEpochUsWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeFeatureMapWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeFloatDoubleWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeFloatSingleWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeGeneralErrorBooleanWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeGeneratedCommandListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeInt16sWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeInt16uWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeInt24sWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeInt24uWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeInt32sWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeInt32uWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeInt40sWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeInt40uWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeInt48sWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeInt48uWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeInt56sWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeInt56uWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeInt64sWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeInt64uWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeInt8sWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeInt8uWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeListFabricScopedWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeListInt8uWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeListLongOctetStringWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeListNullablesAndOptionalsStructWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeListOctetStringWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeListStructOctetStringWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeLongCharStringWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: string, p2: NSError) => void): void;

	static readAttributeLongOctetStringWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSData, p2: NSError) => void): void;

	static readAttributeNullableBitmap16WithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeNullableBitmap32WithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeNullableBitmap64WithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeNullableBitmap8WithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeNullableBooleanWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeNullableCharStringWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: string, p2: NSError) => void): void;

	static readAttributeNullableEnum16WithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeNullableEnum8WithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeNullableEnumAttrWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeNullableFloatDoubleWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeNullableFloatSingleWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeNullableInt16sWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeNullableInt16uWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeNullableInt24sWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeNullableInt24uWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeNullableInt32sWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeNullableInt32uWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeNullableInt40sWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeNullableInt40uWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeNullableInt48sWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeNullableInt48uWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeNullableInt56sWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeNullableInt56uWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeNullableInt64sWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeNullableInt64uWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeNullableInt8sWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeNullableInt8uWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeNullableOctetStringWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSData, p2: NSError) => void): void;

	static readAttributeNullableRangeRestrictedInt16sWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeNullableRangeRestrictedInt16uWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeNullableRangeRestrictedInt8sWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeNullableRangeRestrictedInt8uWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeNullableStructWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: MTRTestClusterClusterSimpleStruct, p2: NSError) => void): void;

	static readAttributeOctetStringWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSData, p2: NSError) => void): void;

	static readAttributeRangeRestrictedInt16sWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeRangeRestrictedInt16uWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeRangeRestrictedInt8sWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeRangeRestrictedInt8uWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeStructAttrWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: MTRTestClusterClusterSimpleStruct, p2: NSError) => void): void;

	static readAttributeTimedWriteBooleanWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeUnsupportedWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeVendorIdWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeWriteOnlyInt8uWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	constructor(o: { device: MTRBaseDevice; endpoint: number; queue: interop.Pointer | interop.Reference<any>; });

	initWithDeviceEndpointQueue(device: MTRBaseDevice, endpoint: number, queue: interop.Pointer | interop.Reference<any>): this;

	readAttributeAcceptedCommandListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAttributeListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeBitmap16WithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeBitmap32WithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeBitmap64WithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeBitmap8WithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeBooleanWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeCharStringWithCompletionHandler(completionHandler: (p1: string, p2: NSError) => void): void;

	readAttributeClusterErrorBooleanWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeClusterRevisionWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeEnum16WithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeEnum8WithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeEnumAttrWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeEpochSWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeEpochUsWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeFeatureMapWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeFloatDoubleWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeFloatSingleWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeGeneralErrorBooleanWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeGeneratedCommandListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeInt16sWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeInt16uWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeInt24sWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeInt24uWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeInt32sWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeInt32uWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeInt40sWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeInt40uWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeInt48sWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeInt48uWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeInt56sWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeInt56uWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeInt64sWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeInt64uWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeInt8sWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeInt8uWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeListFabricScopedWithParamsCompletionHandler(params: MTRReadParams, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeListInt8uWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeListLongOctetStringWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeListNullablesAndOptionalsStructWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeListOctetStringWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeListStructOctetStringWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeLongCharStringWithCompletionHandler(completionHandler: (p1: string, p2: NSError) => void): void;

	readAttributeLongOctetStringWithCompletionHandler(completionHandler: (p1: NSData, p2: NSError) => void): void;

	readAttributeNullableBitmap16WithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeNullableBitmap32WithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeNullableBitmap64WithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeNullableBitmap8WithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeNullableBooleanWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeNullableCharStringWithCompletionHandler(completionHandler: (p1: string, p2: NSError) => void): void;

	readAttributeNullableEnum16WithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeNullableEnum8WithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeNullableEnumAttrWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeNullableFloatDoubleWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeNullableFloatSingleWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeNullableInt16sWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeNullableInt16uWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeNullableInt24sWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeNullableInt24uWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeNullableInt32sWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeNullableInt32uWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeNullableInt40sWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeNullableInt40uWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeNullableInt48sWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeNullableInt48uWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeNullableInt56sWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeNullableInt56uWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeNullableInt64sWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeNullableInt64uWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeNullableInt8sWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeNullableInt8uWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeNullableOctetStringWithCompletionHandler(completionHandler: (p1: NSData, p2: NSError) => void): void;

	readAttributeNullableRangeRestrictedInt16sWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeNullableRangeRestrictedInt16uWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeNullableRangeRestrictedInt8sWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeNullableRangeRestrictedInt8uWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeNullableStructWithCompletionHandler(completionHandler: (p1: MTRTestClusterClusterSimpleStruct, p2: NSError) => void): void;

	readAttributeOctetStringWithCompletionHandler(completionHandler: (p1: NSData, p2: NSError) => void): void;

	readAttributeRangeRestrictedInt16sWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeRangeRestrictedInt16uWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeRangeRestrictedInt8sWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeRangeRestrictedInt8uWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeStructAttrWithCompletionHandler(completionHandler: (p1: MTRTestClusterClusterSimpleStruct, p2: NSError) => void): void;

	readAttributeTimedWriteBooleanWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeUnsupportedWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeVendorIdWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeWriteOnlyInt8uWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	simpleStructEchoRequestWithParamsCompletionHandler(params: MTRTestClusterClusterSimpleStructEchoRequestParams, completionHandler: (p1: MTRTestClusterClusterSimpleStructResponseParams, p2: NSError) => void): void;

	subscribeAttributeAcceptedCommandListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAttributeListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeBitmap16WithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeBitmap32WithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeBitmap64WithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeBitmap8WithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeBooleanWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeCharStringWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: string, p2: NSError) => void): void;

	subscribeAttributeClusterErrorBooleanWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeClusterRevisionWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeEnum16WithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeEnum8WithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeEnumAttrWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeEpochSWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeEpochUsWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeFeatureMapWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeFloatDoubleWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeFloatSingleWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeGeneralErrorBooleanWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeGeneratedCommandListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeInt16sWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeInt16uWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeInt24sWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeInt24uWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeInt32sWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeInt32uWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeInt40sWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeInt40uWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeInt48sWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeInt48uWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeInt56sWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeInt56uWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeInt64sWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeInt64uWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeInt8sWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeInt8uWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeListFabricScopedWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeListInt8uWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeListLongOctetStringWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeListNullablesAndOptionalsStructWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeListOctetStringWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeListStructOctetStringWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeLongCharStringWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: string, p2: NSError) => void): void;

	subscribeAttributeLongOctetStringWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSData, p2: NSError) => void): void;

	subscribeAttributeNullableBitmap16WithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeNullableBitmap32WithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeNullableBitmap64WithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeNullableBitmap8WithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeNullableBooleanWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeNullableCharStringWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: string, p2: NSError) => void): void;

	subscribeAttributeNullableEnum16WithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeNullableEnum8WithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeNullableEnumAttrWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeNullableFloatDoubleWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeNullableFloatSingleWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeNullableInt16sWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeNullableInt16uWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeNullableInt24sWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeNullableInt24uWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeNullableInt32sWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeNullableInt32uWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeNullableInt40sWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeNullableInt40uWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeNullableInt48sWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeNullableInt48uWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeNullableInt56sWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeNullableInt56uWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeNullableInt64sWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeNullableInt64uWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeNullableInt8sWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeNullableInt8uWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeNullableOctetStringWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSData, p2: NSError) => void): void;

	subscribeAttributeNullableRangeRestrictedInt16sWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeNullableRangeRestrictedInt16uWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeNullableRangeRestrictedInt8sWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeNullableRangeRestrictedInt8uWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeNullableStructWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: MTRTestClusterClusterSimpleStruct, p2: NSError) => void): void;

	subscribeAttributeOctetStringWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSData, p2: NSError) => void): void;

	subscribeAttributeRangeRestrictedInt16sWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeRangeRestrictedInt16uWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeRangeRestrictedInt8sWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeRangeRestrictedInt8uWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeStructAttrWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: MTRTestClusterClusterSimpleStruct, p2: NSError) => void): void;

	subscribeAttributeTimedWriteBooleanWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeUnsupportedWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeVendorIdWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeWriteOnlyInt8uWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	testAddArgumentsWithParamsCompletionHandler(params: MTRTestClusterClusterTestAddArgumentsParams, completionHandler: (p1: MTRTestClusterClusterTestAddArgumentsResponseParams, p2: NSError) => void): void;

	testComplexNullableOptionalRequestWithParamsCompletionHandler(params: MTRTestClusterClusterTestComplexNullableOptionalRequestParams, completionHandler: (p1: MTRTestClusterClusterTestComplexNullableOptionalResponseParams, p2: NSError) => void): void;

	testEmitTestEventRequestWithParamsCompletionHandler(params: MTRTestClusterClusterTestEmitTestEventRequestParams, completionHandler: (p1: MTRTestClusterClusterTestEmitTestEventResponseParams, p2: NSError) => void): void;

	testEmitTestFabricScopedEventRequestWithParamsCompletionHandler(params: MTRTestClusterClusterTestEmitTestFabricScopedEventRequestParams, completionHandler: (p1: MTRTestClusterClusterTestEmitTestFabricScopedEventResponseParams, p2: NSError) => void): void;

	testEnumsRequestWithParamsCompletionHandler(params: MTRTestClusterClusterTestEnumsRequestParams, completionHandler: (p1: MTRTestClusterClusterTestEnumsResponseParams, p2: NSError) => void): void;

	testListInt8UArgumentRequestWithParamsCompletionHandler(params: MTRTestClusterClusterTestListInt8UArgumentRequestParams, completionHandler: (p1: MTRTestClusterClusterBooleanResponseParams, p2: NSError) => void): void;

	testListInt8UReverseRequestWithParamsCompletionHandler(params: MTRTestClusterClusterTestListInt8UReverseRequestParams, completionHandler: (p1: MTRTestClusterClusterTestListInt8UReverseResponseParams, p2: NSError) => void): void;

	testListNestedStructListArgumentRequestWithParamsCompletionHandler(params: MTRTestClusterClusterTestListNestedStructListArgumentRequestParams, completionHandler: (p1: MTRTestClusterClusterBooleanResponseParams, p2: NSError) => void): void;

	testListStructArgumentRequestWithParamsCompletionHandler(params: MTRTestClusterClusterTestListStructArgumentRequestParams, completionHandler: (p1: MTRTestClusterClusterBooleanResponseParams, p2: NSError) => void): void;

	testNestedStructArgumentRequestWithParamsCompletionHandler(params: MTRTestClusterClusterTestNestedStructArgumentRequestParams, completionHandler: (p1: MTRTestClusterClusterBooleanResponseParams, p2: NSError) => void): void;

	testNestedStructListArgumentRequestWithParamsCompletionHandler(params: MTRTestClusterClusterTestNestedStructListArgumentRequestParams, completionHandler: (p1: MTRTestClusterClusterBooleanResponseParams, p2: NSError) => void): void;

	testNotHandledWithCompletionHandler(completionHandler: (p1: NSError) => void): void;

	testNotHandledWithParamsCompletionHandler(params: MTRTestClusterClusterTestNotHandledParams, completionHandler: (p1: NSError) => void): void;

	testNullableOptionalRequestWithCompletionHandler(completionHandler: (p1: MTRTestClusterClusterTestNullableOptionalResponseParams, p2: NSError) => void): void;

	testNullableOptionalRequestWithParamsCompletionHandler(params: MTRTestClusterClusterTestNullableOptionalRequestParams, completionHandler: (p1: MTRTestClusterClusterTestNullableOptionalResponseParams, p2: NSError) => void): void;

	testSimpleArgumentRequestWithParamsCompletionHandler(params: MTRTestClusterClusterTestSimpleArgumentRequestParams, completionHandler: (p1: MTRTestClusterClusterTestSimpleArgumentResponseParams, p2: NSError) => void): void;

	testSimpleOptionalArgumentRequestWithCompletionHandler(completionHandler: (p1: NSError) => void): void;

	testSimpleOptionalArgumentRequestWithParamsCompletionHandler(params: MTRTestClusterClusterTestSimpleOptionalArgumentRequestParams, completionHandler: (p1: NSError) => void): void;

	testSpecificWithCompletionHandler(completionHandler: (p1: MTRTestClusterClusterTestSpecificResponseParams, p2: NSError) => void): void;

	testSpecificWithParamsCompletionHandler(params: MTRTestClusterClusterTestSpecificParams, completionHandler: (p1: MTRTestClusterClusterTestSpecificResponseParams, p2: NSError) => void): void;

	testStructArgumentRequestWithParamsCompletionHandler(params: MTRTestClusterClusterTestStructArgumentRequestParams, completionHandler: (p1: MTRTestClusterClusterBooleanResponseParams, p2: NSError) => void): void;

	testStructArrayArgumentRequestWithParamsCompletionHandler(params: MTRTestClusterClusterTestStructArrayArgumentRequestParams, completionHandler: (p1: MTRTestClusterClusterTestStructArrayArgumentResponseParams, p2: NSError) => void): void;

	testUnknownCommandWithCompletionHandler(completionHandler: (p1: NSError) => void): void;

	testUnknownCommandWithParamsCompletionHandler(params: MTRTestClusterClusterTestUnknownCommandParams, completionHandler: (p1: NSError) => void): void;

	testWithCompletionHandler(completionHandler: (p1: NSError) => void): void;

	testWithParamsCompletionHandler(params: MTRTestClusterClusterTestParams, completionHandler: (p1: NSError) => void): void;

	timedInvokeRequestWithCompletionHandler(completionHandler: (p1: NSError) => void): void;

	timedInvokeRequestWithParamsCompletionHandler(params: MTRTestClusterClusterTimedInvokeRequestParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeBitmap16WithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeBitmap16WithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeBitmap32WithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeBitmap32WithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeBitmap64WithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeBitmap64WithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeBitmap8WithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeBitmap8WithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeBooleanWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeBooleanWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeCharStringWithValueCompletionHandler(value: string, completionHandler: (p1: NSError) => void): void;

	writeAttributeCharStringWithValueParamsCompletionHandler(value: string, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeClusterErrorBooleanWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeClusterErrorBooleanWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeEnum16WithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeEnum16WithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeEnum8WithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeEnum8WithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeEnumAttrWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeEnumAttrWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeEpochSWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeEpochSWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeEpochUsWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeEpochUsWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeFloatDoubleWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeFloatDoubleWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeFloatSingleWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeFloatSingleWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeGeneralErrorBooleanWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeGeneralErrorBooleanWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeInt16sWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeInt16sWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeInt16uWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeInt16uWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeInt24sWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeInt24sWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeInt24uWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeInt24uWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeInt32sWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeInt32sWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeInt32uWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeInt32uWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeInt40sWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeInt40sWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeInt40uWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeInt40uWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeInt48sWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeInt48sWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeInt48uWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeInt48uWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeInt56sWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeInt56sWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeInt56uWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeInt56uWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeInt64sWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeInt64sWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeInt64uWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeInt64uWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeInt8sWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeInt8sWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeInt8uWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeInt8uWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeListFabricScopedWithValueCompletionHandler(value: NSArray<any> | any[], completionHandler: (p1: NSError) => void): void;

	writeAttributeListFabricScopedWithValueParamsCompletionHandler(value: NSArray<any> | any[], params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeListInt8uWithValueCompletionHandler(value: NSArray<any> | any[], completionHandler: (p1: NSError) => void): void;

	writeAttributeListInt8uWithValueParamsCompletionHandler(value: NSArray<any> | any[], params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeListLongOctetStringWithValueCompletionHandler(value: NSArray<any> | any[], completionHandler: (p1: NSError) => void): void;

	writeAttributeListLongOctetStringWithValueParamsCompletionHandler(value: NSArray<any> | any[], params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeListNullablesAndOptionalsStructWithValueCompletionHandler(value: NSArray<any> | any[], completionHandler: (p1: NSError) => void): void;

	writeAttributeListNullablesAndOptionalsStructWithValueParamsCompletionHandler(value: NSArray<any> | any[], params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeListOctetStringWithValueCompletionHandler(value: NSArray<any> | any[], completionHandler: (p1: NSError) => void): void;

	writeAttributeListOctetStringWithValueParamsCompletionHandler(value: NSArray<any> | any[], params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeListStructOctetStringWithValueCompletionHandler(value: NSArray<any> | any[], completionHandler: (p1: NSError) => void): void;

	writeAttributeListStructOctetStringWithValueParamsCompletionHandler(value: NSArray<any> | any[], params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeLongCharStringWithValueCompletionHandler(value: string, completionHandler: (p1: NSError) => void): void;

	writeAttributeLongCharStringWithValueParamsCompletionHandler(value: string, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeLongOctetStringWithValueCompletionHandler(value: NSData, completionHandler: (p1: NSError) => void): void;

	writeAttributeLongOctetStringWithValueParamsCompletionHandler(value: NSData, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeNullableBitmap16WithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeNullableBitmap16WithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeNullableBitmap32WithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeNullableBitmap32WithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeNullableBitmap64WithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeNullableBitmap64WithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeNullableBitmap8WithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeNullableBitmap8WithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeNullableBooleanWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeNullableBooleanWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeNullableCharStringWithValueCompletionHandler(value: string, completionHandler: (p1: NSError) => void): void;

	writeAttributeNullableCharStringWithValueParamsCompletionHandler(value: string, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeNullableEnum16WithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeNullableEnum16WithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeNullableEnum8WithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeNullableEnum8WithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeNullableEnumAttrWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeNullableEnumAttrWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeNullableFloatDoubleWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeNullableFloatDoubleWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeNullableFloatSingleWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeNullableFloatSingleWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeNullableInt16sWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeNullableInt16sWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeNullableInt16uWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeNullableInt16uWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeNullableInt24sWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeNullableInt24sWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeNullableInt24uWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeNullableInt24uWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeNullableInt32sWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeNullableInt32sWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeNullableInt32uWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeNullableInt32uWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeNullableInt40sWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeNullableInt40sWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeNullableInt40uWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeNullableInt40uWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeNullableInt48sWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeNullableInt48sWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeNullableInt48uWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeNullableInt48uWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeNullableInt56sWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeNullableInt56sWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeNullableInt56uWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeNullableInt56uWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeNullableInt64sWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeNullableInt64sWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeNullableInt64uWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeNullableInt64uWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeNullableInt8sWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeNullableInt8sWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeNullableInt8uWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeNullableInt8uWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeNullableOctetStringWithValueCompletionHandler(value: NSData, completionHandler: (p1: NSError) => void): void;

	writeAttributeNullableOctetStringWithValueParamsCompletionHandler(value: NSData, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeNullableRangeRestrictedInt16sWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeNullableRangeRestrictedInt16sWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeNullableRangeRestrictedInt16uWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeNullableRangeRestrictedInt16uWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeNullableRangeRestrictedInt8sWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeNullableRangeRestrictedInt8sWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeNullableRangeRestrictedInt8uWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeNullableRangeRestrictedInt8uWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeNullableStructWithValueCompletionHandler(value: MTRTestClusterClusterSimpleStruct, completionHandler: (p1: NSError) => void): void;

	writeAttributeNullableStructWithValueParamsCompletionHandler(value: MTRTestClusterClusterSimpleStruct, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeOctetStringWithValueCompletionHandler(value: NSData, completionHandler: (p1: NSError) => void): void;

	writeAttributeOctetStringWithValueParamsCompletionHandler(value: NSData, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeRangeRestrictedInt16sWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeRangeRestrictedInt16sWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeRangeRestrictedInt16uWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeRangeRestrictedInt16uWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeRangeRestrictedInt8sWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeRangeRestrictedInt8sWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeRangeRestrictedInt8uWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeRangeRestrictedInt8uWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeStructAttrWithValueCompletionHandler(value: MTRTestClusterClusterSimpleStruct, completionHandler: (p1: NSError) => void): void;

	writeAttributeStructAttrWithValueParamsCompletionHandler(value: MTRTestClusterClusterSimpleStruct, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeTimedWriteBooleanWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeTimedWriteBooleanWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeUnsupportedWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeUnsupportedWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeVendorIdWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeVendorIdWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeWriteOnlyInt8uWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeWriteOnlyInt8uWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;
}

declare class MTRBaseClusterThermostat extends MTRGenericBaseCluster {

	static alloc(): MTRBaseClusterThermostat; // inherited from NSObject

	static new(): MTRBaseClusterThermostat; // inherited from NSObject

	static readAttributeACCapacityWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeACCapacityWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeACCapacityformatWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeACCapacityformatWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeACCoilTemperatureWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeACCoilTemperatureWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeACCompressorTypeWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeACCompressorTypeWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeACErrorCodeWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeACErrorCodeWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeACLouverPositionWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeACLouverPositionWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeACRefrigerantTypeWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeACRefrigerantTypeWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeACTypeWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeACTypeWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeAbsMaxCoolSetpointLimitWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeAbsMaxCoolSetpointLimitWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeAbsMaxHeatSetpointLimitWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeAbsMaxHeatSetpointLimitWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeAbsMinCoolSetpointLimitWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeAbsMinCoolSetpointLimitWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeAbsMinHeatSetpointLimitWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeAbsMinHeatSetpointLimitWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeAcceptedCommandListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAcceptedCommandListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAttributeListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAttributeListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeClusterRevisionWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeClusterRevisionWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeControlSequenceOfOperationWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeControlSequenceOfOperationWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeEmergencyHeatDeltaWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeEmergencyHeatDeltaWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeFeatureMapWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeFeatureMapWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeGeneratedCommandListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeGeneratedCommandListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeHVACSystemTypeConfigurationWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeHVACSystemTypeConfigurationWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeLocalTemperatureCalibrationWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeLocalTemperatureCalibrationWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeLocalTemperatureWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeLocalTemperatureWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeMaxCoolSetpointLimitWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeMaxCoolSetpointLimitWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeMaxHeatSetpointLimitWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeMaxHeatSetpointLimitWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeMinCoolSetpointLimitWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeMinCoolSetpointLimitWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeMinHeatSetpointLimitWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeMinHeatSetpointLimitWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeMinSetpointDeadBandWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeMinSetpointDeadBandWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeNumberOfDailyTransitionsWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeNumberOfDailyTransitionsWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeNumberOfWeeklyTransitionsWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeNumberOfWeeklyTransitionsWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeOccupancyWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeOccupancyWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeOccupiedCoolingSetpointWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeOccupiedCoolingSetpointWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeOccupiedHeatingSetpointWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeOccupiedHeatingSetpointWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeOccupiedSetbackMaxWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeOccupiedSetbackMaxWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeOccupiedSetbackMinWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeOccupiedSetbackMinWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeOccupiedSetbackWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeOccupiedSetbackWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeOutdoorTemperatureWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeOutdoorTemperatureWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributePICoolingDemandWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributePICoolingDemandWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributePIHeatingDemandWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributePIHeatingDemandWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeRemoteSensingWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeRemoteSensingWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeSetpointChangeAmountWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeSetpointChangeAmountWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeSetpointChangeSourceTimestampWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeSetpointChangeSourceTimestampWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeSetpointChangeSourceWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeSetpointChangeSourceWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeStartOfWeekWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeStartOfWeekWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeSystemModeWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeSystemModeWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeTemperatureSetpointHoldDurationWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeTemperatureSetpointHoldDurationWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeTemperatureSetpointHoldWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeTemperatureSetpointHoldWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeThermostatProgrammingOperationModeWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeThermostatProgrammingOperationModeWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeThermostatRunningModeWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeThermostatRunningModeWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeThermostatRunningStateWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeThermostatRunningStateWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeUnoccupiedCoolingSetpointWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeUnoccupiedCoolingSetpointWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeUnoccupiedHeatingSetpointWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeUnoccupiedHeatingSetpointWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeUnoccupiedSetbackMaxWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeUnoccupiedSetbackMaxWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeUnoccupiedSetbackMinWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeUnoccupiedSetbackMinWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeUnoccupiedSetbackWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeUnoccupiedSetbackWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	constructor(o: { device: MTRBaseDevice; endpointID: number; queue: interop.Pointer | interop.Reference<any>; });

	constructor(o: { device: MTRBaseDevice; endpoint: number; queue: interop.Pointer | interop.Reference<any>; });

	clearWeeklyScheduleWithCompletion(completion: (p1: NSError) => void): void;

	clearWeeklyScheduleWithCompletionHandler(completionHandler: (p1: NSError) => void): void;

	clearWeeklyScheduleWithParamsCompletion(params: MTRThermostatClusterClearWeeklyScheduleParams, completion: (p1: NSError) => void): void;

	clearWeeklyScheduleWithParamsCompletionHandler(params: MTRThermostatClusterClearWeeklyScheduleParams, completionHandler: (p1: NSError) => void): void;

	getWeeklyScheduleWithParamsCompletion(params: MTRThermostatClusterGetWeeklyScheduleParams, completion: (p1: MTRThermostatClusterGetWeeklyScheduleResponseParams, p2: NSError) => void): void;

	getWeeklyScheduleWithParamsCompletionHandler(params: MTRThermostatClusterGetWeeklyScheduleParams, completionHandler: (p1: MTRThermostatClusterGetWeeklyScheduleResponseParams, p2: NSError) => void): void;

	initWithDeviceEndpointIDQueue(device: MTRBaseDevice, endpointID: number, queue: interop.Pointer | interop.Reference<any>): this;

	initWithDeviceEndpointQueue(device: MTRBaseDevice, endpoint: number, queue: interop.Pointer | interop.Reference<any>): this;

	readAttributeACCapacityWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeACCapacityWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeACCapacityformatWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeACCapacityformatWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeACCoilTemperatureWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeACCoilTemperatureWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeACCompressorTypeWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeACCompressorTypeWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeACErrorCodeWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeACErrorCodeWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeACLouverPositionWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeACLouverPositionWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeACRefrigerantTypeWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeACRefrigerantTypeWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeACTypeWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeACTypeWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeAbsMaxCoolSetpointLimitWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeAbsMaxCoolSetpointLimitWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeAbsMaxHeatSetpointLimitWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeAbsMaxHeatSetpointLimitWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeAbsMinCoolSetpointLimitWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeAbsMinCoolSetpointLimitWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeAbsMinHeatSetpointLimitWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeAbsMinHeatSetpointLimitWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeAcceptedCommandListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAcceptedCommandListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAttributeListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAttributeListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeClusterRevisionWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeClusterRevisionWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeControlSequenceOfOperationWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeControlSequenceOfOperationWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeEmergencyHeatDeltaWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeEmergencyHeatDeltaWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeFeatureMapWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeFeatureMapWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeGeneratedCommandListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeGeneratedCommandListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeHVACSystemTypeConfigurationWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeHVACSystemTypeConfigurationWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeLocalTemperatureCalibrationWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeLocalTemperatureCalibrationWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeLocalTemperatureWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeLocalTemperatureWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeMaxCoolSetpointLimitWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeMaxCoolSetpointLimitWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeMaxHeatSetpointLimitWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeMaxHeatSetpointLimitWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeMinCoolSetpointLimitWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeMinCoolSetpointLimitWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeMinHeatSetpointLimitWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeMinHeatSetpointLimitWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeMinSetpointDeadBandWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeMinSetpointDeadBandWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeNumberOfDailyTransitionsWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeNumberOfDailyTransitionsWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeNumberOfWeeklyTransitionsWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeNumberOfWeeklyTransitionsWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeOccupancyWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeOccupancyWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeOccupiedCoolingSetpointWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeOccupiedCoolingSetpointWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeOccupiedHeatingSetpointWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeOccupiedHeatingSetpointWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeOccupiedSetbackMaxWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeOccupiedSetbackMaxWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeOccupiedSetbackMinWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeOccupiedSetbackMinWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeOccupiedSetbackWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeOccupiedSetbackWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeOutdoorTemperatureWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeOutdoorTemperatureWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributePICoolingDemandWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributePICoolingDemandWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributePIHeatingDemandWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributePIHeatingDemandWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeRemoteSensingWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeRemoteSensingWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeSetpointChangeAmountWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeSetpointChangeAmountWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeSetpointChangeSourceTimestampWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeSetpointChangeSourceTimestampWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeSetpointChangeSourceWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeSetpointChangeSourceWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeStartOfWeekWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeStartOfWeekWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeSystemModeWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeSystemModeWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeTemperatureSetpointHoldDurationWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeTemperatureSetpointHoldDurationWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeTemperatureSetpointHoldWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeTemperatureSetpointHoldWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeThermostatProgrammingOperationModeWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeThermostatProgrammingOperationModeWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeThermostatRunningModeWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeThermostatRunningModeWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeThermostatRunningStateWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeThermostatRunningStateWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeUnoccupiedCoolingSetpointWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeUnoccupiedCoolingSetpointWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeUnoccupiedHeatingSetpointWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeUnoccupiedHeatingSetpointWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeUnoccupiedSetbackMaxWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeUnoccupiedSetbackMaxWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeUnoccupiedSetbackMinWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeUnoccupiedSetbackMinWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeUnoccupiedSetbackWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeUnoccupiedSetbackWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	setWeeklyScheduleWithParamsCompletion(params: MTRThermostatClusterSetWeeklyScheduleParams, completion: (p1: NSError) => void): void;

	setWeeklyScheduleWithParamsCompletionHandler(params: MTRThermostatClusterSetWeeklyScheduleParams, completionHandler: (p1: NSError) => void): void;

	setpointRaiseLowerWithParamsCompletion(params: MTRThermostatClusterSetpointRaiseLowerParams, completion: (p1: NSError) => void): void;

	setpointRaiseLowerWithParamsCompletionHandler(params: MTRThermostatClusterSetpointRaiseLowerParams, completionHandler: (p1: NSError) => void): void;

	subscribeAttributeACCapacityWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeACCapacityWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeACCapacityformatWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeACCapacityformatWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeACCoilTemperatureWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeACCoilTemperatureWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeACCompressorTypeWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeACCompressorTypeWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeACErrorCodeWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeACErrorCodeWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeACLouverPositionWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeACLouverPositionWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeACRefrigerantTypeWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeACRefrigerantTypeWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeACTypeWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeACTypeWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeAbsMaxCoolSetpointLimitWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeAbsMaxCoolSetpointLimitWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeAbsMaxHeatSetpointLimitWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeAbsMaxHeatSetpointLimitWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeAbsMinCoolSetpointLimitWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeAbsMinCoolSetpointLimitWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeAbsMinHeatSetpointLimitWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeAbsMinHeatSetpointLimitWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeAcceptedCommandListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAcceptedCommandListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAttributeListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAttributeListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeClusterRevisionWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeClusterRevisionWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeControlSequenceOfOperationWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeControlSequenceOfOperationWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeEmergencyHeatDeltaWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeEmergencyHeatDeltaWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeFeatureMapWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeFeatureMapWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeGeneratedCommandListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeGeneratedCommandListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeHVACSystemTypeConfigurationWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeHVACSystemTypeConfigurationWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeLocalTemperatureCalibrationWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeLocalTemperatureCalibrationWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeLocalTemperatureWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeLocalTemperatureWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeMaxCoolSetpointLimitWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeMaxCoolSetpointLimitWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeMaxHeatSetpointLimitWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeMaxHeatSetpointLimitWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeMinCoolSetpointLimitWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeMinCoolSetpointLimitWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeMinHeatSetpointLimitWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeMinHeatSetpointLimitWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeMinSetpointDeadBandWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeMinSetpointDeadBandWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeNumberOfDailyTransitionsWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeNumberOfDailyTransitionsWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeNumberOfWeeklyTransitionsWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeNumberOfWeeklyTransitionsWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeOccupancyWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeOccupancyWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeOccupiedCoolingSetpointWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeOccupiedCoolingSetpointWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeOccupiedHeatingSetpointWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeOccupiedHeatingSetpointWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeOccupiedSetbackMaxWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeOccupiedSetbackMaxWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeOccupiedSetbackMinWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeOccupiedSetbackMinWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeOccupiedSetbackWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeOccupiedSetbackWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeOutdoorTemperatureWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeOutdoorTemperatureWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributePICoolingDemandWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributePICoolingDemandWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributePIHeatingDemandWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributePIHeatingDemandWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeRemoteSensingWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeRemoteSensingWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeSetpointChangeAmountWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeSetpointChangeAmountWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeSetpointChangeSourceTimestampWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeSetpointChangeSourceTimestampWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeSetpointChangeSourceWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeSetpointChangeSourceWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeStartOfWeekWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeStartOfWeekWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeSystemModeWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeSystemModeWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeTemperatureSetpointHoldDurationWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeTemperatureSetpointHoldDurationWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeTemperatureSetpointHoldWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeTemperatureSetpointHoldWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeThermostatProgrammingOperationModeWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeThermostatProgrammingOperationModeWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeThermostatRunningModeWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeThermostatRunningModeWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeThermostatRunningStateWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeThermostatRunningStateWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeUnoccupiedCoolingSetpointWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeUnoccupiedCoolingSetpointWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeUnoccupiedHeatingSetpointWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeUnoccupiedHeatingSetpointWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeUnoccupiedSetbackMaxWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeUnoccupiedSetbackMaxWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeUnoccupiedSetbackMinWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeUnoccupiedSetbackMinWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeUnoccupiedSetbackWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeUnoccupiedSetbackWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	writeAttributeACCapacityWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeACCapacityWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeACCapacityWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeACCapacityWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeACCapacityformatWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeACCapacityformatWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeACCapacityformatWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeACCapacityformatWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeACCompressorTypeWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeACCompressorTypeWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeACCompressorTypeWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeACCompressorTypeWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeACErrorCodeWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeACErrorCodeWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeACErrorCodeWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeACErrorCodeWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeACLouverPositionWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeACLouverPositionWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeACLouverPositionWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeACLouverPositionWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeACRefrigerantTypeWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeACRefrigerantTypeWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeACRefrigerantTypeWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeACRefrigerantTypeWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeACTypeWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeACTypeWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeACTypeWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeACTypeWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeControlSequenceOfOperationWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeControlSequenceOfOperationWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeControlSequenceOfOperationWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeControlSequenceOfOperationWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeEmergencyHeatDeltaWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeEmergencyHeatDeltaWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeEmergencyHeatDeltaWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeEmergencyHeatDeltaWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeHVACSystemTypeConfigurationWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeHVACSystemTypeConfigurationWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeHVACSystemTypeConfigurationWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeHVACSystemTypeConfigurationWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeLocalTemperatureCalibrationWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeLocalTemperatureCalibrationWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeLocalTemperatureCalibrationWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeLocalTemperatureCalibrationWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeMaxCoolSetpointLimitWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeMaxCoolSetpointLimitWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeMaxCoolSetpointLimitWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeMaxCoolSetpointLimitWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeMaxHeatSetpointLimitWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeMaxHeatSetpointLimitWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeMaxHeatSetpointLimitWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeMaxHeatSetpointLimitWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeMinCoolSetpointLimitWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeMinCoolSetpointLimitWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeMinCoolSetpointLimitWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeMinCoolSetpointLimitWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeMinHeatSetpointLimitWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeMinHeatSetpointLimitWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeMinHeatSetpointLimitWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeMinHeatSetpointLimitWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeMinSetpointDeadBandWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeMinSetpointDeadBandWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeMinSetpointDeadBandWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeMinSetpointDeadBandWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeOccupiedCoolingSetpointWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeOccupiedCoolingSetpointWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeOccupiedCoolingSetpointWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeOccupiedCoolingSetpointWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeOccupiedHeatingSetpointWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeOccupiedHeatingSetpointWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeOccupiedHeatingSetpointWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeOccupiedHeatingSetpointWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeOccupiedSetbackWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeOccupiedSetbackWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeOccupiedSetbackWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeOccupiedSetbackWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeRemoteSensingWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeRemoteSensingWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeRemoteSensingWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeRemoteSensingWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeSystemModeWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeSystemModeWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeSystemModeWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeSystemModeWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeTemperatureSetpointHoldDurationWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeTemperatureSetpointHoldDurationWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeTemperatureSetpointHoldDurationWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeTemperatureSetpointHoldDurationWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeTemperatureSetpointHoldWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeTemperatureSetpointHoldWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeTemperatureSetpointHoldWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeTemperatureSetpointHoldWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeThermostatProgrammingOperationModeWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeThermostatProgrammingOperationModeWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeThermostatProgrammingOperationModeWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeThermostatProgrammingOperationModeWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeUnoccupiedCoolingSetpointWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeUnoccupiedCoolingSetpointWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeUnoccupiedCoolingSetpointWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeUnoccupiedCoolingSetpointWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeUnoccupiedHeatingSetpointWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeUnoccupiedHeatingSetpointWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeUnoccupiedHeatingSetpointWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeUnoccupiedHeatingSetpointWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeUnoccupiedSetbackWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeUnoccupiedSetbackWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeUnoccupiedSetbackWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeUnoccupiedSetbackWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;
}

declare class MTRBaseClusterThermostatUserInterfaceConfiguration extends MTRGenericBaseCluster {

	static alloc(): MTRBaseClusterThermostatUserInterfaceConfiguration; // inherited from NSObject

	static new(): MTRBaseClusterThermostatUserInterfaceConfiguration; // inherited from NSObject

	static readAttributeAcceptedCommandListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAcceptedCommandListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAttributeListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAttributeListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeClusterRevisionWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeClusterRevisionWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeFeatureMapWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeFeatureMapWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeGeneratedCommandListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeGeneratedCommandListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeKeypadLockoutWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeKeypadLockoutWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeScheduleProgrammingVisibilityWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeScheduleProgrammingVisibilityWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeTemperatureDisplayModeWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeTemperatureDisplayModeWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	constructor(o: { device: MTRBaseDevice; endpointID: number; queue: interop.Pointer | interop.Reference<any>; });

	constructor(o: { device: MTRBaseDevice; endpoint: number; queue: interop.Pointer | interop.Reference<any>; });

	initWithDeviceEndpointIDQueue(device: MTRBaseDevice, endpointID: number, queue: interop.Pointer | interop.Reference<any>): this;

	initWithDeviceEndpointQueue(device: MTRBaseDevice, endpoint: number, queue: interop.Pointer | interop.Reference<any>): this;

	readAttributeAcceptedCommandListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAcceptedCommandListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAttributeListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAttributeListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeClusterRevisionWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeClusterRevisionWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeFeatureMapWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeFeatureMapWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeGeneratedCommandListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeGeneratedCommandListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeKeypadLockoutWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeKeypadLockoutWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeScheduleProgrammingVisibilityWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeScheduleProgrammingVisibilityWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeTemperatureDisplayModeWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeTemperatureDisplayModeWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeAcceptedCommandListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAcceptedCommandListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAttributeListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAttributeListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeClusterRevisionWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeClusterRevisionWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeFeatureMapWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeFeatureMapWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeGeneratedCommandListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeGeneratedCommandListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeKeypadLockoutWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeKeypadLockoutWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeScheduleProgrammingVisibilityWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeScheduleProgrammingVisibilityWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeTemperatureDisplayModeWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeTemperatureDisplayModeWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	writeAttributeKeypadLockoutWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeKeypadLockoutWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeKeypadLockoutWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeKeypadLockoutWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeScheduleProgrammingVisibilityWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeScheduleProgrammingVisibilityWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeScheduleProgrammingVisibilityWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeScheduleProgrammingVisibilityWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeTemperatureDisplayModeWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeTemperatureDisplayModeWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeTemperatureDisplayModeWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeTemperatureDisplayModeWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;
}

declare class MTRBaseClusterThreadNetworkDiagnostics extends MTRGenericBaseCluster {

	static alloc(): MTRBaseClusterThreadNetworkDiagnostics; // inherited from NSObject

	static new(): MTRBaseClusterThreadNetworkDiagnostics; // inherited from NSObject

	static readAttributeAcceptedCommandListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAcceptedCommandListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeActiveNetworkFaultsListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeActiveNetworkFaultsListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeActiveTimestampWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeActiveTimestampWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeAttachAttemptCountWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeAttachAttemptCountWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeAttributeListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAttributeListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeBetterPartitionAttachAttemptCountWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeBetterPartitionAttachAttemptCountWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeChannelPage0MaskWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSData, p2: NSError) => void): void;

	static readAttributeChannelPage0MaskWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSData, p2: NSError) => void): void;

	static readAttributeChannelWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeChannelWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeChildRoleCountWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeChildRoleCountWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeClusterRevisionWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeClusterRevisionWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeDataVersionWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeDataVersionWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeDelayWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeDelayWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeDetachedRoleCountWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeDetachedRoleCountWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeExtendedPanIdWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeExtendedPanIdWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeFeatureMapWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeFeatureMapWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeGeneratedCommandListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeGeneratedCommandListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeLeaderRoleCountWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeLeaderRoleCountWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeLeaderRouterIdWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeLeaderRouterIdWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeMeshLocalPrefixWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSData, p2: NSError) => void): void;

	static readAttributeMeshLocalPrefixWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSData, p2: NSError) => void): void;

	static readAttributeNeighborTableListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeNeighborTableWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeNetworkNameWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: string, p2: NSError) => void): void;

	static readAttributeNetworkNameWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: string, p2: NSError) => void): void;

	static readAttributeOperationalDatasetComponentsWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: MTRThreadNetworkDiagnosticsClusterOperationalDatasetComponents, p2: NSError) => void): void;

	static readAttributeOperationalDatasetComponentsWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: MTRThreadNetworkDiagnosticsClusterOperationalDatasetComponents, p2: NSError) => void): void;

	static readAttributeOverrunCountWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeOverrunCountWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributePanIdWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributePanIdWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeParentChangeCountWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeParentChangeCountWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributePartitionIdChangeCountWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributePartitionIdChangeCountWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributePartitionIdWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributePartitionIdWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributePendingTimestampWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributePendingTimestampWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeRouteTableListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeRouteTableWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeRouterRoleCountWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeRouterRoleCountWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeRoutingRoleWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeRoutingRoleWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeRxAddressFilteredCountWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeRxAddressFilteredCountWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeRxBeaconCountWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeRxBeaconCountWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeRxBeaconRequestCountWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeRxBeaconRequestCountWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeRxBroadcastCountWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeRxBroadcastCountWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeRxDataCountWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeRxDataCountWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeRxDataPollCountWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeRxDataPollCountWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeRxDestAddrFilteredCountWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeRxDestAddrFilteredCountWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeRxDuplicatedCountWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeRxDuplicatedCountWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeRxErrFcsCountWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeRxErrFcsCountWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeRxErrInvalidSrcAddrCountWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeRxErrInvalidSrcAddrCountWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeRxErrNoFrameCountWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeRxErrNoFrameCountWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeRxErrOtherCountWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeRxErrOtherCountWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeRxErrSecCountWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeRxErrSecCountWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeRxErrUnknownNeighborCountWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeRxErrUnknownNeighborCountWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeRxOtherCountWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeRxOtherCountWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeRxTotalCountWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeRxTotalCountWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeRxUnicastCountWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeRxUnicastCountWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeSecurityPolicyWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: MTRThreadNetworkDiagnosticsClusterSecurityPolicy, p2: NSError) => void): void;

	static readAttributeSecurityPolicyWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: MTRThreadNetworkDiagnosticsClusterSecurityPolicy, p2: NSError) => void): void;

	static readAttributeStableDataVersionWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeStableDataVersionWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeTxAckRequestedCountWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeTxAckRequestedCountWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeTxAckedCountWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeTxAckedCountWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeTxBeaconCountWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeTxBeaconCountWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeTxBeaconRequestCountWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeTxBeaconRequestCountWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeTxBroadcastCountWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeTxBroadcastCountWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeTxDataCountWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeTxDataCountWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeTxDataPollCountWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeTxDataPollCountWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeTxDirectMaxRetryExpiryCountWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeTxDirectMaxRetryExpiryCountWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeTxErrAbortCountWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeTxErrAbortCountWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeTxErrBusyChannelCountWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeTxErrBusyChannelCountWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeTxErrCcaCountWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeTxErrCcaCountWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeTxIndirectMaxRetryExpiryCountWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeTxIndirectMaxRetryExpiryCountWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeTxNoAckRequestedCountWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeTxNoAckRequestedCountWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeTxOtherCountWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeTxOtherCountWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeTxRetryCountWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeTxRetryCountWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeTxTotalCountWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeTxTotalCountWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeTxUnicastCountWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeTxUnicastCountWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeWeightingWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeWeightingWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	constructor(o: { device: MTRBaseDevice; endpointID: number; queue: interop.Pointer | interop.Reference<any>; });

	constructor(o: { device: MTRBaseDevice; endpoint: number; queue: interop.Pointer | interop.Reference<any>; });

	initWithDeviceEndpointIDQueue(device: MTRBaseDevice, endpointID: number, queue: interop.Pointer | interop.Reference<any>): this;

	initWithDeviceEndpointQueue(device: MTRBaseDevice, endpoint: number, queue: interop.Pointer | interop.Reference<any>): this;

	readAttributeAcceptedCommandListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAcceptedCommandListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeActiveNetworkFaultsListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeActiveNetworkFaultsListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeActiveTimestampWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeActiveTimestampWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeAttachAttemptCountWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeAttachAttemptCountWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeAttributeListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAttributeListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeBetterPartitionAttachAttemptCountWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeBetterPartitionAttachAttemptCountWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeChannelPage0MaskWithCompletion(completion: (p1: NSData, p2: NSError) => void): void;

	readAttributeChannelPage0MaskWithCompletionHandler(completionHandler: (p1: NSData, p2: NSError) => void): void;

	readAttributeChannelWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeChannelWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeChildRoleCountWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeChildRoleCountWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeClusterRevisionWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeClusterRevisionWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeDataVersionWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeDataVersionWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeDelayWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeDelayWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeDetachedRoleCountWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeDetachedRoleCountWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeExtendedPanIdWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeExtendedPanIdWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeFeatureMapWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeFeatureMapWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeGeneratedCommandListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeGeneratedCommandListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeLeaderRoleCountWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeLeaderRoleCountWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeLeaderRouterIdWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeLeaderRouterIdWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeMeshLocalPrefixWithCompletion(completion: (p1: NSData, p2: NSError) => void): void;

	readAttributeMeshLocalPrefixWithCompletionHandler(completionHandler: (p1: NSData, p2: NSError) => void): void;

	readAttributeNeighborTableListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeNeighborTableWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeNetworkNameWithCompletion(completion: (p1: string, p2: NSError) => void): void;

	readAttributeNetworkNameWithCompletionHandler(completionHandler: (p1: string, p2: NSError) => void): void;

	readAttributeOperationalDatasetComponentsWithCompletion(completion: (p1: MTRThreadNetworkDiagnosticsClusterOperationalDatasetComponents, p2: NSError) => void): void;

	readAttributeOperationalDatasetComponentsWithCompletionHandler(completionHandler: (p1: MTRThreadNetworkDiagnosticsClusterOperationalDatasetComponents, p2: NSError) => void): void;

	readAttributeOverrunCountWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeOverrunCountWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributePanIdWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributePanIdWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeParentChangeCountWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeParentChangeCountWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributePartitionIdChangeCountWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributePartitionIdChangeCountWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributePartitionIdWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributePartitionIdWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributePendingTimestampWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributePendingTimestampWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeRouteTableListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeRouteTableWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeRouterRoleCountWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeRouterRoleCountWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeRoutingRoleWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeRoutingRoleWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeRxAddressFilteredCountWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeRxAddressFilteredCountWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeRxBeaconCountWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeRxBeaconCountWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeRxBeaconRequestCountWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeRxBeaconRequestCountWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeRxBroadcastCountWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeRxBroadcastCountWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeRxDataCountWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeRxDataCountWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeRxDataPollCountWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeRxDataPollCountWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeRxDestAddrFilteredCountWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeRxDestAddrFilteredCountWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeRxDuplicatedCountWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeRxDuplicatedCountWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeRxErrFcsCountWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeRxErrFcsCountWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeRxErrInvalidSrcAddrCountWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeRxErrInvalidSrcAddrCountWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeRxErrNoFrameCountWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeRxErrNoFrameCountWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeRxErrOtherCountWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeRxErrOtherCountWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeRxErrSecCountWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeRxErrSecCountWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeRxErrUnknownNeighborCountWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeRxErrUnknownNeighborCountWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeRxOtherCountWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeRxOtherCountWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeRxTotalCountWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeRxTotalCountWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeRxUnicastCountWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeRxUnicastCountWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeSecurityPolicyWithCompletion(completion: (p1: MTRThreadNetworkDiagnosticsClusterSecurityPolicy, p2: NSError) => void): void;

	readAttributeSecurityPolicyWithCompletionHandler(completionHandler: (p1: MTRThreadNetworkDiagnosticsClusterSecurityPolicy, p2: NSError) => void): void;

	readAttributeStableDataVersionWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeStableDataVersionWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeTxAckRequestedCountWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeTxAckRequestedCountWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeTxAckedCountWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeTxAckedCountWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeTxBeaconCountWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeTxBeaconCountWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeTxBeaconRequestCountWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeTxBeaconRequestCountWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeTxBroadcastCountWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeTxBroadcastCountWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeTxDataCountWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeTxDataCountWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeTxDataPollCountWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeTxDataPollCountWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeTxDirectMaxRetryExpiryCountWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeTxDirectMaxRetryExpiryCountWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeTxErrAbortCountWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeTxErrAbortCountWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeTxErrBusyChannelCountWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeTxErrBusyChannelCountWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeTxErrCcaCountWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeTxErrCcaCountWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeTxIndirectMaxRetryExpiryCountWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeTxIndirectMaxRetryExpiryCountWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeTxNoAckRequestedCountWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeTxNoAckRequestedCountWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeTxOtherCountWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeTxOtherCountWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeTxRetryCountWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeTxRetryCountWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeTxTotalCountWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeTxTotalCountWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeTxUnicastCountWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeTxUnicastCountWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeWeightingWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeWeightingWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	resetCountsWithCompletion(completion: (p1: NSError) => void): void;

	resetCountsWithCompletionHandler(completionHandler: (p1: NSError) => void): void;

	resetCountsWithParamsCompletion(params: MTRThreadNetworkDiagnosticsClusterResetCountsParams, completion: (p1: NSError) => void): void;

	resetCountsWithParamsCompletionHandler(params: MTRThreadNetworkDiagnosticsClusterResetCountsParams, completionHandler: (p1: NSError) => void): void;

	subscribeAttributeAcceptedCommandListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAcceptedCommandListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeActiveNetworkFaultsListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeActiveNetworkFaultsListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeActiveTimestampWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeActiveTimestampWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeAttachAttemptCountWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeAttachAttemptCountWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeAttributeListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAttributeListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeBetterPartitionAttachAttemptCountWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeBetterPartitionAttachAttemptCountWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeChannelPage0MaskWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSData, p2: NSError) => void): void;

	subscribeAttributeChannelPage0MaskWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSData, p2: NSError) => void): void;

	subscribeAttributeChannelWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeChannelWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeChildRoleCountWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeChildRoleCountWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeClusterRevisionWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeClusterRevisionWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeDataVersionWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeDataVersionWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeDelayWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeDelayWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeDetachedRoleCountWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeDetachedRoleCountWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeExtendedPanIdWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeExtendedPanIdWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeFeatureMapWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeFeatureMapWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeGeneratedCommandListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeGeneratedCommandListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeLeaderRoleCountWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeLeaderRoleCountWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeLeaderRouterIdWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeLeaderRouterIdWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeMeshLocalPrefixWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSData, p2: NSError) => void): void;

	subscribeAttributeMeshLocalPrefixWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSData, p2: NSError) => void): void;

	subscribeAttributeNeighborTableListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeNeighborTableWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeNetworkNameWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: string, p2: NSError) => void): void;

	subscribeAttributeNetworkNameWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: string, p2: NSError) => void): void;

	subscribeAttributeOperationalDatasetComponentsWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: MTRThreadNetworkDiagnosticsClusterOperationalDatasetComponents, p2: NSError) => void): void;

	subscribeAttributeOperationalDatasetComponentsWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: MTRThreadNetworkDiagnosticsClusterOperationalDatasetComponents, p2: NSError) => void): void;

	subscribeAttributeOverrunCountWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeOverrunCountWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributePanIdWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributePanIdWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeParentChangeCountWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeParentChangeCountWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributePartitionIdChangeCountWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributePartitionIdChangeCountWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributePartitionIdWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributePartitionIdWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributePendingTimestampWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributePendingTimestampWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeRouteTableListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeRouteTableWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeRouterRoleCountWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeRouterRoleCountWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeRoutingRoleWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeRoutingRoleWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeRxAddressFilteredCountWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeRxAddressFilteredCountWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeRxBeaconCountWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeRxBeaconCountWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeRxBeaconRequestCountWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeRxBeaconRequestCountWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeRxBroadcastCountWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeRxBroadcastCountWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeRxDataCountWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeRxDataCountWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeRxDataPollCountWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeRxDataPollCountWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeRxDestAddrFilteredCountWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeRxDestAddrFilteredCountWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeRxDuplicatedCountWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeRxDuplicatedCountWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeRxErrFcsCountWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeRxErrFcsCountWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeRxErrInvalidSrcAddrCountWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeRxErrInvalidSrcAddrCountWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeRxErrNoFrameCountWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeRxErrNoFrameCountWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeRxErrOtherCountWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeRxErrOtherCountWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeRxErrSecCountWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeRxErrSecCountWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeRxErrUnknownNeighborCountWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeRxErrUnknownNeighborCountWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeRxOtherCountWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeRxOtherCountWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeRxTotalCountWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeRxTotalCountWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeRxUnicastCountWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeRxUnicastCountWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeSecurityPolicyWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: MTRThreadNetworkDiagnosticsClusterSecurityPolicy, p2: NSError) => void): void;

	subscribeAttributeSecurityPolicyWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: MTRThreadNetworkDiagnosticsClusterSecurityPolicy, p2: NSError) => void): void;

	subscribeAttributeStableDataVersionWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeStableDataVersionWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeTxAckRequestedCountWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeTxAckRequestedCountWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeTxAckedCountWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeTxAckedCountWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeTxBeaconCountWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeTxBeaconCountWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeTxBeaconRequestCountWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeTxBeaconRequestCountWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeTxBroadcastCountWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeTxBroadcastCountWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeTxDataCountWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeTxDataCountWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeTxDataPollCountWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeTxDataPollCountWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeTxDirectMaxRetryExpiryCountWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeTxDirectMaxRetryExpiryCountWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeTxErrAbortCountWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeTxErrAbortCountWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeTxErrBusyChannelCountWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeTxErrBusyChannelCountWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeTxErrCcaCountWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeTxErrCcaCountWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeTxIndirectMaxRetryExpiryCountWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeTxIndirectMaxRetryExpiryCountWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeTxNoAckRequestedCountWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeTxNoAckRequestedCountWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeTxOtherCountWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeTxOtherCountWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeTxRetryCountWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeTxRetryCountWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeTxTotalCountWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeTxTotalCountWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeTxUnicastCountWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeTxUnicastCountWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeWeightingWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeWeightingWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;
}

declare class MTRBaseClusterTimeFormatLocalization extends MTRGenericBaseCluster {

	static alloc(): MTRBaseClusterTimeFormatLocalization; // inherited from NSObject

	static new(): MTRBaseClusterTimeFormatLocalization; // inherited from NSObject

	static readAttributeAcceptedCommandListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAcceptedCommandListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeActiveCalendarTypeWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeActiveCalendarTypeWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeAttributeListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAttributeListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeClusterRevisionWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeClusterRevisionWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeFeatureMapWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeFeatureMapWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeGeneratedCommandListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeGeneratedCommandListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeHourFormatWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeHourFormatWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeSupportedCalendarTypesWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeSupportedCalendarTypesWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	constructor(o: { device: MTRBaseDevice; endpointID: number; queue: interop.Pointer | interop.Reference<any>; });

	constructor(o: { device: MTRBaseDevice; endpoint: number; queue: interop.Pointer | interop.Reference<any>; });

	initWithDeviceEndpointIDQueue(device: MTRBaseDevice, endpointID: number, queue: interop.Pointer | interop.Reference<any>): this;

	initWithDeviceEndpointQueue(device: MTRBaseDevice, endpoint: number, queue: interop.Pointer | interop.Reference<any>): this;

	readAttributeAcceptedCommandListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAcceptedCommandListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeActiveCalendarTypeWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeActiveCalendarTypeWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeAttributeListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAttributeListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeClusterRevisionWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeClusterRevisionWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeFeatureMapWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeFeatureMapWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeGeneratedCommandListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeGeneratedCommandListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeHourFormatWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeHourFormatWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeSupportedCalendarTypesWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeSupportedCalendarTypesWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAcceptedCommandListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAcceptedCommandListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeActiveCalendarTypeWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeActiveCalendarTypeWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeAttributeListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAttributeListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeClusterRevisionWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeClusterRevisionWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeFeatureMapWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeFeatureMapWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeGeneratedCommandListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeGeneratedCommandListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeHourFormatWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeHourFormatWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeSupportedCalendarTypesWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeSupportedCalendarTypesWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	writeAttributeActiveCalendarTypeWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeActiveCalendarTypeWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeActiveCalendarTypeWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeActiveCalendarTypeWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeHourFormatWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeHourFormatWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeHourFormatWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeHourFormatWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;
}

declare class MTRBaseClusterUnitLocalization extends MTRGenericBaseCluster {

	static alloc(): MTRBaseClusterUnitLocalization; // inherited from NSObject

	static new(): MTRBaseClusterUnitLocalization; // inherited from NSObject

	static readAttributeAcceptedCommandListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAcceptedCommandListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAttributeListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAttributeListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeClusterRevisionWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeClusterRevisionWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeFeatureMapWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeFeatureMapWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeGeneratedCommandListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeGeneratedCommandListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeTemperatureUnitWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeTemperatureUnitWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	constructor(o: { device: MTRBaseDevice; endpointID: number; queue: interop.Pointer | interop.Reference<any>; });

	constructor(o: { device: MTRBaseDevice; endpoint: number; queue: interop.Pointer | interop.Reference<any>; });

	initWithDeviceEndpointIDQueue(device: MTRBaseDevice, endpointID: number, queue: interop.Pointer | interop.Reference<any>): this;

	initWithDeviceEndpointQueue(device: MTRBaseDevice, endpoint: number, queue: interop.Pointer | interop.Reference<any>): this;

	readAttributeAcceptedCommandListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAcceptedCommandListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAttributeListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAttributeListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeClusterRevisionWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeClusterRevisionWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeFeatureMapWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeFeatureMapWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeGeneratedCommandListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeGeneratedCommandListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeTemperatureUnitWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeTemperatureUnitWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeAcceptedCommandListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAcceptedCommandListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAttributeListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAttributeListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeClusterRevisionWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeClusterRevisionWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeFeatureMapWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeFeatureMapWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeGeneratedCommandListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeGeneratedCommandListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeTemperatureUnitWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeTemperatureUnitWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	writeAttributeTemperatureUnitWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeTemperatureUnitWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeTemperatureUnitWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeTemperatureUnitWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;
}

declare class MTRBaseClusterUnitTesting extends MTRGenericBaseCluster {

	static alloc(): MTRBaseClusterUnitTesting; // inherited from NSObject

	static new(): MTRBaseClusterUnitTesting; // inherited from NSObject

	static readAttributeAcceptedCommandListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAttributeListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeBitmap16WithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeBitmap32WithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeBitmap64WithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeBitmap8WithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeBooleanWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeCharStringWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: string, p2: NSError) => void): void;

	static readAttributeClusterErrorBooleanWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeClusterRevisionWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeEnum16WithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeEnum8WithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeEnumAttrWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeEpochSWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeEpochUsWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeFeatureMapWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeFloatDoubleWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeFloatSingleWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeGeneralErrorBooleanWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeGeneratedCommandListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeInt16sWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeInt16uWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeInt24sWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeInt24uWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeInt32sWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeInt32uWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeInt40sWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeInt40uWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeInt48sWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeInt48uWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeInt56sWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeInt56uWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeInt64sWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeInt64uWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeInt8sWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeInt8uWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeListFabricScopedWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeListInt8uWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeListLongOctetStringWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeListNullablesAndOptionalsStructWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeListOctetStringWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeListStructOctetStringWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeLongCharStringWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: string, p2: NSError) => void): void;

	static readAttributeLongOctetStringWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSData, p2: NSError) => void): void;

	static readAttributeNullableBitmap16WithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeNullableBitmap32WithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeNullableBitmap64WithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeNullableBitmap8WithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeNullableBooleanWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeNullableCharStringWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: string, p2: NSError) => void): void;

	static readAttributeNullableEnum16WithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeNullableEnum8WithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeNullableEnumAttrWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeNullableFloatDoubleWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeNullableFloatSingleWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeNullableInt16sWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeNullableInt16uWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeNullableInt24sWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeNullableInt24uWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeNullableInt32sWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeNullableInt32uWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeNullableInt40sWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeNullableInt40uWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeNullableInt48sWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeNullableInt48uWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeNullableInt56sWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeNullableInt56uWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeNullableInt64sWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeNullableInt64uWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeNullableInt8sWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeNullableInt8uWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeNullableOctetStringWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSData, p2: NSError) => void): void;

	static readAttributeNullableRangeRestrictedInt16sWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeNullableRangeRestrictedInt16uWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeNullableRangeRestrictedInt8sWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeNullableRangeRestrictedInt8uWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeNullableStructWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: MTRUnitTestingClusterSimpleStruct, p2: NSError) => void): void;

	static readAttributeOctetStringWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSData, p2: NSError) => void): void;

	static readAttributeRangeRestrictedInt16sWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeRangeRestrictedInt16uWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeRangeRestrictedInt8sWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeRangeRestrictedInt8uWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeStructAttrWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: MTRUnitTestingClusterSimpleStruct, p2: NSError) => void): void;

	static readAttributeTimedWriteBooleanWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeUnsupportedWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeVendorIdWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeWriteOnlyInt8uWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	constructor(o: { device: MTRBaseDevice; endpointID: number; queue: interop.Pointer | interop.Reference<any>; });

	initWithDeviceEndpointIDQueue(device: MTRBaseDevice, endpointID: number, queue: interop.Pointer | interop.Reference<any>): this;

	readAttributeAcceptedCommandListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAttributeListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeBitmap16WithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeBitmap32WithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeBitmap64WithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeBitmap8WithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeBooleanWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeCharStringWithCompletion(completion: (p1: string, p2: NSError) => void): void;

	readAttributeClusterErrorBooleanWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeClusterRevisionWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeEnum16WithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeEnum8WithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeEnumAttrWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeEpochSWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeEpochUsWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeFeatureMapWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeFloatDoubleWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeFloatSingleWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeGeneralErrorBooleanWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeGeneratedCommandListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeInt16sWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeInt16uWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeInt24sWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeInt24uWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeInt32sWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeInt32uWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeInt40sWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeInt40uWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeInt48sWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeInt48uWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeInt56sWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeInt56uWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeInt64sWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeInt64uWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeInt8sWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeInt8uWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeListFabricScopedWithParamsCompletion(params: MTRReadParams, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeListInt8uWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeListLongOctetStringWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeListNullablesAndOptionalsStructWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeListOctetStringWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeListStructOctetStringWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeLongCharStringWithCompletion(completion: (p1: string, p2: NSError) => void): void;

	readAttributeLongOctetStringWithCompletion(completion: (p1: NSData, p2: NSError) => void): void;

	readAttributeNullableBitmap16WithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeNullableBitmap32WithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeNullableBitmap64WithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeNullableBitmap8WithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeNullableBooleanWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeNullableCharStringWithCompletion(completion: (p1: string, p2: NSError) => void): void;

	readAttributeNullableEnum16WithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeNullableEnum8WithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeNullableEnumAttrWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeNullableFloatDoubleWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeNullableFloatSingleWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeNullableInt16sWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeNullableInt16uWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeNullableInt24sWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeNullableInt24uWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeNullableInt32sWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeNullableInt32uWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeNullableInt40sWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeNullableInt40uWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeNullableInt48sWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeNullableInt48uWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeNullableInt56sWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeNullableInt56uWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeNullableInt64sWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeNullableInt64uWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeNullableInt8sWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeNullableInt8uWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeNullableOctetStringWithCompletion(completion: (p1: NSData, p2: NSError) => void): void;

	readAttributeNullableRangeRestrictedInt16sWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeNullableRangeRestrictedInt16uWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeNullableRangeRestrictedInt8sWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeNullableRangeRestrictedInt8uWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeNullableStructWithCompletion(completion: (p1: MTRUnitTestingClusterSimpleStruct, p2: NSError) => void): void;

	readAttributeOctetStringWithCompletion(completion: (p1: NSData, p2: NSError) => void): void;

	readAttributeRangeRestrictedInt16sWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeRangeRestrictedInt16uWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeRangeRestrictedInt8sWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeRangeRestrictedInt8uWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeStructAttrWithCompletion(completion: (p1: MTRUnitTestingClusterSimpleStruct, p2: NSError) => void): void;

	readAttributeTimedWriteBooleanWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeUnsupportedWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeVendorIdWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeWriteOnlyInt8uWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	simpleStructEchoRequestWithParamsCompletion(params: MTRUnitTestingClusterSimpleStructEchoRequestParams, completion: (p1: MTRUnitTestingClusterSimpleStructResponseParams, p2: NSError) => void): void;

	subscribeAttributeAcceptedCommandListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAttributeListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeBitmap16WithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeBitmap32WithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeBitmap64WithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeBitmap8WithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeBooleanWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeCharStringWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: string, p2: NSError) => void): void;

	subscribeAttributeClusterErrorBooleanWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeClusterRevisionWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeEnum16WithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeEnum8WithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeEnumAttrWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeEpochSWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeEpochUsWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeFeatureMapWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeFloatDoubleWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeFloatSingleWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeGeneralErrorBooleanWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeGeneratedCommandListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeInt16sWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeInt16uWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeInt24sWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeInt24uWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeInt32sWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeInt32uWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeInt40sWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeInt40uWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeInt48sWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeInt48uWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeInt56sWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeInt56uWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeInt64sWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeInt64uWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeInt8sWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeInt8uWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeListFabricScopedWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeListInt8uWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeListLongOctetStringWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeListNullablesAndOptionalsStructWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeListOctetStringWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeListStructOctetStringWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeLongCharStringWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: string, p2: NSError) => void): void;

	subscribeAttributeLongOctetStringWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSData, p2: NSError) => void): void;

	subscribeAttributeNullableBitmap16WithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeNullableBitmap32WithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeNullableBitmap64WithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeNullableBitmap8WithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeNullableBooleanWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeNullableCharStringWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: string, p2: NSError) => void): void;

	subscribeAttributeNullableEnum16WithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeNullableEnum8WithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeNullableEnumAttrWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeNullableFloatDoubleWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeNullableFloatSingleWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeNullableInt16sWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeNullableInt16uWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeNullableInt24sWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeNullableInt24uWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeNullableInt32sWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeNullableInt32uWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeNullableInt40sWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeNullableInt40uWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeNullableInt48sWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeNullableInt48uWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeNullableInt56sWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeNullableInt56uWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeNullableInt64sWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeNullableInt64uWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeNullableInt8sWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeNullableInt8uWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeNullableOctetStringWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSData, p2: NSError) => void): void;

	subscribeAttributeNullableRangeRestrictedInt16sWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeNullableRangeRestrictedInt16uWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeNullableRangeRestrictedInt8sWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeNullableRangeRestrictedInt8uWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeNullableStructWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: MTRUnitTestingClusterSimpleStruct, p2: NSError) => void): void;

	subscribeAttributeOctetStringWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSData, p2: NSError) => void): void;

	subscribeAttributeRangeRestrictedInt16sWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeRangeRestrictedInt16uWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeRangeRestrictedInt8sWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeRangeRestrictedInt8uWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeStructAttrWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: MTRUnitTestingClusterSimpleStruct, p2: NSError) => void): void;

	subscribeAttributeTimedWriteBooleanWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeUnsupportedWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeVendorIdWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeWriteOnlyInt8uWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	testAddArgumentsWithParamsCompletion(params: MTRUnitTestingClusterTestAddArgumentsParams, completion: (p1: MTRUnitTestingClusterTestAddArgumentsResponseParams, p2: NSError) => void): void;

	testComplexNullableOptionalRequestWithParamsCompletion(params: MTRUnitTestingClusterTestComplexNullableOptionalRequestParams, completion: (p1: MTRUnitTestingClusterTestComplexNullableOptionalResponseParams, p2: NSError) => void): void;

	testEmitTestEventRequestWithParamsCompletion(params: MTRUnitTestingClusterTestEmitTestEventRequestParams, completion: (p1: MTRUnitTestingClusterTestEmitTestEventResponseParams, p2: NSError) => void): void;

	testEmitTestFabricScopedEventRequestWithParamsCompletion(params: MTRUnitTestingClusterTestEmitTestFabricScopedEventRequestParams, completion: (p1: MTRUnitTestingClusterTestEmitTestFabricScopedEventResponseParams, p2: NSError) => void): void;

	testEnumsRequestWithParamsCompletion(params: MTRUnitTestingClusterTestEnumsRequestParams, completion: (p1: MTRUnitTestingClusterTestEnumsResponseParams, p2: NSError) => void): void;

	testListInt8UArgumentRequestWithParamsCompletion(params: MTRUnitTestingClusterTestListInt8UArgumentRequestParams, completion: (p1: MTRUnitTestingClusterBooleanResponseParams, p2: NSError) => void): void;

	testListInt8UReverseRequestWithParamsCompletion(params: MTRUnitTestingClusterTestListInt8UReverseRequestParams, completion: (p1: MTRUnitTestingClusterTestListInt8UReverseResponseParams, p2: NSError) => void): void;

	testListNestedStructListArgumentRequestWithParamsCompletion(params: MTRUnitTestingClusterTestListNestedStructListArgumentRequestParams, completion: (p1: MTRUnitTestingClusterBooleanResponseParams, p2: NSError) => void): void;

	testListStructArgumentRequestWithParamsCompletion(params: MTRUnitTestingClusterTestListStructArgumentRequestParams, completion: (p1: MTRUnitTestingClusterBooleanResponseParams, p2: NSError) => void): void;

	testNestedStructArgumentRequestWithParamsCompletion(params: MTRUnitTestingClusterTestNestedStructArgumentRequestParams, completion: (p1: MTRUnitTestingClusterBooleanResponseParams, p2: NSError) => void): void;

	testNestedStructListArgumentRequestWithParamsCompletion(params: MTRUnitTestingClusterTestNestedStructListArgumentRequestParams, completion: (p1: MTRUnitTestingClusterBooleanResponseParams, p2: NSError) => void): void;

	testNotHandledWithCompletion(completion: (p1: NSError) => void): void;

	testNotHandledWithParamsCompletion(params: MTRUnitTestingClusterTestNotHandledParams, completion: (p1: NSError) => void): void;

	testNullableOptionalRequestWithCompletion(completion: (p1: MTRUnitTestingClusterTestNullableOptionalResponseParams, p2: NSError) => void): void;

	testNullableOptionalRequestWithParamsCompletion(params: MTRUnitTestingClusterTestNullableOptionalRequestParams, completion: (p1: MTRUnitTestingClusterTestNullableOptionalResponseParams, p2: NSError) => void): void;

	testSimpleArgumentRequestWithParamsCompletion(params: MTRUnitTestingClusterTestSimpleArgumentRequestParams, completion: (p1: MTRUnitTestingClusterTestSimpleArgumentResponseParams, p2: NSError) => void): void;

	testSimpleOptionalArgumentRequestWithCompletion(completion: (p1: NSError) => void): void;

	testSimpleOptionalArgumentRequestWithParamsCompletion(params: MTRUnitTestingClusterTestSimpleOptionalArgumentRequestParams, completion: (p1: NSError) => void): void;

	testSpecificWithCompletion(completion: (p1: MTRUnitTestingClusterTestSpecificResponseParams, p2: NSError) => void): void;

	testSpecificWithParamsCompletion(params: MTRUnitTestingClusterTestSpecificParams, completion: (p1: MTRUnitTestingClusterTestSpecificResponseParams, p2: NSError) => void): void;

	testStructArgumentRequestWithParamsCompletion(params: MTRUnitTestingClusterTestStructArgumentRequestParams, completion: (p1: MTRUnitTestingClusterBooleanResponseParams, p2: NSError) => void): void;

	testStructArrayArgumentRequestWithParamsCompletion(params: MTRUnitTestingClusterTestStructArrayArgumentRequestParams, completion: (p1: MTRUnitTestingClusterTestStructArrayArgumentResponseParams, p2: NSError) => void): void;

	testUnknownCommandWithCompletion(completion: (p1: NSError) => void): void;

	testUnknownCommandWithParamsCompletion(params: MTRUnitTestingClusterTestUnknownCommandParams, completion: (p1: NSError) => void): void;

	testWithCompletion(completion: (p1: NSError) => void): void;

	testWithParamsCompletion(params: MTRUnitTestingClusterTestParams, completion: (p1: NSError) => void): void;

	timedInvokeRequestWithCompletion(completion: (p1: NSError) => void): void;

	timedInvokeRequestWithParamsCompletion(params: MTRUnitTestingClusterTimedInvokeRequestParams, completion: (p1: NSError) => void): void;

	writeAttributeBitmap16WithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeBitmap16WithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeBitmap32WithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeBitmap32WithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeBitmap64WithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeBitmap64WithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeBitmap8WithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeBitmap8WithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeBooleanWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeBooleanWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeCharStringWithValueCompletion(value: string, completion: (p1: NSError) => void): void;

	writeAttributeCharStringWithValueParamsCompletion(value: string, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeClusterErrorBooleanWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeClusterErrorBooleanWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeEnum16WithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeEnum16WithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeEnum8WithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeEnum8WithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeEnumAttrWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeEnumAttrWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeEpochSWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeEpochSWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeEpochUsWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeEpochUsWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeFloatDoubleWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeFloatDoubleWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeFloatSingleWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeFloatSingleWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeGeneralErrorBooleanWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeGeneralErrorBooleanWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeInt16sWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeInt16sWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeInt16uWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeInt16uWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeInt24sWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeInt24sWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeInt24uWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeInt24uWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeInt32sWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeInt32sWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeInt32uWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeInt32uWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeInt40sWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeInt40sWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeInt40uWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeInt40uWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeInt48sWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeInt48sWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeInt48uWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeInt48uWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeInt56sWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeInt56sWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeInt56uWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeInt56uWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeInt64sWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeInt64sWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeInt64uWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeInt64uWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeInt8sWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeInt8sWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeInt8uWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeInt8uWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeListFabricScopedWithValueCompletion(value: NSArray<any> | any[], completion: (p1: NSError) => void): void;

	writeAttributeListFabricScopedWithValueParamsCompletion(value: NSArray<any> | any[], params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeListInt8uWithValueCompletion(value: NSArray<any> | any[], completion: (p1: NSError) => void): void;

	writeAttributeListInt8uWithValueParamsCompletion(value: NSArray<any> | any[], params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeListLongOctetStringWithValueCompletion(value: NSArray<any> | any[], completion: (p1: NSError) => void): void;

	writeAttributeListLongOctetStringWithValueParamsCompletion(value: NSArray<any> | any[], params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeListNullablesAndOptionalsStructWithValueCompletion(value: NSArray<any> | any[], completion: (p1: NSError) => void): void;

	writeAttributeListNullablesAndOptionalsStructWithValueParamsCompletion(value: NSArray<any> | any[], params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeListOctetStringWithValueCompletion(value: NSArray<any> | any[], completion: (p1: NSError) => void): void;

	writeAttributeListOctetStringWithValueParamsCompletion(value: NSArray<any> | any[], params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeListStructOctetStringWithValueCompletion(value: NSArray<any> | any[], completion: (p1: NSError) => void): void;

	writeAttributeListStructOctetStringWithValueParamsCompletion(value: NSArray<any> | any[], params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeLongCharStringWithValueCompletion(value: string, completion: (p1: NSError) => void): void;

	writeAttributeLongCharStringWithValueParamsCompletion(value: string, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeLongOctetStringWithValueCompletion(value: NSData, completion: (p1: NSError) => void): void;

	writeAttributeLongOctetStringWithValueParamsCompletion(value: NSData, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeNullableBitmap16WithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeNullableBitmap16WithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeNullableBitmap32WithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeNullableBitmap32WithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeNullableBitmap64WithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeNullableBitmap64WithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeNullableBitmap8WithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeNullableBitmap8WithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeNullableBooleanWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeNullableBooleanWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeNullableCharStringWithValueCompletion(value: string, completion: (p1: NSError) => void): void;

	writeAttributeNullableCharStringWithValueParamsCompletion(value: string, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeNullableEnum16WithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeNullableEnum16WithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeNullableEnum8WithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeNullableEnum8WithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeNullableEnumAttrWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeNullableEnumAttrWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeNullableFloatDoubleWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeNullableFloatDoubleWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeNullableFloatSingleWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeNullableFloatSingleWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeNullableInt16sWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeNullableInt16sWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeNullableInt16uWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeNullableInt16uWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeNullableInt24sWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeNullableInt24sWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeNullableInt24uWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeNullableInt24uWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeNullableInt32sWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeNullableInt32sWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeNullableInt32uWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeNullableInt32uWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeNullableInt40sWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeNullableInt40sWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeNullableInt40uWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeNullableInt40uWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeNullableInt48sWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeNullableInt48sWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeNullableInt48uWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeNullableInt48uWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeNullableInt56sWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeNullableInt56sWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeNullableInt56uWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeNullableInt56uWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeNullableInt64sWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeNullableInt64sWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeNullableInt64uWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeNullableInt64uWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeNullableInt8sWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeNullableInt8sWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeNullableInt8uWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeNullableInt8uWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeNullableOctetStringWithValueCompletion(value: NSData, completion: (p1: NSError) => void): void;

	writeAttributeNullableOctetStringWithValueParamsCompletion(value: NSData, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeNullableRangeRestrictedInt16sWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeNullableRangeRestrictedInt16sWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeNullableRangeRestrictedInt16uWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeNullableRangeRestrictedInt16uWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeNullableRangeRestrictedInt8sWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeNullableRangeRestrictedInt8sWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeNullableRangeRestrictedInt8uWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeNullableRangeRestrictedInt8uWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeNullableStructWithValueCompletion(value: MTRUnitTestingClusterSimpleStruct, completion: (p1: NSError) => void): void;

	writeAttributeNullableStructWithValueParamsCompletion(value: MTRUnitTestingClusterSimpleStruct, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeOctetStringWithValueCompletion(value: NSData, completion: (p1: NSError) => void): void;

	writeAttributeOctetStringWithValueParamsCompletion(value: NSData, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeRangeRestrictedInt16sWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeRangeRestrictedInt16sWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeRangeRestrictedInt16uWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeRangeRestrictedInt16uWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeRangeRestrictedInt8sWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeRangeRestrictedInt8sWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeRangeRestrictedInt8uWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeRangeRestrictedInt8uWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeStructAttrWithValueCompletion(value: MTRUnitTestingClusterSimpleStruct, completion: (p1: NSError) => void): void;

	writeAttributeStructAttrWithValueParamsCompletion(value: MTRUnitTestingClusterSimpleStruct, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeTimedWriteBooleanWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeTimedWriteBooleanWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeUnsupportedWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeUnsupportedWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeVendorIdWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeVendorIdWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeWriteOnlyInt8uWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeWriteOnlyInt8uWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;
}

declare class MTRBaseClusterUserLabel extends MTRGenericBaseCluster {

	static alloc(): MTRBaseClusterUserLabel; // inherited from NSObject

	static new(): MTRBaseClusterUserLabel; // inherited from NSObject

	static readAttributeAcceptedCommandListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAcceptedCommandListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAttributeListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAttributeListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeClusterRevisionWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeClusterRevisionWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeFeatureMapWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeFeatureMapWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeGeneratedCommandListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeGeneratedCommandListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeLabelListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeLabelListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	constructor(o: { device: MTRBaseDevice; endpointID: number; queue: interop.Pointer | interop.Reference<any>; });

	constructor(o: { device: MTRBaseDevice; endpoint: number; queue: interop.Pointer | interop.Reference<any>; });

	initWithDeviceEndpointIDQueue(device: MTRBaseDevice, endpointID: number, queue: interop.Pointer | interop.Reference<any>): this;

	initWithDeviceEndpointQueue(device: MTRBaseDevice, endpoint: number, queue: interop.Pointer | interop.Reference<any>): this;

	readAttributeAcceptedCommandListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAcceptedCommandListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAttributeListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAttributeListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeClusterRevisionWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeClusterRevisionWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeFeatureMapWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeFeatureMapWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeGeneratedCommandListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeGeneratedCommandListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeLabelListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeLabelListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAcceptedCommandListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAcceptedCommandListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAttributeListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAttributeListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeClusterRevisionWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeClusterRevisionWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeFeatureMapWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeFeatureMapWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeGeneratedCommandListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeGeneratedCommandListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeLabelListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeLabelListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	writeAttributeLabelListWithValueCompletion(value: NSArray<any> | any[], completion: (p1: NSError) => void): void;

	writeAttributeLabelListWithValueCompletionHandler(value: NSArray<any> | any[], completionHandler: (p1: NSError) => void): void;

	writeAttributeLabelListWithValueParamsCompletion(value: NSArray<any> | any[], params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeLabelListWithValueParamsCompletionHandler(value: NSArray<any> | any[], params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;
}

declare class MTRBaseClusterWakeOnLAN extends MTRGenericBaseCluster {

	static alloc(): MTRBaseClusterWakeOnLAN; // inherited from NSObject

	static new(): MTRBaseClusterWakeOnLAN; // inherited from NSObject

	static readAttributeAcceptedCommandListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAttributeListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeClusterRevisionWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeFeatureMapWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeGeneratedCommandListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeMACAddressWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: string, p2: NSError) => void): void;

	constructor(o: { device: MTRBaseDevice; endpointID: number; queue: interop.Pointer | interop.Reference<any>; });

	initWithDeviceEndpointIDQueue(device: MTRBaseDevice, endpointID: number, queue: interop.Pointer | interop.Reference<any>): this;

	readAttributeAcceptedCommandListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAttributeListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeClusterRevisionWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeFeatureMapWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeGeneratedCommandListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeMACAddressWithCompletion(completion: (p1: string, p2: NSError) => void): void;

	subscribeAttributeAcceptedCommandListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAttributeListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeClusterRevisionWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeFeatureMapWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeGeneratedCommandListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeMACAddressWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: string, p2: NSError) => void): void;
}

declare class MTRBaseClusterWakeOnLan extends MTRBaseClusterWakeOnLAN {

	static alloc(): MTRBaseClusterWakeOnLan; // inherited from NSObject

	static new(): MTRBaseClusterWakeOnLan; // inherited from NSObject

	static readAttributeAcceptedCommandListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAttributeListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeClusterRevisionWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeFeatureMapWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeGeneratedCommandListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeMACAddressWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: string, p2: NSError) => void): void;

	constructor(o: { device: MTRBaseDevice; endpoint: number; queue: interop.Pointer | interop.Reference<any>; });

	initWithDeviceEndpointQueue(device: MTRBaseDevice, endpoint: number, queue: interop.Pointer | interop.Reference<any>): this;

	readAttributeAcceptedCommandListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAttributeListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeClusterRevisionWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeFeatureMapWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeGeneratedCommandListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeMACAddressWithCompletionHandler(completionHandler: (p1: string, p2: NSError) => void): void;

	subscribeAttributeAcceptedCommandListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAttributeListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeClusterRevisionWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeFeatureMapWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeGeneratedCommandListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeMACAddressWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: string, p2: NSError) => void): void;
}

declare class MTRBaseClusterWiFiNetworkDiagnostics extends MTRGenericBaseCluster {

	static alloc(): MTRBaseClusterWiFiNetworkDiagnostics; // inherited from NSObject

	static new(): MTRBaseClusterWiFiNetworkDiagnostics; // inherited from NSObject

	static readAttributeAcceptedCommandListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAcceptedCommandListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAttributeListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAttributeListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeBSSIDWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSData, p2: NSError) => void): void;

	static readAttributeBeaconLostCountWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeBeaconLostCountWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeBeaconRxCountWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeBeaconRxCountWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeBssidWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSData, p2: NSError) => void): void;

	static readAttributeChannelNumberWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeChannelNumberWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeClusterRevisionWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeClusterRevisionWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeCurrentMaxRateWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeCurrentMaxRateWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeFeatureMapWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeFeatureMapWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeGeneratedCommandListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeGeneratedCommandListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeOverrunCountWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeOverrunCountWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributePacketMulticastRxCountWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributePacketMulticastRxCountWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributePacketMulticastTxCountWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributePacketMulticastTxCountWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributePacketUnicastRxCountWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributePacketUnicastRxCountWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributePacketUnicastTxCountWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributePacketUnicastTxCountWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeRSSIWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeRssiWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeSecurityTypeWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeSecurityTypeWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeWiFiVersionWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeWiFiVersionWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	constructor(o: { device: MTRBaseDevice; endpointID: number; queue: interop.Pointer | interop.Reference<any>; });

	constructor(o: { device: MTRBaseDevice; endpoint: number; queue: interop.Pointer | interop.Reference<any>; });

	initWithDeviceEndpointIDQueue(device: MTRBaseDevice, endpointID: number, queue: interop.Pointer | interop.Reference<any>): this;

	initWithDeviceEndpointQueue(device: MTRBaseDevice, endpoint: number, queue: interop.Pointer | interop.Reference<any>): this;

	readAttributeAcceptedCommandListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAcceptedCommandListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAttributeListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAttributeListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeBSSIDWithCompletion(completion: (p1: NSData, p2: NSError) => void): void;

	readAttributeBeaconLostCountWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeBeaconLostCountWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeBeaconRxCountWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeBeaconRxCountWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeBssidWithCompletionHandler(completionHandler: (p1: NSData, p2: NSError) => void): void;

	readAttributeChannelNumberWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeChannelNumberWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeClusterRevisionWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeClusterRevisionWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeCurrentMaxRateWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeCurrentMaxRateWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeFeatureMapWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeFeatureMapWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeGeneratedCommandListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeGeneratedCommandListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeOverrunCountWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeOverrunCountWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributePacketMulticastRxCountWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributePacketMulticastRxCountWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributePacketMulticastTxCountWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributePacketMulticastTxCountWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributePacketUnicastRxCountWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributePacketUnicastRxCountWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributePacketUnicastTxCountWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributePacketUnicastTxCountWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeRSSIWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeRssiWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeSecurityTypeWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeSecurityTypeWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeWiFiVersionWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeWiFiVersionWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	resetCountsWithCompletion(completion: (p1: NSError) => void): void;

	resetCountsWithCompletionHandler(completionHandler: (p1: NSError) => void): void;

	resetCountsWithParamsCompletion(params: MTRWiFiNetworkDiagnosticsClusterResetCountsParams, completion: (p1: NSError) => void): void;

	resetCountsWithParamsCompletionHandler(params: MTRWiFiNetworkDiagnosticsClusterResetCountsParams, completionHandler: (p1: NSError) => void): void;

	subscribeAttributeAcceptedCommandListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAcceptedCommandListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAttributeListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAttributeListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeBSSIDWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSData, p2: NSError) => void): void;

	subscribeAttributeBeaconLostCountWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeBeaconLostCountWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeBeaconRxCountWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeBeaconRxCountWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeBssidWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSData, p2: NSError) => void): void;

	subscribeAttributeChannelNumberWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeChannelNumberWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeClusterRevisionWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeClusterRevisionWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeCurrentMaxRateWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeCurrentMaxRateWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeFeatureMapWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeFeatureMapWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeGeneratedCommandListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeGeneratedCommandListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeOverrunCountWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeOverrunCountWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributePacketMulticastRxCountWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributePacketMulticastRxCountWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributePacketMulticastTxCountWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributePacketMulticastTxCountWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributePacketUnicastRxCountWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributePacketUnicastRxCountWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributePacketUnicastTxCountWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributePacketUnicastTxCountWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeRSSIWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeRssiWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeSecurityTypeWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeSecurityTypeWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeWiFiVersionWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeWiFiVersionWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;
}

declare class MTRBaseClusterWindowCovering extends MTRGenericBaseCluster {

	static alloc(): MTRBaseClusterWindowCovering; // inherited from NSObject

	static new(): MTRBaseClusterWindowCovering; // inherited from NSObject

	static readAttributeAcceptedCommandListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAcceptedCommandListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAttributeListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeAttributeListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeClusterRevisionWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeClusterRevisionWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeConfigStatusWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeConfigStatusWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeCurrentPositionLiftPercent100thsWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeCurrentPositionLiftPercent100thsWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeCurrentPositionLiftPercentageWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeCurrentPositionLiftPercentageWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeCurrentPositionLiftWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeCurrentPositionLiftWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeCurrentPositionTiltPercent100thsWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeCurrentPositionTiltPercent100thsWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeCurrentPositionTiltPercentageWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeCurrentPositionTiltPercentageWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeCurrentPositionTiltWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeCurrentPositionTiltWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeEndProductTypeWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeEndProductTypeWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeFeatureMapWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeFeatureMapWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeGeneratedCommandListWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeGeneratedCommandListWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<any>, p2: NSError) => void): void;

	static readAttributeInstalledClosedLimitLiftWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeInstalledClosedLimitLiftWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeInstalledClosedLimitTiltWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeInstalledClosedLimitTiltWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeInstalledOpenLimitLiftWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeInstalledOpenLimitLiftWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeInstalledOpenLimitTiltWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeInstalledOpenLimitTiltWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeModeWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeModeWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeNumberOfActuationsLiftWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeNumberOfActuationsLiftWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeNumberOfActuationsTiltWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeNumberOfActuationsTiltWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeOperationalStatusWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeOperationalStatusWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributePhysicalClosedLimitLiftWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributePhysicalClosedLimitLiftWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributePhysicalClosedLimitTiltWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributePhysicalClosedLimitTiltWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeSafetyStatusWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeSafetyStatusWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeTargetPositionLiftPercent100thsWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeTargetPositionLiftPercent100thsWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeTargetPositionTiltPercent100thsWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeTargetPositionTiltPercent100thsWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	static readAttributeTypeWithAttributeCacheEndpointQueueCompletionHandler(attributeCacheContainer: MTRAttributeCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: number, p2: NSError) => void): void;

	static readAttributeTypeWithClusterStateCacheEndpointQueueCompletion(clusterStateCacheContainer: MTRClusterStateCacheContainer, endpoint: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: number, p2: NSError) => void): void;

	constructor(o: { device: MTRBaseDevice; endpointID: number; queue: interop.Pointer | interop.Reference<any>; });

	constructor(o: { device: MTRBaseDevice; endpoint: number; queue: interop.Pointer | interop.Reference<any>; });

	downOrCloseWithCompletion(completion: (p1: NSError) => void): void;

	downOrCloseWithCompletionHandler(completionHandler: (p1: NSError) => void): void;

	downOrCloseWithParamsCompletion(params: MTRWindowCoveringClusterDownOrCloseParams, completion: (p1: NSError) => void): void;

	downOrCloseWithParamsCompletionHandler(params: MTRWindowCoveringClusterDownOrCloseParams, completionHandler: (p1: NSError) => void): void;

	goToLiftPercentageWithParamsCompletion(params: MTRWindowCoveringClusterGoToLiftPercentageParams, completion: (p1: NSError) => void): void;

	goToLiftPercentageWithParamsCompletionHandler(params: MTRWindowCoveringClusterGoToLiftPercentageParams, completionHandler: (p1: NSError) => void): void;

	goToLiftValueWithParamsCompletion(params: MTRWindowCoveringClusterGoToLiftValueParams, completion: (p1: NSError) => void): void;

	goToLiftValueWithParamsCompletionHandler(params: MTRWindowCoveringClusterGoToLiftValueParams, completionHandler: (p1: NSError) => void): void;

	goToTiltPercentageWithParamsCompletion(params: MTRWindowCoveringClusterGoToTiltPercentageParams, completion: (p1: NSError) => void): void;

	goToTiltPercentageWithParamsCompletionHandler(params: MTRWindowCoveringClusterGoToTiltPercentageParams, completionHandler: (p1: NSError) => void): void;

	goToTiltValueWithParamsCompletion(params: MTRWindowCoveringClusterGoToTiltValueParams, completion: (p1: NSError) => void): void;

	goToTiltValueWithParamsCompletionHandler(params: MTRWindowCoveringClusterGoToTiltValueParams, completionHandler: (p1: NSError) => void): void;

	initWithDeviceEndpointIDQueue(device: MTRBaseDevice, endpointID: number, queue: interop.Pointer | interop.Reference<any>): this;

	initWithDeviceEndpointQueue(device: MTRBaseDevice, endpoint: number, queue: interop.Pointer | interop.Reference<any>): this;

	readAttributeAcceptedCommandListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAcceptedCommandListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAttributeListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeAttributeListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeClusterRevisionWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeClusterRevisionWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeConfigStatusWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeConfigStatusWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeCurrentPositionLiftPercent100thsWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeCurrentPositionLiftPercent100thsWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeCurrentPositionLiftPercentageWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeCurrentPositionLiftPercentageWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeCurrentPositionLiftWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeCurrentPositionLiftWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeCurrentPositionTiltPercent100thsWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeCurrentPositionTiltPercent100thsWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeCurrentPositionTiltPercentageWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeCurrentPositionTiltPercentageWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeCurrentPositionTiltWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeCurrentPositionTiltWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeEndProductTypeWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeEndProductTypeWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeFeatureMapWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeFeatureMapWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeGeneratedCommandListWithCompletion(completion: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeGeneratedCommandListWithCompletionHandler(completionHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	readAttributeInstalledClosedLimitLiftWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeInstalledClosedLimitLiftWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeInstalledClosedLimitTiltWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeInstalledClosedLimitTiltWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeInstalledOpenLimitLiftWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeInstalledOpenLimitLiftWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeInstalledOpenLimitTiltWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeInstalledOpenLimitTiltWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeModeWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeModeWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeNumberOfActuationsLiftWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeNumberOfActuationsLiftWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeNumberOfActuationsTiltWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeNumberOfActuationsTiltWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeOperationalStatusWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeOperationalStatusWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributePhysicalClosedLimitLiftWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributePhysicalClosedLimitLiftWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributePhysicalClosedLimitTiltWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributePhysicalClosedLimitTiltWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeSafetyStatusWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeSafetyStatusWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeTargetPositionLiftPercent100thsWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeTargetPositionLiftPercent100thsWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeTargetPositionTiltPercent100thsWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeTargetPositionTiltPercent100thsWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	readAttributeTypeWithCompletion(completion: (p1: number, p2: NSError) => void): void;

	readAttributeTypeWithCompletionHandler(completionHandler: (p1: number, p2: NSError) => void): void;

	stopMotionWithCompletion(completion: (p1: NSError) => void): void;

	stopMotionWithCompletionHandler(completionHandler: (p1: NSError) => void): void;

	stopMotionWithParamsCompletion(params: MTRWindowCoveringClusterStopMotionParams, completion: (p1: NSError) => void): void;

	stopMotionWithParamsCompletionHandler(params: MTRWindowCoveringClusterStopMotionParams, completionHandler: (p1: NSError) => void): void;

	subscribeAttributeAcceptedCommandListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAcceptedCommandListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAttributeListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeAttributeListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeClusterRevisionWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeClusterRevisionWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeConfigStatusWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeConfigStatusWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeCurrentPositionLiftPercent100thsWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeCurrentPositionLiftPercent100thsWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeCurrentPositionLiftPercentageWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeCurrentPositionLiftPercentageWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeCurrentPositionLiftWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeCurrentPositionLiftWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeCurrentPositionTiltPercent100thsWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeCurrentPositionTiltPercent100thsWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeCurrentPositionTiltPercentageWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeCurrentPositionTiltPercentageWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeCurrentPositionTiltWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeCurrentPositionTiltWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeEndProductTypeWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeEndProductTypeWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeFeatureMapWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeFeatureMapWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeGeneratedCommandListWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeGeneratedCommandListWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: NSArray<any>, p2: NSError) => void): void;

	subscribeAttributeInstalledClosedLimitLiftWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeInstalledClosedLimitLiftWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeInstalledClosedLimitTiltWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeInstalledClosedLimitTiltWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeInstalledOpenLimitLiftWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeInstalledOpenLimitLiftWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeInstalledOpenLimitTiltWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeInstalledOpenLimitTiltWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeModeWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeModeWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeNumberOfActuationsLiftWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeNumberOfActuationsLiftWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeNumberOfActuationsTiltWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeNumberOfActuationsTiltWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeOperationalStatusWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeOperationalStatusWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributePhysicalClosedLimitLiftWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributePhysicalClosedLimitLiftWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributePhysicalClosedLimitTiltWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributePhysicalClosedLimitTiltWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeSafetyStatusWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeSafetyStatusWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeTargetPositionLiftPercent100thsWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeTargetPositionLiftPercent100thsWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeTargetPositionTiltPercent100thsWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeTargetPositionTiltPercent100thsWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeTypeWithMinIntervalMaxIntervalParamsSubscriptionEstablishedReportHandler(minInterval: number, maxInterval: number, params: MTRSubscribeParams, subscriptionEstablishedHandler: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	subscribeAttributeTypeWithParamsSubscriptionEstablishedReportHandler(params: MTRSubscribeParams, subscriptionEstablished: () => void, reportHandler: (p1: number, p2: NSError) => void): void;

	upOrOpenWithCompletion(completion: (p1: NSError) => void): void;

	upOrOpenWithCompletionHandler(completionHandler: (p1: NSError) => void): void;

	upOrOpenWithParamsCompletion(params: MTRWindowCoveringClusterUpOrOpenParams, completion: (p1: NSError) => void): void;

	upOrOpenWithParamsCompletionHandler(params: MTRWindowCoveringClusterUpOrOpenParams, completionHandler: (p1: NSError) => void): void;

	writeAttributeModeWithValueCompletion(value: number, completion: (p1: NSError) => void): void;

	writeAttributeModeWithValueCompletionHandler(value: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeModeWithValueParamsCompletion(value: number, params: MTRWriteParams, completion: (p1: NSError) => void): void;

	writeAttributeModeWithValueParamsCompletionHandler(value: number, params: MTRWriteParams, completionHandler: (p1: NSError) => void): void;
}

declare class MTRBaseDevice extends NSObject {

	static alloc(): MTRBaseDevice; // inherited from NSObject

	static deviceWithNodeIDController(nodeID: number, controller: MTRDeviceController): MTRBaseDevice;

	static new(): MTRBaseDevice; // inherited from NSObject

	readonly sessionTransportType: MTRTransportType;

	deregisterReportHandlersWithClientQueueCompletion(queue: interop.Pointer | interop.Reference<any>, completion: () => void): void;

	deregisterReportHandlersWithQueueCompletion(queue: interop.Pointer | interop.Reference<any>, completion: () => void): void;

	invokeCommandWithEndpointIDClusterIDCommandIDCommandFieldsTimedInvokeTimeoutQueueCompletion(endpointID: number, clusterID: number, commandID: number, commandFields: any, timeoutMs: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<NSDictionary<string, any>>, p2: NSError) => void): void;

	invokeCommandWithEndpointIdClusterIdCommandIdCommandFieldsTimedInvokeTimeoutClientQueueCompletion(endpointId: number, clusterId: number, commandId: number, commandFields: any, timeoutMs: number, clientQueue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<NSDictionary<string, any>>, p2: NSError) => void): void;

	openCommissioningWindowWithDiscriminatorDurationQueueCompletion(discriminator: number, duration: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: MTRSetupPayload, p2: NSError) => void): void;

	openCommissioningWindowWithSetupPasscodeDiscriminatorDurationQueueCompletion(setupPasscode: number, discriminator: number, duration: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: MTRSetupPayload, p2: NSError) => void): void;

	readAttributePathsEventPathsParamsQueueCompletion(attributePaths: NSArray<MTRAttributeRequestPath> | MTRAttributeRequestPath[], eventPaths: NSArray<MTREventRequestPath> | MTREventRequestPath[], params: MTRReadParams, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<NSDictionary<string, any>>, p2: NSError) => void): void;

	readAttributeWithEndpointIdClusterIdAttributeIdParamsClientQueueCompletion(endpointId: number, clusterId: number, attributeId: number, params: MTRReadParams, clientQueue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<NSDictionary<string, any>>, p2: NSError) => void): void;

	readAttributesWithEndpointIDClusterIDAttributeIDParamsQueueCompletion(endpointID: number, clusterID: number, attributeID: number, params: MTRReadParams, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<NSDictionary<string, any>>, p2: NSError) => void): void;

	readEventsWithEndpointIDClusterIDEventIDParamsQueueCompletion(endpointID: number, clusterID: number, eventID: number, params: MTRReadParams, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<NSDictionary<string, any>>, p2: NSError) => void): void;

	subscribeAttributeWithEndpointIdClusterIdAttributeIdMinIntervalMaxIntervalParamsClientQueueReportHandlerSubscriptionEstablished(endpointId: number, clusterId: number, attributeId: number, minInterval: number, maxInterval: number, params: MTRSubscribeParams, clientQueue: interop.Pointer | interop.Reference<any>, reportHandler: (p1: NSArray<NSDictionary<string, any>>, p2: NSError) => void, subscriptionEstablishedHandler: () => void): void;

	subscribeToAttributePathsEventPathsParamsQueueReportHandlerSubscriptionEstablishedResubscriptionScheduled(attributePaths: NSArray<MTRAttributeRequestPath> | MTRAttributeRequestPath[], eventPaths: NSArray<MTREventRequestPath> | MTREventRequestPath[], params: MTRSubscribeParams, queue: interop.Pointer | interop.Reference<any>, reportHandler: (p1: NSArray<NSDictionary<string, any>>, p2: NSError) => void, subscriptionEstablished: () => void, resubscriptionScheduled: (p1: NSError, p2: number) => void): void;

	subscribeToAttributesWithEndpointIDClusterIDAttributeIDParamsQueueReportHandlerSubscriptionEstablished(endpointID: number, clusterID: number, attributeID: number, params: MTRSubscribeParams, queue: interop.Pointer | interop.Reference<any>, reportHandler: (p1: NSArray<NSDictionary<string, any>>, p2: NSError) => void, subscriptionEstablished: () => void): void;

	subscribeToEventsWithEndpointIDClusterIDEventIDParamsQueueReportHandlerSubscriptionEstablished(endpointID: number, clusterID: number, eventID: number, params: MTRSubscribeParams, queue: interop.Pointer | interop.Reference<any>, reportHandler: (p1: NSArray<NSDictionary<string, any>>, p2: NSError) => void, subscriptionEstablished: () => void): void;

	subscribeWithQueueMinIntervalMaxIntervalParamsCacheContainerAttributeReportHandlerEventReportHandlerErrorHandlerSubscriptionEstablishedResubscriptionScheduled(queue: interop.Pointer | interop.Reference<any>, minInterval: number, maxInterval: number, params: MTRSubscribeParams, attributeCacheContainer: MTRAttributeCacheContainer, attributeReportHandler: (p1: NSArray<any>) => void, eventReportHandler: (p1: NSArray<any>) => void, errorHandler: (p1: NSError) => void, subscriptionEstablishedHandler: () => void, resubscriptionScheduledHandler: (p1: NSError, p2: number) => void): void;

	subscribeWithQueueParamsClusterStateCacheContainerAttributeReportHandlerEventReportHandlerErrorHandlerSubscriptionEstablishedResubscriptionScheduled(queue: interop.Pointer | interop.Reference<any>, params: MTRSubscribeParams, clusterStateCacheContainer: MTRClusterStateCacheContainer, attributeReportHandler: (p1: NSArray<any>) => void, eventReportHandler: (p1: NSArray<any>) => void, errorHandler: (p1: NSError) => void, subscriptionEstablished: () => void, resubscriptionScheduled: (p1: NSError, p2: number) => void): void;

	writeAttributeWithEndpointIDClusterIDAttributeIDValueTimedWriteTimeoutQueueCompletion(endpointID: number, clusterID: number, attributeID: number, value: any, timeoutMs: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<NSDictionary<string, any>>, p2: NSError) => void): void;

	writeAttributeWithEndpointIdClusterIdAttributeIdValueTimedWriteTimeoutClientQueueCompletion(endpointId: number, clusterId: number, attributeId: number, value: any, timeoutMs: number, clientQueue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<NSDictionary<string, any>>, p2: NSError) => void): void;
}

declare class MTRBasicClusterCapabilityMinimaStruct extends MTRBasicInformationClusterCapabilityMinimaStruct {

	static alloc(): MTRBasicClusterCapabilityMinimaStruct; // inherited from NSObject

	static new(): MTRBasicClusterCapabilityMinimaStruct; // inherited from NSObject
}

declare class MTRBasicClusterLeaveEvent extends MTRBasicInformationClusterLeaveEvent {

	static alloc(): MTRBasicClusterLeaveEvent; // inherited from NSObject

	static new(): MTRBasicClusterLeaveEvent; // inherited from NSObject
}

declare class MTRBasicClusterMfgSpecificPingParams extends NSObject implements NSCopying {

	static alloc(): MTRBasicClusterMfgSpecificPingParams; // inherited from NSObject

	static new(): MTRBasicClusterMfgSpecificPingParams; // inherited from NSObject

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRBasicClusterReachableChangedEvent extends MTRBasicInformationClusterReachableChangedEvent {

	static alloc(): MTRBasicClusterReachableChangedEvent; // inherited from NSObject

	static new(): MTRBasicClusterReachableChangedEvent; // inherited from NSObject
}

declare class MTRBasicClusterShutDownEvent extends MTRBasicInformationClusterShutDownEvent {

	static alloc(): MTRBasicClusterShutDownEvent; // inherited from NSObject

	static new(): MTRBasicClusterShutDownEvent; // inherited from NSObject
}

declare class MTRBasicClusterStartUpEvent extends MTRBasicInformationClusterStartUpEvent {

	static alloc(): MTRBasicClusterStartUpEvent; // inherited from NSObject

	static new(): MTRBasicClusterStartUpEvent; // inherited from NSObject
}

declare class MTRBasicInformationClusterCapabilityMinimaStruct extends NSObject implements NSCopying {

	static alloc(): MTRBasicInformationClusterCapabilityMinimaStruct; // inherited from NSObject

	static new(): MTRBasicInformationClusterCapabilityMinimaStruct; // inherited from NSObject

	caseSessionsPerFabric: number;

	subscriptionsPerFabric: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRBasicInformationClusterLeaveEvent extends NSObject implements NSCopying {

	static alloc(): MTRBasicInformationClusterLeaveEvent; // inherited from NSObject

	static new(): MTRBasicInformationClusterLeaveEvent; // inherited from NSObject

	fabricIndex: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRBasicInformationClusterProductAppearanceStruct extends NSObject implements NSCopying {

	static alloc(): MTRBasicInformationClusterProductAppearanceStruct; // inherited from NSObject

	static new(): MTRBasicInformationClusterProductAppearanceStruct; // inherited from NSObject

	finish: number;

	primaryColor: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRBasicInformationClusterReachableChangedEvent extends NSObject implements NSCopying {

	static alloc(): MTRBasicInformationClusterReachableChangedEvent; // inherited from NSObject

	static new(): MTRBasicInformationClusterReachableChangedEvent; // inherited from NSObject

	reachableNewValue: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRBasicInformationClusterShutDownEvent extends NSObject implements NSCopying {

	static alloc(): MTRBasicInformationClusterShutDownEvent; // inherited from NSObject

	static new(): MTRBasicInformationClusterShutDownEvent; // inherited from NSObject

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRBasicInformationClusterStartUpEvent extends NSObject implements NSCopying {

	static alloc(): MTRBasicInformationClusterStartUpEvent; // inherited from NSObject

	static new(): MTRBasicInformationClusterStartUpEvent; // inherited from NSObject

	softwareVersion: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare const enum MTRBasicInformationColor {

	Black = 0,

	Navy = 1,

	Green = 2,

	Teal = 3,

	Maroon = 4,

	Purple = 5,

	Olive = 6,

	Gray = 7,

	Blue = 8,

	Lime = 9,

	Aqua = 10,

	Red = 11,

	Fuchsia = 12,

	Yellow = 13,

	White = 14,

	Nickel = 15,

	Chrome = 16,

	Brass = 17,

	Copper = 18,

	Silver = 19,

	Gold = 20
}

declare const enum MTRBasicInformationProductFinish {

	Other = 0,

	Matte = 1,

	Satin = 2,

	Polished = 3,

	Rugged = 4,

	Fabric = 5
}

declare class MTRBindingClusterTargetStruct extends NSObject implements NSCopying {

	static alloc(): MTRBindingClusterTargetStruct; // inherited from NSObject

	static new(): MTRBindingClusterTargetStruct; // inherited from NSObject

	cluster: number;

	endpoint: number;

	fabricIndex: number;

	group: number;

	node: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRBooleanStateClusterStateChangeEvent extends NSObject implements NSCopying {

	static alloc(): MTRBooleanStateClusterStateChangeEvent; // inherited from NSObject

	static new(): MTRBooleanStateClusterStateChangeEvent; // inherited from NSObject

	stateValue: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare var MTRBooleanValueType: string;

declare class MTRBridgedDeviceBasicClusterLeaveEvent extends MTRBridgedDeviceBasicInformationClusterLeaveEvent {

	static alloc(): MTRBridgedDeviceBasicClusterLeaveEvent; // inherited from NSObject

	static new(): MTRBridgedDeviceBasicClusterLeaveEvent; // inherited from NSObject
}

declare class MTRBridgedDeviceBasicClusterReachableChangedEvent extends MTRBridgedDeviceBasicInformationClusterReachableChangedEvent {

	static alloc(): MTRBridgedDeviceBasicClusterReachableChangedEvent; // inherited from NSObject

	static new(): MTRBridgedDeviceBasicClusterReachableChangedEvent; // inherited from NSObject
}

declare class MTRBridgedDeviceBasicClusterShutDownEvent extends MTRBridgedDeviceBasicInformationClusterShutDownEvent {

	static alloc(): MTRBridgedDeviceBasicClusterShutDownEvent; // inherited from NSObject

	static new(): MTRBridgedDeviceBasicClusterShutDownEvent; // inherited from NSObject
}

declare class MTRBridgedDeviceBasicClusterStartUpEvent extends MTRBridgedDeviceBasicInformationClusterStartUpEvent {

	static alloc(): MTRBridgedDeviceBasicClusterStartUpEvent; // inherited from NSObject

	static new(): MTRBridgedDeviceBasicClusterStartUpEvent; // inherited from NSObject
}

declare class MTRBridgedDeviceBasicInformationClusterLeaveEvent extends NSObject implements NSCopying {

	static alloc(): MTRBridgedDeviceBasicInformationClusterLeaveEvent; // inherited from NSObject

	static new(): MTRBridgedDeviceBasicInformationClusterLeaveEvent; // inherited from NSObject

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRBridgedDeviceBasicInformationClusterProductAppearanceStruct extends NSObject implements NSCopying {

	static alloc(): MTRBridgedDeviceBasicInformationClusterProductAppearanceStruct; // inherited from NSObject

	static new(): MTRBridgedDeviceBasicInformationClusterProductAppearanceStruct; // inherited from NSObject

	finish: number;

	primaryColor: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRBridgedDeviceBasicInformationClusterReachableChangedEvent extends NSObject implements NSCopying {

	static alloc(): MTRBridgedDeviceBasicInformationClusterReachableChangedEvent; // inherited from NSObject

	static new(): MTRBridgedDeviceBasicInformationClusterReachableChangedEvent; // inherited from NSObject

	reachableNewValue: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRBridgedDeviceBasicInformationClusterShutDownEvent extends NSObject implements NSCopying {

	static alloc(): MTRBridgedDeviceBasicInformationClusterShutDownEvent; // inherited from NSObject

	static new(): MTRBridgedDeviceBasicInformationClusterShutDownEvent; // inherited from NSObject

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRBridgedDeviceBasicInformationClusterStartUpEvent extends NSObject implements NSCopying {

	static alloc(): MTRBridgedDeviceBasicInformationClusterStartUpEvent; // inherited from NSObject

	static new(): MTRBridgedDeviceBasicInformationClusterStartUpEvent; // inherited from NSObject

	softwareVersion: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare const enum MTRBridgedDeviceBasicInformationColor {

	Black = 0,

	Navy = 1,

	Green = 2,

	Teal = 3,

	Maroon = 4,

	Purple = 5,

	Olive = 6,

	Gray = 7,

	Blue = 8,

	Lime = 9,

	Aqua = 10,

	Red = 11,

	Fuchsia = 12,

	Yellow = 13,

	White = 14,

	Nickel = 15,

	Chrome = 16,

	Brass = 17,

	Copper = 18,

	Silver = 19,

	Gold = 20
}

declare const enum MTRBridgedDeviceBasicInformationProductFinish {

	Other = 0,

	Matte = 1,

	Satin = 2,

	Polished = 3,

	Rugged = 4,

	Fabric = 5
}

declare class MTRCertificateInfo extends NSObject implements NSCopying {

	static alloc(): MTRCertificateInfo; // inherited from NSObject

	static new(): MTRCertificateInfo; // inherited from NSObject

	readonly issuer: MTRDistinguishedNameInfo;

	readonly notAfter: Date;

	readonly notBefore: Date;

	readonly subject: MTRDistinguishedNameInfo;

	constructor(o: { TLVBytes: NSData; });

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;

	initWithTLVBytes(bytes: NSData): this;
}

declare class MTRCertificates extends NSObject {

	static alloc(): MTRCertificates; // inherited from NSObject

	static convertMatterCertificate(matterCertificate: NSData): NSData;

	static convertX509Certificate(x509Certificate: NSData): NSData;

	static createCertificateSigningRequestError(keypair: MTRKeypair): NSData;

	static createIntermediateCertificateRootCertificateIntermediatePublicKeyIssuerIDFabricIDError(rootKeypair: MTRKeypair, rootCertificate: NSData, intermediatePublicKey: any, issuerID: number, fabricID: number): NSData;

	static createIntermediateCertificateRootCertificateIntermediatePublicKeyIssuerIDFabricIDValidityPeriodError(rootKeypair: MTRKeypair, rootCertificate: NSData, intermediatePublicKey: any, issuerID: number, fabricID: number, validityPeriod: NSDateInterval): NSData;

	static createOperationalCertificateSigningCertificateOperationalPublicKeyFabricIDNodeIDCaseAuthenticatedTagsError(signingKeypair: MTRKeypair, signingCertificate: NSData, operationalPublicKey: any, fabricID: number, nodeID: number, caseAuthenticatedTags: NSSet<number>): NSData;

	static createOperationalCertificateSigningCertificateOperationalPublicKeyFabricIDNodeIDCaseAuthenticatedTagsValidityPeriodError(signingKeypair: MTRKeypair, signingCertificate: NSData, operationalPublicKey: any, fabricID: number, nodeID: number, caseAuthenticatedTags: NSSet<number>, validityPeriod: NSDateInterval): NSData;

	static createRootCertificateIssuerIDFabricIDError(keypair: MTRKeypair, issuerID: number, fabricID: number): NSData;

	static createRootCertificateIssuerIDFabricIDValidityPeriodError(keypair: MTRKeypair, issuerID: number, fabricID: number, validityPeriod: NSDateInterval): NSData;

	static generateCertificateSigningRequestError(keypair: MTRKeypair): NSData;

	static generateIntermediateCertificateRootCertificateIntermediatePublicKeyIssuerIdFabricIdError(rootKeypair: MTRKeypair, rootCertificate: NSData, intermediatePublicKey: any, issuerId: number, fabricId: number): NSData;

	static generateOperationalCertificateSigningCertificateOperationalPublicKeyFabricIdNodeIdCaseAuthenticatedTagsError(signingKeypair: MTRKeypair, signingCertificate: NSData, operationalPublicKey: any, fabricId: number, nodeId: number, caseAuthenticatedTags: NSArray<number> | number[]): NSData;

	static generateRootCertificateIssuerIdFabricIdError(keypair: MTRKeypair, issuerId: number, fabricId: number): NSData;

	static isCertificateEqualTo(certificate1: NSData, certificate2: NSData): boolean;

	static keypairMatchesCertificate(keypair: MTRKeypair, certificate: NSData): boolean;

	static new(): MTRCertificates; // inherited from NSObject

	static publicKeyFromCSRError(csr: NSData): NSData;
}

declare class MTRChannelClusterChangeChannelByNumberParams extends NSObject implements NSCopying {

	static alloc(): MTRChannelClusterChangeChannelByNumberParams; // inherited from NSObject

	static new(): MTRChannelClusterChangeChannelByNumberParams; // inherited from NSObject

	majorNumber: number;

	minorNumber: number;

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRChannelClusterChangeChannelParams extends NSObject implements NSCopying {

	static alloc(): MTRChannelClusterChangeChannelParams; // inherited from NSObject

	static new(): MTRChannelClusterChangeChannelParams; // inherited from NSObject

	match: string;

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRChannelClusterChangeChannelResponseParams extends NSObject implements NSCopying {

	static alloc(): MTRChannelClusterChangeChannelResponseParams; // inherited from NSObject

	static new(): MTRChannelClusterChangeChannelResponseParams; // inherited from NSObject

	data: string;

	status: number;

	timedInvokeTimeoutMs: number;

	constructor(o: { responseValue: NSDictionary<string, any>; });

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;

	initWithResponseValueError(responseValue: NSDictionary<string, any>): this;
}

declare class MTRChannelClusterChannelInfo extends MTRChannelClusterChannelInfoStruct {

	static alloc(): MTRChannelClusterChannelInfo; // inherited from NSObject

	static new(): MTRChannelClusterChannelInfo; // inherited from NSObject
}

declare class MTRChannelClusterChannelInfoStruct extends NSObject implements NSCopying {

	static alloc(): MTRChannelClusterChannelInfoStruct; // inherited from NSObject

	static new(): MTRChannelClusterChannelInfoStruct; // inherited from NSObject

	affiliateCallSign: string;

	callSign: string;

	majorNumber: number;

	minorNumber: number;

	name: string;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRChannelClusterLineupInfo extends MTRChannelClusterLineupInfoStruct {

	static alloc(): MTRChannelClusterLineupInfo; // inherited from NSObject

	static new(): MTRChannelClusterLineupInfo; // inherited from NSObject
}

declare class MTRChannelClusterLineupInfoStruct extends NSObject implements NSCopying {

	static alloc(): MTRChannelClusterLineupInfoStruct; // inherited from NSObject

	static new(): MTRChannelClusterLineupInfoStruct; // inherited from NSObject

	lineupInfoType: number;

	lineupName: string;

	operatorName: string;

	postalCode: string;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRChannelClusterSkipChannelParams extends NSObject implements NSCopying {

	static alloc(): MTRChannelClusterSkipChannelParams; // inherited from NSObject

	static new(): MTRChannelClusterSkipChannelParams; // inherited from NSObject

	count: number;

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare const enum MTRChannelFeature {

	ChannelList = 1,

	LineupInfo = 2,

	ElectronicGuide = 3,

	RecordProgram = 4
}

declare const enum MTRChannelLineupInfoType {

	MSO = 0,

	Mso = 0
}

declare const enum MTRChannelStatus {

	Success = 0,

	MultipleMatches = 1,

	NoMatches = 2
}

declare class MTRCluster extends NSObject {

	static alloc(): MTRCluster; // inherited from NSObject

	static new(): MTRCluster; // inherited from NSObject

	readonly endpointID: number;
}

declare class MTRClusterAccessControl extends MTRGenericCluster {

	static alloc(): MTRClusterAccessControl; // inherited from NSObject

	static new(): MTRClusterAccessControl; // inherited from NSObject

	constructor(o: { device: MTRDevice; endpointID: number; queue: interop.Pointer | interop.Reference<any>; });

	constructor(o: { device: MTRDevice; endpoint: number; queue: interop.Pointer | interop.Reference<any>; });

	initWithDeviceEndpointIDQueue(device: MTRDevice, endpointID: number, queue: interop.Pointer | interop.Reference<any>): this;

	initWithDeviceEndpointQueue(device: MTRDevice, endpoint: number, queue: interop.Pointer | interop.Reference<any>): this;

	readAttributeACLWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeAcceptedCommandListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeAccessControlEntriesPerFabricWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeAclWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeAttributeListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeClusterRevisionWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeExtensionWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeFeatureMapWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeGeneratedCommandListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeSubjectsPerAccessControlEntryWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeTargetsPerAccessControlEntryWithParams(params: MTRReadParams): NSDictionary<string, any>;

	writeAttributeACLWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeACLWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeAclWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeAclWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeExtensionWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeExtensionWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;
}

declare class MTRClusterAccountLogin extends MTRGenericCluster {

	static alloc(): MTRClusterAccountLogin; // inherited from NSObject

	static new(): MTRClusterAccountLogin; // inherited from NSObject

	constructor(o: { device: MTRDevice; endpointID: number; queue: interop.Pointer | interop.Reference<any>; });

	constructor(o: { device: MTRDevice; endpoint: number; queue: interop.Pointer | interop.Reference<any>; });

	getSetupPINWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRAccountLoginClusterGetSetupPINParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: MTRAccountLoginClusterGetSetupPINResponseParams, p2: NSError) => void): void;

	getSetupPINWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRAccountLoginClusterGetSetupPINParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: MTRAccountLoginClusterGetSetupPINResponseParams, p2: NSError) => void): void;

	initWithDeviceEndpointIDQueue(device: MTRDevice, endpointID: number, queue: interop.Pointer | interop.Reference<any>): this;

	initWithDeviceEndpointQueue(device: MTRDevice, endpoint: number, queue: interop.Pointer | interop.Reference<any>): this;

	loginWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRAccountLoginClusterLoginParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: NSError) => void): void;

	loginWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRAccountLoginClusterLoginParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: NSError) => void): void;

	logoutWithExpectedValuesExpectedValueIntervalCompletion(expectedValues: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: NSError) => void): void;

	logoutWithExpectedValuesExpectedValueIntervalCompletionHandler(expectedValues: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: NSError) => void): void;

	logoutWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRAccountLoginClusterLogoutParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: NSError) => void): void;

	logoutWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRAccountLoginClusterLogoutParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: NSError) => void): void;

	readAttributeAcceptedCommandListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeAttributeListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeClusterRevisionWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeFeatureMapWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeGeneratedCommandListWithParams(params: MTRReadParams): NSDictionary<string, any>;
}

declare class MTRClusterActions extends MTRGenericCluster {

	static alloc(): MTRClusterActions; // inherited from NSObject

	static new(): MTRClusterActions; // inherited from NSObject

	constructor(o: { device: MTRDevice; endpointID: number; queue: interop.Pointer | interop.Reference<any>; });

	constructor(o: { device: MTRDevice; endpoint: number; queue: interop.Pointer | interop.Reference<any>; });

	disableActionWithDurationWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRActionsClusterDisableActionWithDurationParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: NSError) => void): void;

	disableActionWithDurationWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRActionsClusterDisableActionWithDurationParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: NSError) => void): void;

	disableActionWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRActionsClusterDisableActionParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: NSError) => void): void;

	disableActionWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRActionsClusterDisableActionParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: NSError) => void): void;

	enableActionWithDurationWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRActionsClusterEnableActionWithDurationParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: NSError) => void): void;

	enableActionWithDurationWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRActionsClusterEnableActionWithDurationParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: NSError) => void): void;

	enableActionWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRActionsClusterEnableActionParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: NSError) => void): void;

	enableActionWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRActionsClusterEnableActionParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: NSError) => void): void;

	initWithDeviceEndpointIDQueue(device: MTRDevice, endpointID: number, queue: interop.Pointer | interop.Reference<any>): this;

	initWithDeviceEndpointQueue(device: MTRDevice, endpoint: number, queue: interop.Pointer | interop.Reference<any>): this;

	instantActionWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRActionsClusterInstantActionParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: NSError) => void): void;

	instantActionWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRActionsClusterInstantActionParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: NSError) => void): void;

	instantActionWithTransitionWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRActionsClusterInstantActionWithTransitionParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: NSError) => void): void;

	instantActionWithTransitionWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRActionsClusterInstantActionWithTransitionParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: NSError) => void): void;

	pauseActionWithDurationWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRActionsClusterPauseActionWithDurationParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: NSError) => void): void;

	pauseActionWithDurationWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRActionsClusterPauseActionWithDurationParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: NSError) => void): void;

	pauseActionWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRActionsClusterPauseActionParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: NSError) => void): void;

	pauseActionWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRActionsClusterPauseActionParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: NSError) => void): void;

	readAttributeAcceptedCommandListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeActionListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeAttributeListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeClusterRevisionWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeEndpointListsWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeFeatureMapWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeGeneratedCommandListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeSetupURLWithParams(params: MTRReadParams): NSDictionary<string, any>;

	resumeActionWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRActionsClusterResumeActionParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: NSError) => void): void;

	resumeActionWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRActionsClusterResumeActionParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: NSError) => void): void;

	startActionWithDurationWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRActionsClusterStartActionWithDurationParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: NSError) => void): void;

	startActionWithDurationWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRActionsClusterStartActionWithDurationParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: NSError) => void): void;

	startActionWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRActionsClusterStartActionParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: NSError) => void): void;

	startActionWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRActionsClusterStartActionParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: NSError) => void): void;

	stopActionWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRActionsClusterStopActionParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: NSError) => void): void;

	stopActionWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRActionsClusterStopActionParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: NSError) => void): void;
}

declare class MTRClusterAdministratorCommissioning extends MTRGenericCluster {

	static alloc(): MTRClusterAdministratorCommissioning; // inherited from NSObject

	static new(): MTRClusterAdministratorCommissioning; // inherited from NSObject

	constructor(o: { device: MTRDevice; endpointID: number; queue: interop.Pointer | interop.Reference<any>; });

	constructor(o: { device: MTRDevice; endpoint: number; queue: interop.Pointer | interop.Reference<any>; });

	initWithDeviceEndpointIDQueue(device: MTRDevice, endpointID: number, queue: interop.Pointer | interop.Reference<any>): this;

	initWithDeviceEndpointQueue(device: MTRDevice, endpoint: number, queue: interop.Pointer | interop.Reference<any>): this;

	openBasicCommissioningWindowWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRAdministratorCommissioningClusterOpenBasicCommissioningWindowParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: NSError) => void): void;

	openBasicCommissioningWindowWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRAdministratorCommissioningClusterOpenBasicCommissioningWindowParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: NSError) => void): void;

	openCommissioningWindowWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRAdministratorCommissioningClusterOpenCommissioningWindowParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: NSError) => void): void;

	openCommissioningWindowWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRAdministratorCommissioningClusterOpenCommissioningWindowParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: NSError) => void): void;

	readAttributeAcceptedCommandListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeAdminFabricIndexWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeAdminVendorIdWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeAttributeListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeClusterRevisionWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeFeatureMapWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeGeneratedCommandListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeWindowStatusWithParams(params: MTRReadParams): NSDictionary<string, any>;

	revokeCommissioningWithExpectedValuesExpectedValueIntervalCompletion(expectedValues: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: NSError) => void): void;

	revokeCommissioningWithExpectedValuesExpectedValueIntervalCompletionHandler(expectedValues: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: NSError) => void): void;

	revokeCommissioningWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRAdministratorCommissioningClusterRevokeCommissioningParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: NSError) => void): void;

	revokeCommissioningWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRAdministratorCommissioningClusterRevokeCommissioningParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: NSError) => void): void;
}

declare class MTRClusterApplicationBasic extends MTRGenericCluster {

	static alloc(): MTRClusterApplicationBasic; // inherited from NSObject

	static new(): MTRClusterApplicationBasic; // inherited from NSObject

	constructor(o: { device: MTRDevice; endpointID: number; queue: interop.Pointer | interop.Reference<any>; });

	constructor(o: { device: MTRDevice; endpoint: number; queue: interop.Pointer | interop.Reference<any>; });

	initWithDeviceEndpointIDQueue(device: MTRDevice, endpointID: number, queue: interop.Pointer | interop.Reference<any>): this;

	initWithDeviceEndpointQueue(device: MTRDevice, endpoint: number, queue: interop.Pointer | interop.Reference<any>): this;

	readAttributeAcceptedCommandListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeAllowedVendorListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeApplicationNameWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeApplicationVersionWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeApplicationWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeAttributeListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeClusterRevisionWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeFeatureMapWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeGeneratedCommandListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeProductIDWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeStatusWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeVendorIDWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeVendorNameWithParams(params: MTRReadParams): NSDictionary<string, any>;
}

declare class MTRClusterApplicationLauncher extends MTRGenericCluster {

	static alloc(): MTRClusterApplicationLauncher; // inherited from NSObject

	static new(): MTRClusterApplicationLauncher; // inherited from NSObject

	constructor(o: { device: MTRDevice; endpointID: number; queue: interop.Pointer | interop.Reference<any>; });

	constructor(o: { device: MTRDevice; endpoint: number; queue: interop.Pointer | interop.Reference<any>; });

	hideAppWithExpectedValuesExpectedValueIntervalCompletion(expectedValues: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: MTRApplicationLauncherClusterLauncherResponseParams, p2: NSError) => void): void;

	hideAppWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRApplicationLauncherClusterHideAppParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: MTRApplicationLauncherClusterLauncherResponseParams, p2: NSError) => void): void;

	hideAppWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRApplicationLauncherClusterHideAppParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: MTRApplicationLauncherClusterLauncherResponseParams, p2: NSError) => void): void;

	initWithDeviceEndpointIDQueue(device: MTRDevice, endpointID: number, queue: interop.Pointer | interop.Reference<any>): this;

	initWithDeviceEndpointQueue(device: MTRDevice, endpoint: number, queue: interop.Pointer | interop.Reference<any>): this;

	launchAppWithExpectedValuesExpectedValueIntervalCompletion(expectedValues: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: MTRApplicationLauncherClusterLauncherResponseParams, p2: NSError) => void): void;

	launchAppWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRApplicationLauncherClusterLaunchAppParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: MTRApplicationLauncherClusterLauncherResponseParams, p2: NSError) => void): void;

	launchAppWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRApplicationLauncherClusterLaunchAppParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: MTRApplicationLauncherClusterLauncherResponseParams, p2: NSError) => void): void;

	readAttributeAcceptedCommandListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeAttributeListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeCatalogListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeClusterRevisionWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeCurrentAppWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeFeatureMapWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeGeneratedCommandListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	stopAppWithExpectedValuesExpectedValueIntervalCompletion(expectedValues: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: MTRApplicationLauncherClusterLauncherResponseParams, p2: NSError) => void): void;

	stopAppWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRApplicationLauncherClusterStopAppParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: MTRApplicationLauncherClusterLauncherResponseParams, p2: NSError) => void): void;

	stopAppWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRApplicationLauncherClusterStopAppParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: MTRApplicationLauncherClusterLauncherResponseParams, p2: NSError) => void): void;

	writeAttributeCurrentAppWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeCurrentAppWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;
}

declare class MTRClusterAudioOutput extends MTRGenericCluster {

	static alloc(): MTRClusterAudioOutput; // inherited from NSObject

	static new(): MTRClusterAudioOutput; // inherited from NSObject

	constructor(o: { device: MTRDevice; endpointID: number; queue: interop.Pointer | interop.Reference<any>; });

	constructor(o: { device: MTRDevice; endpoint: number; queue: interop.Pointer | interop.Reference<any>; });

	initWithDeviceEndpointIDQueue(device: MTRDevice, endpointID: number, queue: interop.Pointer | interop.Reference<any>): this;

	initWithDeviceEndpointQueue(device: MTRDevice, endpoint: number, queue: interop.Pointer | interop.Reference<any>): this;

	readAttributeAcceptedCommandListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeAttributeListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeClusterRevisionWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeCurrentOutputWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeFeatureMapWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeGeneratedCommandListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeOutputListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	renameOutputWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRAudioOutputClusterRenameOutputParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: NSError) => void): void;

	renameOutputWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRAudioOutputClusterRenameOutputParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: NSError) => void): void;

	selectOutputWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRAudioOutputClusterSelectOutputParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: NSError) => void): void;

	selectOutputWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRAudioOutputClusterSelectOutputParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: NSError) => void): void;
}

declare class MTRClusterBallastConfiguration extends MTRGenericCluster {

	static alloc(): MTRClusterBallastConfiguration; // inherited from NSObject

	static new(): MTRClusterBallastConfiguration; // inherited from NSObject

	constructor(o: { device: MTRDevice; endpointID: number; queue: interop.Pointer | interop.Reference<any>; });

	constructor(o: { device: MTRDevice; endpoint: number; queue: interop.Pointer | interop.Reference<any>; });

	initWithDeviceEndpointIDQueue(device: MTRDevice, endpointID: number, queue: interop.Pointer | interop.Reference<any>): this;

	initWithDeviceEndpointQueue(device: MTRDevice, endpoint: number, queue: interop.Pointer | interop.Reference<any>): this;

	readAttributeAcceptedCommandListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeAttributeListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeBallastFactorAdjustmentWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeBallastStatusWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeClusterRevisionWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeFeatureMapWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeGeneratedCommandListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeIntrinsicBalanceFactorWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeIntrinsicBallastFactorWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeLampAlarmModeWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeLampBurnHoursTripPointWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeLampBurnHoursWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeLampManufacturerWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeLampQuantityWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeLampRatedHoursWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeLampTypeWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeMaxLevelWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeMinLevelWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributePhysicalMaxLevelWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributePhysicalMinLevelWithParams(params: MTRReadParams): NSDictionary<string, any>;

	writeAttributeBallastFactorAdjustmentWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeBallastFactorAdjustmentWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeIntrinsicBalanceFactorWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeIntrinsicBalanceFactorWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeIntrinsicBallastFactorWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeIntrinsicBallastFactorWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeLampAlarmModeWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeLampAlarmModeWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeLampBurnHoursTripPointWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeLampBurnHoursTripPointWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeLampBurnHoursWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeLampBurnHoursWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeLampManufacturerWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeLampManufacturerWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeLampRatedHoursWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeLampRatedHoursWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeLampTypeWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeLampTypeWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeMaxLevelWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeMaxLevelWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeMinLevelWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeMinLevelWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;
}

declare class MTRClusterBarrierControl extends MTRGenericCluster {

	static alloc(): MTRClusterBarrierControl; // inherited from NSObject

	static new(): MTRClusterBarrierControl; // inherited from NSObject

	constructor(o: { device: MTRDevice; endpointID: number; queue: interop.Pointer | interop.Reference<any>; });

	constructor(o: { device: MTRDevice; endpoint: number; queue: interop.Pointer | interop.Reference<any>; });

	barrierControlGoToPercentWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRBarrierControlClusterBarrierControlGoToPercentParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: NSError) => void): void;

	barrierControlGoToPercentWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRBarrierControlClusterBarrierControlGoToPercentParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: NSError) => void): void;

	barrierControlStopWithExpectedValuesExpectedValueIntervalCompletion(expectedValues: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: NSError) => void): void;

	barrierControlStopWithExpectedValuesExpectedValueIntervalCompletionHandler(expectedValues: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: NSError) => void): void;

	barrierControlStopWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRBarrierControlClusterBarrierControlStopParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: NSError) => void): void;

	barrierControlStopWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRBarrierControlClusterBarrierControlStopParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: NSError) => void): void;

	initWithDeviceEndpointIDQueue(device: MTRDevice, endpointID: number, queue: interop.Pointer | interop.Reference<any>): this;

	initWithDeviceEndpointQueue(device: MTRDevice, endpoint: number, queue: interop.Pointer | interop.Reference<any>): this;

	readAttributeAcceptedCommandListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeAttributeListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeBarrierCapabilitiesWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeBarrierCloseEventsWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeBarrierClosePeriodWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeBarrierCommandCloseEventsWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeBarrierCommandOpenEventsWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeBarrierMovingStateWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeBarrierOpenEventsWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeBarrierOpenPeriodWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeBarrierPositionWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeBarrierSafetyStatusWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeClusterRevisionWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeFeatureMapWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeGeneratedCommandListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	writeAttributeBarrierCloseEventsWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeBarrierCloseEventsWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeBarrierClosePeriodWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeBarrierClosePeriodWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeBarrierCommandCloseEventsWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeBarrierCommandCloseEventsWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeBarrierCommandOpenEventsWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeBarrierCommandOpenEventsWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeBarrierOpenEventsWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeBarrierOpenEventsWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeBarrierOpenPeriodWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeBarrierOpenPeriodWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;
}

declare class MTRClusterBasic extends MTRClusterBasicInformation {

	static alloc(): MTRClusterBasic; // inherited from NSObject

	static new(): MTRClusterBasic; // inherited from NSObject

	constructor(o: { device: MTRDevice; endpoint: number; queue: interop.Pointer | interop.Reference<any>; });

	initWithDeviceEndpointQueue(device: MTRDevice, endpoint: number, queue: interop.Pointer | interop.Reference<any>): this;

	mfgSpecificPingWithExpectedValuesExpectedValueIntervalCompletionHandler(expectedValues: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: NSError) => void): void;

	mfgSpecificPingWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRBasicClusterMfgSpecificPingParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: NSError) => void): void;
}

declare class MTRClusterBasicInformation extends MTRGenericCluster {

	static alloc(): MTRClusterBasicInformation; // inherited from NSObject

	static new(): MTRClusterBasicInformation; // inherited from NSObject

	constructor(o: { device: MTRDevice; endpointID: number; queue: interop.Pointer | interop.Reference<any>; });

	initWithDeviceEndpointIDQueue(device: MTRDevice, endpointID: number, queue: interop.Pointer | interop.Reference<any>): this;

	readAttributeAcceptedCommandListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeAttributeListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeCapabilityMinimaWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeClusterRevisionWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeDataModelRevisionWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeFeatureMapWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeGeneratedCommandListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeHardwareVersionStringWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeHardwareVersionWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeLocalConfigDisabledWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeLocationWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeManufacturingDateWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeNodeLabelWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributePartNumberWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeProductAppearanceWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeProductIDWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeProductLabelWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeProductNameWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeProductURLWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeReachableWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeSerialNumberWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeSoftwareVersionStringWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeSoftwareVersionWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeUniqueIDWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeVendorIDWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeVendorNameWithParams(params: MTRReadParams): NSDictionary<string, any>;

	writeAttributeLocalConfigDisabledWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeLocalConfigDisabledWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeLocationWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeLocationWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeNodeLabelWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeNodeLabelWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;
}

declare class MTRClusterBinaryInputBasic extends MTRGenericCluster {

	static alloc(): MTRClusterBinaryInputBasic; // inherited from NSObject

	static new(): MTRClusterBinaryInputBasic; // inherited from NSObject

	constructor(o: { device: MTRDevice; endpointID: number; queue: interop.Pointer | interop.Reference<any>; });

	constructor(o: { device: MTRDevice; endpoint: number; queue: interop.Pointer | interop.Reference<any>; });

	initWithDeviceEndpointIDQueue(device: MTRDevice, endpointID: number, queue: interop.Pointer | interop.Reference<any>): this;

	initWithDeviceEndpointQueue(device: MTRDevice, endpoint: number, queue: interop.Pointer | interop.Reference<any>): this;

	readAttributeAcceptedCommandListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeActiveTextWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeApplicationTypeWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeAttributeListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeClusterRevisionWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeDescriptionWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeFeatureMapWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeGeneratedCommandListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeInactiveTextWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeOutOfServiceWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributePolarityWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributePresentValueWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeReliabilityWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeStatusFlagsWithParams(params: MTRReadParams): NSDictionary<string, any>;

	writeAttributeActiveTextWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeActiveTextWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeDescriptionWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeDescriptionWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeInactiveTextWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeInactiveTextWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeOutOfServiceWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeOutOfServiceWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributePresentValueWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributePresentValueWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeReliabilityWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeReliabilityWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;
}

declare class MTRClusterBinding extends MTRGenericCluster {

	static alloc(): MTRClusterBinding; // inherited from NSObject

	static new(): MTRClusterBinding; // inherited from NSObject

	constructor(o: { device: MTRDevice; endpointID: number; queue: interop.Pointer | interop.Reference<any>; });

	constructor(o: { device: MTRDevice; endpoint: number; queue: interop.Pointer | interop.Reference<any>; });

	initWithDeviceEndpointIDQueue(device: MTRDevice, endpointID: number, queue: interop.Pointer | interop.Reference<any>): this;

	initWithDeviceEndpointQueue(device: MTRDevice, endpoint: number, queue: interop.Pointer | interop.Reference<any>): this;

	readAttributeAcceptedCommandListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeAttributeListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeBindingWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeClusterRevisionWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeFeatureMapWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeGeneratedCommandListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	writeAttributeBindingWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeBindingWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;
}

declare class MTRClusterBooleanState extends MTRGenericCluster {

	static alloc(): MTRClusterBooleanState; // inherited from NSObject

	static new(): MTRClusterBooleanState; // inherited from NSObject

	constructor(o: { device: MTRDevice; endpointID: number; queue: interop.Pointer | interop.Reference<any>; });

	constructor(o: { device: MTRDevice; endpoint: number; queue: interop.Pointer | interop.Reference<any>; });

	initWithDeviceEndpointIDQueue(device: MTRDevice, endpointID: number, queue: interop.Pointer | interop.Reference<any>): this;

	initWithDeviceEndpointQueue(device: MTRDevice, endpoint: number, queue: interop.Pointer | interop.Reference<any>): this;

	readAttributeAcceptedCommandListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeAttributeListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeClusterRevisionWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeFeatureMapWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeGeneratedCommandListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeStateValueWithParams(params: MTRReadParams): NSDictionary<string, any>;
}

declare class MTRClusterBridgedDeviceBasic extends MTRClusterBridgedDeviceBasicInformation {

	static alloc(): MTRClusterBridgedDeviceBasic; // inherited from NSObject

	static new(): MTRClusterBridgedDeviceBasic; // inherited from NSObject

	constructor(o: { device: MTRDevice; endpoint: number; queue: interop.Pointer | interop.Reference<any>; });

	initWithDeviceEndpointQueue(device: MTRDevice, endpoint: number, queue: interop.Pointer | interop.Reference<any>): this;
}

declare class MTRClusterBridgedDeviceBasicInformation extends MTRGenericCluster {

	static alloc(): MTRClusterBridgedDeviceBasicInformation; // inherited from NSObject

	static new(): MTRClusterBridgedDeviceBasicInformation; // inherited from NSObject

	constructor(o: { device: MTRDevice; endpointID: number; queue: interop.Pointer | interop.Reference<any>; });

	initWithDeviceEndpointIDQueue(device: MTRDevice, endpointID: number, queue: interop.Pointer | interop.Reference<any>): this;

	readAttributeAcceptedCommandListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeAttributeListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeClusterRevisionWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeFeatureMapWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeGeneratedCommandListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeHardwareVersionStringWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeHardwareVersionWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeManufacturingDateWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeNodeLabelWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributePartNumberWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeProductAppearanceWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeProductLabelWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeProductNameWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeProductURLWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeReachableWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeSerialNumberWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeSoftwareVersionStringWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeSoftwareVersionWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeUniqueIDWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeVendorIDWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeVendorNameWithParams(params: MTRReadParams): NSDictionary<string, any>;

	writeAttributeNodeLabelWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeNodeLabelWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;
}

declare class MTRClusterChannel extends MTRGenericCluster {

	static alloc(): MTRClusterChannel; // inherited from NSObject

	static new(): MTRClusterChannel; // inherited from NSObject

	constructor(o: { device: MTRDevice; endpointID: number; queue: interop.Pointer | interop.Reference<any>; });

	constructor(o: { device: MTRDevice; endpoint: number; queue: interop.Pointer | interop.Reference<any>; });

	changeChannelByNumberWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRChannelClusterChangeChannelByNumberParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: NSError) => void): void;

	changeChannelByNumberWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRChannelClusterChangeChannelByNumberParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: NSError) => void): void;

	changeChannelWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRChannelClusterChangeChannelParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: MTRChannelClusterChangeChannelResponseParams, p2: NSError) => void): void;

	changeChannelWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRChannelClusterChangeChannelParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: MTRChannelClusterChangeChannelResponseParams, p2: NSError) => void): void;

	initWithDeviceEndpointIDQueue(device: MTRDevice, endpointID: number, queue: interop.Pointer | interop.Reference<any>): this;

	initWithDeviceEndpointQueue(device: MTRDevice, endpoint: number, queue: interop.Pointer | interop.Reference<any>): this;

	readAttributeAcceptedCommandListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeAttributeListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeChannelListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeClusterRevisionWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeCurrentChannelWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeFeatureMapWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeGeneratedCommandListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeLineupWithParams(params: MTRReadParams): NSDictionary<string, any>;

	skipChannelWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRChannelClusterSkipChannelParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: NSError) => void): void;

	skipChannelWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRChannelClusterSkipChannelParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: NSError) => void): void;
}

declare class MTRClusterColorControl extends MTRGenericCluster {

	static alloc(): MTRClusterColorControl; // inherited from NSObject

	static new(): MTRClusterColorControl; // inherited from NSObject

	constructor(o: { device: MTRDevice; endpointID: number; queue: interop.Pointer | interop.Reference<any>; });

	constructor(o: { device: MTRDevice; endpoint: number; queue: interop.Pointer | interop.Reference<any>; });

	colorLoopSetWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRColorControlClusterColorLoopSetParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: NSError) => void): void;

	colorLoopSetWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRColorControlClusterColorLoopSetParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: NSError) => void): void;

	enhancedMoveHueWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRColorControlClusterEnhancedMoveHueParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: NSError) => void): void;

	enhancedMoveHueWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRColorControlClusterEnhancedMoveHueParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: NSError) => void): void;

	enhancedMoveToHueAndSaturationWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRColorControlClusterEnhancedMoveToHueAndSaturationParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: NSError) => void): void;

	enhancedMoveToHueAndSaturationWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRColorControlClusterEnhancedMoveToHueAndSaturationParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: NSError) => void): void;

	enhancedMoveToHueWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRColorControlClusterEnhancedMoveToHueParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: NSError) => void): void;

	enhancedMoveToHueWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRColorControlClusterEnhancedMoveToHueParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: NSError) => void): void;

	enhancedStepHueWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRColorControlClusterEnhancedStepHueParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: NSError) => void): void;

	enhancedStepHueWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRColorControlClusterEnhancedStepHueParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: NSError) => void): void;

	initWithDeviceEndpointIDQueue(device: MTRDevice, endpointID: number, queue: interop.Pointer | interop.Reference<any>): this;

	initWithDeviceEndpointQueue(device: MTRDevice, endpoint: number, queue: interop.Pointer | interop.Reference<any>): this;

	moveColorTemperatureWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRColorControlClusterMoveColorTemperatureParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: NSError) => void): void;

	moveColorTemperatureWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRColorControlClusterMoveColorTemperatureParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: NSError) => void): void;

	moveColorWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRColorControlClusterMoveColorParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: NSError) => void): void;

	moveColorWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRColorControlClusterMoveColorParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: NSError) => void): void;

	moveHueWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRColorControlClusterMoveHueParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: NSError) => void): void;

	moveHueWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRColorControlClusterMoveHueParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: NSError) => void): void;

	moveSaturationWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRColorControlClusterMoveSaturationParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: NSError) => void): void;

	moveSaturationWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRColorControlClusterMoveSaturationParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: NSError) => void): void;

	moveToColorTemperatureWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRColorControlClusterMoveToColorTemperatureParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: NSError) => void): void;

	moveToColorTemperatureWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRColorControlClusterMoveToColorTemperatureParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: NSError) => void): void;

	moveToColorWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRColorControlClusterMoveToColorParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: NSError) => void): void;

	moveToColorWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRColorControlClusterMoveToColorParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: NSError) => void): void;

	moveToHueAndSaturationWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRColorControlClusterMoveToHueAndSaturationParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: NSError) => void): void;

	moveToHueAndSaturationWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRColorControlClusterMoveToHueAndSaturationParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: NSError) => void): void;

	moveToHueWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRColorControlClusterMoveToHueParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: NSError) => void): void;

	moveToHueWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRColorControlClusterMoveToHueParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: NSError) => void): void;

	moveToSaturationWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRColorControlClusterMoveToSaturationParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: NSError) => void): void;

	moveToSaturationWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRColorControlClusterMoveToSaturationParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: NSError) => void): void;

	readAttributeAcceptedCommandListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeAttributeListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeClusterRevisionWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeColorCapabilitiesWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeColorLoopActiveWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeColorLoopDirectionWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeColorLoopStartEnhancedHueWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeColorLoopStoredEnhancedHueWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeColorLoopTimeWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeColorModeWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeColorPointBIntensityWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeColorPointBXWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeColorPointBYWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeColorPointGIntensityWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeColorPointGXWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeColorPointGYWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeColorPointRIntensityWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeColorPointRXWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeColorPointRYWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeColorTempPhysicalMaxMiredsWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeColorTempPhysicalMinMiredsWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeColorTemperatureMiredsWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeCompensationTextWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeCoupleColorTempToLevelMinMiredsWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeCurrentHueWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeCurrentSaturationWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeCurrentXWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeCurrentYWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeDriftCompensationWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeEnhancedColorModeWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeEnhancedCurrentHueWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeFeatureMapWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeGeneratedCommandListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeNumberOfPrimariesWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeOptionsWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributePrimary1IntensityWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributePrimary1XWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributePrimary1YWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributePrimary2IntensityWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributePrimary2XWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributePrimary2YWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributePrimary3IntensityWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributePrimary3XWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributePrimary3YWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributePrimary4IntensityWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributePrimary4XWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributePrimary4YWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributePrimary5IntensityWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributePrimary5XWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributePrimary5YWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributePrimary6IntensityWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributePrimary6XWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributePrimary6YWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeRemainingTimeWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeStartUpColorTemperatureMiredsWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeWhitePointXWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeWhitePointYWithParams(params: MTRReadParams): NSDictionary<string, any>;

	stepColorTemperatureWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRColorControlClusterStepColorTemperatureParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: NSError) => void): void;

	stepColorTemperatureWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRColorControlClusterStepColorTemperatureParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: NSError) => void): void;

	stepColorWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRColorControlClusterStepColorParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: NSError) => void): void;

	stepColorWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRColorControlClusterStepColorParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: NSError) => void): void;

	stepHueWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRColorControlClusterStepHueParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: NSError) => void): void;

	stepHueWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRColorControlClusterStepHueParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: NSError) => void): void;

	stepSaturationWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRColorControlClusterStepSaturationParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: NSError) => void): void;

	stepSaturationWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRColorControlClusterStepSaturationParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: NSError) => void): void;

	stopMoveStepWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRColorControlClusterStopMoveStepParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: NSError) => void): void;

	stopMoveStepWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRColorControlClusterStopMoveStepParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeColorPointBIntensityWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeColorPointBIntensityWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeColorPointBXWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeColorPointBXWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeColorPointBYWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeColorPointBYWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeColorPointGIntensityWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeColorPointGIntensityWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeColorPointGXWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeColorPointGXWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeColorPointGYWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeColorPointGYWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeColorPointRIntensityWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeColorPointRIntensityWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeColorPointRXWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeColorPointRXWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeColorPointRYWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeColorPointRYWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeOptionsWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeOptionsWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeStartUpColorTemperatureMiredsWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeStartUpColorTemperatureMiredsWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeWhitePointXWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeWhitePointXWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeWhitePointYWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeWhitePointYWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;
}

declare class MTRClusterContentLauncher extends MTRGenericCluster {

	static alloc(): MTRClusterContentLauncher; // inherited from NSObject

	static new(): MTRClusterContentLauncher; // inherited from NSObject

	constructor(o: { device: MTRDevice; endpointID: number; queue: interop.Pointer | interop.Reference<any>; });

	constructor(o: { device: MTRDevice; endpoint: number; queue: interop.Pointer | interop.Reference<any>; });

	initWithDeviceEndpointIDQueue(device: MTRDevice, endpointID: number, queue: interop.Pointer | interop.Reference<any>): this;

	initWithDeviceEndpointQueue(device: MTRDevice, endpoint: number, queue: interop.Pointer | interop.Reference<any>): this;

	launchContentWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRContentLauncherClusterLaunchContentParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: MTRContentLauncherClusterLauncherResponseParams, p2: NSError) => void): void;

	launchContentWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRContentLauncherClusterLaunchContentParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: MTRContentLauncherClusterLaunchResponseParams, p2: NSError) => void): void;

	launchURLWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRContentLauncherClusterLaunchURLParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: MTRContentLauncherClusterLauncherResponseParams, p2: NSError) => void): void;

	launchURLWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRContentLauncherClusterLaunchURLParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: MTRContentLauncherClusterLaunchResponseParams, p2: NSError) => void): void;

	readAttributeAcceptHeaderWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeAcceptedCommandListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeAttributeListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeClusterRevisionWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeFeatureMapWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeGeneratedCommandListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeSupportedStreamingProtocolsWithParams(params: MTRReadParams): NSDictionary<string, any>;

	writeAttributeSupportedStreamingProtocolsWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeSupportedStreamingProtocolsWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;
}

declare class MTRClusterDescriptor extends MTRGenericCluster {

	static alloc(): MTRClusterDescriptor; // inherited from NSObject

	static new(): MTRClusterDescriptor; // inherited from NSObject

	constructor(o: { device: MTRDevice; endpointID: number; queue: interop.Pointer | interop.Reference<any>; });

	constructor(o: { device: MTRDevice; endpoint: number; queue: interop.Pointer | interop.Reference<any>; });

	initWithDeviceEndpointIDQueue(device: MTRDevice, endpointID: number, queue: interop.Pointer | interop.Reference<any>): this;

	initWithDeviceEndpointQueue(device: MTRDevice, endpoint: number, queue: interop.Pointer | interop.Reference<any>): this;

	readAttributeAcceptedCommandListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeAttributeListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeClientListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeClusterRevisionWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeDeviceListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeDeviceTypeListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeFeatureMapWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeGeneratedCommandListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributePartsListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeServerListWithParams(params: MTRReadParams): NSDictionary<string, any>;
}

declare class MTRClusterDiagnosticLogs extends MTRGenericCluster {

	static alloc(): MTRClusterDiagnosticLogs; // inherited from NSObject

	static new(): MTRClusterDiagnosticLogs; // inherited from NSObject

	constructor(o: { device: MTRDevice; endpointID: number; queue: interop.Pointer | interop.Reference<any>; });

	constructor(o: { device: MTRDevice; endpoint: number; queue: interop.Pointer | interop.Reference<any>; });

	initWithDeviceEndpointIDQueue(device: MTRDevice, endpointID: number, queue: interop.Pointer | interop.Reference<any>): this;

	initWithDeviceEndpointQueue(device: MTRDevice, endpoint: number, queue: interop.Pointer | interop.Reference<any>): this;

	readAttributeAcceptedCommandListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeAttributeListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeClusterRevisionWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeFeatureMapWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeGeneratedCommandListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	retrieveLogsRequestWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRDiagnosticLogsClusterRetrieveLogsRequestParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: MTRDiagnosticLogsClusterRetrieveLogsResponseParams, p2: NSError) => void): void;

	retrieveLogsRequestWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRDiagnosticLogsClusterRetrieveLogsRequestParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: MTRDiagnosticLogsClusterRetrieveLogsResponseParams, p2: NSError) => void): void;
}

declare class MTRClusterDoorLock extends MTRGenericCluster {

	static alloc(): MTRClusterDoorLock; // inherited from NSObject

	static new(): MTRClusterDoorLock; // inherited from NSObject

	constructor(o: { device: MTRDevice; endpointID: number; queue: interop.Pointer | interop.Reference<any>; });

	constructor(o: { device: MTRDevice; endpoint: number; queue: interop.Pointer | interop.Reference<any>; });

	clearCredentialWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRDoorLockClusterClearCredentialParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: NSError) => void): void;

	clearCredentialWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRDoorLockClusterClearCredentialParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: NSError) => void): void;

	clearHolidayScheduleWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRDoorLockClusterClearHolidayScheduleParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: NSError) => void): void;

	clearHolidayScheduleWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRDoorLockClusterClearHolidayScheduleParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: NSError) => void): void;

	clearUserWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRDoorLockClusterClearUserParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: NSError) => void): void;

	clearUserWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRDoorLockClusterClearUserParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: NSError) => void): void;

	clearWeekDayScheduleWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRDoorLockClusterClearWeekDayScheduleParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: NSError) => void): void;

	clearWeekDayScheduleWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRDoorLockClusterClearWeekDayScheduleParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: NSError) => void): void;

	clearYearDayScheduleWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRDoorLockClusterClearYearDayScheduleParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: NSError) => void): void;

	clearYearDayScheduleWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRDoorLockClusterClearYearDayScheduleParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: NSError) => void): void;

	getCredentialStatusWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRDoorLockClusterGetCredentialStatusParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: MTRDoorLockClusterGetCredentialStatusResponseParams, p2: NSError) => void): void;

	getCredentialStatusWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRDoorLockClusterGetCredentialStatusParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: MTRDoorLockClusterGetCredentialStatusResponseParams, p2: NSError) => void): void;

	getHolidayScheduleWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRDoorLockClusterGetHolidayScheduleParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: MTRDoorLockClusterGetHolidayScheduleResponseParams, p2: NSError) => void): void;

	getHolidayScheduleWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRDoorLockClusterGetHolidayScheduleParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: MTRDoorLockClusterGetHolidayScheduleResponseParams, p2: NSError) => void): void;

	getUserWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRDoorLockClusterGetUserParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: MTRDoorLockClusterGetUserResponseParams, p2: NSError) => void): void;

	getUserWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRDoorLockClusterGetUserParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: MTRDoorLockClusterGetUserResponseParams, p2: NSError) => void): void;

	getWeekDayScheduleWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRDoorLockClusterGetWeekDayScheduleParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: MTRDoorLockClusterGetWeekDayScheduleResponseParams, p2: NSError) => void): void;

	getWeekDayScheduleWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRDoorLockClusterGetWeekDayScheduleParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: MTRDoorLockClusterGetWeekDayScheduleResponseParams, p2: NSError) => void): void;

	getYearDayScheduleWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRDoorLockClusterGetYearDayScheduleParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: MTRDoorLockClusterGetYearDayScheduleResponseParams, p2: NSError) => void): void;

	getYearDayScheduleWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRDoorLockClusterGetYearDayScheduleParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: MTRDoorLockClusterGetYearDayScheduleResponseParams, p2: NSError) => void): void;

	initWithDeviceEndpointIDQueue(device: MTRDevice, endpointID: number, queue: interop.Pointer | interop.Reference<any>): this;

	initWithDeviceEndpointQueue(device: MTRDevice, endpoint: number, queue: interop.Pointer | interop.Reference<any>): this;

	lockDoorWithExpectedValuesExpectedValueIntervalCompletion(expectedValues: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: NSError) => void): void;

	lockDoorWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRDoorLockClusterLockDoorParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: NSError) => void): void;

	lockDoorWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRDoorLockClusterLockDoorParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: NSError) => void): void;

	readAttributeAcceptedCommandListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeActuatorEnabledWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeAttributeListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeAutoRelockTimeWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeClusterRevisionWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeCredentialRulesSupportWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeDefaultConfigurationRegisterWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeDoorClosedEventsWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeDoorOpenEventsWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeDoorStateWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeEnableInsideStatusLEDWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeEnableLocalProgrammingWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeEnableOneTouchLockingWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeEnablePrivacyModeButtonWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeExpiringUserTimeoutWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeFeatureMapWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeGeneratedCommandListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeLEDSettingsWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeLanguageWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeLocalProgrammingFeaturesWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeLockStateWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeLockTypeWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeMaxPINCodeLengthWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeMaxRFIDCodeLengthWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeMinPINCodeLengthWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeMinRFIDCodeLengthWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeNumberOfCredentialsSupportedPerUserWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeNumberOfHolidaySchedulesSupportedWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeNumberOfPINUsersSupportedWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeNumberOfRFIDUsersSupportedWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeNumberOfTotalUsersSupportedWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeNumberOfWeekDaySchedulesSupportedPerUserWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeNumberOfYearDaySchedulesSupportedPerUserWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeOpenPeriodWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeOperatingModeWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeRequirePINforRemoteOperationWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeSendPINOverTheAirWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeSoundVolumeWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeSupportedOperatingModesWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeUserCodeTemporaryDisableTimeWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeWrongCodeEntryLimitWithParams(params: MTRReadParams): NSDictionary<string, any>;

	setCredentialWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRDoorLockClusterSetCredentialParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: MTRDoorLockClusterSetCredentialResponseParams, p2: NSError) => void): void;

	setCredentialWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRDoorLockClusterSetCredentialParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: MTRDoorLockClusterSetCredentialResponseParams, p2: NSError) => void): void;

	setHolidayScheduleWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRDoorLockClusterSetHolidayScheduleParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: NSError) => void): void;

	setHolidayScheduleWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRDoorLockClusterSetHolidayScheduleParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: NSError) => void): void;

	setUserWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRDoorLockClusterSetUserParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: NSError) => void): void;

	setUserWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRDoorLockClusterSetUserParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: NSError) => void): void;

	setWeekDayScheduleWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRDoorLockClusterSetWeekDayScheduleParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: NSError) => void): void;

	setWeekDayScheduleWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRDoorLockClusterSetWeekDayScheduleParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: NSError) => void): void;

	setYearDayScheduleWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRDoorLockClusterSetYearDayScheduleParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: NSError) => void): void;

	setYearDayScheduleWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRDoorLockClusterSetYearDayScheduleParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: NSError) => void): void;

	unlockDoorWithExpectedValuesExpectedValueIntervalCompletion(expectedValues: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: NSError) => void): void;

	unlockDoorWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRDoorLockClusterUnlockDoorParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: NSError) => void): void;

	unlockDoorWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRDoorLockClusterUnlockDoorParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: NSError) => void): void;

	unlockWithTimeoutWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRDoorLockClusterUnlockWithTimeoutParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: NSError) => void): void;

	unlockWithTimeoutWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRDoorLockClusterUnlockWithTimeoutParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeAutoRelockTimeWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeAutoRelockTimeWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeDoorClosedEventsWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeDoorClosedEventsWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeDoorOpenEventsWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeDoorOpenEventsWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeEnableInsideStatusLEDWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeEnableInsideStatusLEDWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeEnableLocalProgrammingWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeEnableLocalProgrammingWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeEnableOneTouchLockingWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeEnableOneTouchLockingWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeEnablePrivacyModeButtonWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeEnablePrivacyModeButtonWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeExpiringUserTimeoutWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeExpiringUserTimeoutWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeLEDSettingsWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeLEDSettingsWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeLanguageWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeLanguageWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeLocalProgrammingFeaturesWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeLocalProgrammingFeaturesWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeOpenPeriodWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeOpenPeriodWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeOperatingModeWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeOperatingModeWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeRequirePINforRemoteOperationWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeRequirePINforRemoteOperationWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeSendPINOverTheAirWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeSendPINOverTheAirWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeSoundVolumeWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeSoundVolumeWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeUserCodeTemporaryDisableTimeWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeUserCodeTemporaryDisableTimeWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeWrongCodeEntryLimitWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeWrongCodeEntryLimitWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;
}

declare class MTRClusterElectricalMeasurement extends MTRGenericCluster {

	static alloc(): MTRClusterElectricalMeasurement; // inherited from NSObject

	static new(): MTRClusterElectricalMeasurement; // inherited from NSObject

	constructor(o: { device: MTRDevice; endpointID: number; queue: interop.Pointer | interop.Reference<any>; });

	constructor(o: { device: MTRDevice; endpoint: number; queue: interop.Pointer | interop.Reference<any>; });

	getMeasurementProfileCommandWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRElectricalMeasurementClusterGetMeasurementProfileCommandParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: NSError) => void): void;

	getMeasurementProfileCommandWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRElectricalMeasurementClusterGetMeasurementProfileCommandParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: NSError) => void): void;

	getProfileInfoCommandWithExpectedValuesExpectedValueIntervalCompletion(expectedValues: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: NSError) => void): void;

	getProfileInfoCommandWithExpectedValuesExpectedValueIntervalCompletionHandler(expectedValues: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: NSError) => void): void;

	getProfileInfoCommandWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRElectricalMeasurementClusterGetProfileInfoCommandParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: NSError) => void): void;

	getProfileInfoCommandWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRElectricalMeasurementClusterGetProfileInfoCommandParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: NSError) => void): void;

	initWithDeviceEndpointIDQueue(device: MTRDevice, endpointID: number, queue: interop.Pointer | interop.Reference<any>): this;

	initWithDeviceEndpointQueue(device: MTRDevice, endpoint: number, queue: interop.Pointer | interop.Reference<any>): this;

	readAttributeAcActivePowerOverloadWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeAcCurrentDivisorWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeAcCurrentMultiplierWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeAcCurrentOverloadWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeAcFrequencyDivisorWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeAcFrequencyMaxWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeAcFrequencyMinWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeAcFrequencyMultiplierWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeAcFrequencyWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeAcOverloadAlarmsMaskWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeAcPowerDivisorWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeAcPowerMultiplierWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeAcReactivePowerOverloadWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeAcVoltageDivisorWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeAcVoltageMultiplierWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeAcVoltageOverloadWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeAcceptedCommandListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeActiveCurrentPhaseBWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeActiveCurrentPhaseCWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeActivePowerMaxPhaseBWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeActivePowerMaxPhaseCWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeActivePowerMaxWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeActivePowerMinPhaseBWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeActivePowerMinPhaseCWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeActivePowerMinWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeActivePowerPhaseBWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeActivePowerPhaseCWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeActivePowerWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeApparentPowerPhaseBWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeApparentPowerPhaseCWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeApparentPowerWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeAttributeListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeAverageRmsOverVoltageCounterPhaseBWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeAverageRmsOverVoltageCounterPhaseCWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeAverageRmsOverVoltageWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeAverageRmsUnderVoltageCounterPhaseBWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeAverageRmsUnderVoltageCounterPhaseCWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeAverageRmsUnderVoltageCounterWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeAverageRmsUnderVoltageWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeAverageRmsVoltageMeasurementPeriodPhaseBWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeAverageRmsVoltageMeasurementPeriodPhaseCWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeAverageRmsVoltageMeasurementPeriodWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeClusterRevisionWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeCurrentOverloadWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeDcCurrentDivisorWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeDcCurrentMaxWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeDcCurrentMinWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeDcCurrentMultiplierWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeDcCurrentWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeDcPowerDivisorWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeDcPowerMaxWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeDcPowerMinWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeDcPowerMultiplierWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeDcPowerWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeDcVoltageDivisorWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeDcVoltageMaxWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeDcVoltageMinWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeDcVoltageMultiplierWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeDcVoltageWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeFeatureMapWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeGeneratedCommandListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeHarmonicCurrentMultiplierWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeInstantaneousActiveCurrentWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeInstantaneousLineCurrentWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeInstantaneousPowerWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeInstantaneousReactiveCurrentWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeInstantaneousVoltageWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeLineCurrentPhaseBWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeLineCurrentPhaseCWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeMeasured11thHarmonicCurrentWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeMeasured1stHarmonicCurrentWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeMeasured3rdHarmonicCurrentWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeMeasured5thHarmonicCurrentWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeMeasured7thHarmonicCurrentWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeMeasured9thHarmonicCurrentWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeMeasuredPhase11thHarmonicCurrentWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeMeasuredPhase1stHarmonicCurrentWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeMeasuredPhase3rdHarmonicCurrentWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeMeasuredPhase5thHarmonicCurrentWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeMeasuredPhase7thHarmonicCurrentWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeMeasuredPhase9thHarmonicCurrentWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeMeasurementTypeWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeNeutralCurrentWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeOverloadAlarmsMaskWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributePhaseHarmonicCurrentMultiplierWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributePowerDivisorWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributePowerFactorPhaseBWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributePowerFactorPhaseCWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributePowerFactorWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributePowerMultiplierWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeReactiveCurrentPhaseBWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeReactiveCurrentPhaseCWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeReactivePowerPhaseBWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeReactivePowerPhaseCWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeReactivePowerWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeRmsCurrentMaxPhaseBWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeRmsCurrentMaxPhaseCWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeRmsCurrentMaxWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeRmsCurrentMinPhaseBWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeRmsCurrentMinPhaseCWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeRmsCurrentMinWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeRmsCurrentPhaseBWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeRmsCurrentPhaseCWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeRmsCurrentWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeRmsExtremeOverVoltagePeriodPhaseBWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeRmsExtremeOverVoltagePeriodPhaseCWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeRmsExtremeOverVoltagePeriodWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeRmsExtremeOverVoltageWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeRmsExtremeUnderVoltagePeriodPhaseBWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeRmsExtremeUnderVoltagePeriodPhaseCWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeRmsExtremeUnderVoltagePeriodWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeRmsExtremeUnderVoltageWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeRmsVoltageMaxPhaseBWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeRmsVoltageMaxPhaseCWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeRmsVoltageMaxWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeRmsVoltageMinPhaseBWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeRmsVoltageMinPhaseCWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeRmsVoltageMinWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeRmsVoltagePhaseBWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeRmsVoltagePhaseCWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeRmsVoltageSagPeriodPhaseBWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeRmsVoltageSagPeriodPhaseCWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeRmsVoltageSagPeriodWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeRmsVoltageSagWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeRmsVoltageSwellPeriodPhaseBWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeRmsVoltageSwellPeriodPhaseCWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeRmsVoltageSwellPeriodWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeRmsVoltageSwellWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeRmsVoltageWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeTotalActivePowerWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeTotalApparentPowerWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeTotalReactivePowerWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeVoltageOverloadWithParams(params: MTRReadParams): NSDictionary<string, any>;

	writeAttributeAcOverloadAlarmsMaskWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeAcOverloadAlarmsMaskWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeAverageRmsUnderVoltageCounterWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeAverageRmsUnderVoltageCounterWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeAverageRmsVoltageMeasurementPeriodWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeAverageRmsVoltageMeasurementPeriodWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeOverloadAlarmsMaskWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeOverloadAlarmsMaskWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeRmsExtremeOverVoltagePeriodWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeRmsExtremeOverVoltagePeriodWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeRmsExtremeUnderVoltagePeriodWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeRmsExtremeUnderVoltagePeriodWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeRmsVoltageSagPeriodWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeRmsVoltageSagPeriodWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeRmsVoltageSwellPeriodWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeRmsVoltageSwellPeriodWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;
}

declare class MTRClusterEthernetNetworkDiagnostics extends MTRGenericCluster {

	static alloc(): MTRClusterEthernetNetworkDiagnostics; // inherited from NSObject

	static new(): MTRClusterEthernetNetworkDiagnostics; // inherited from NSObject

	constructor(o: { device: MTRDevice; endpointID: number; queue: interop.Pointer | interop.Reference<any>; });

	constructor(o: { device: MTRDevice; endpoint: number; queue: interop.Pointer | interop.Reference<any>; });

	initWithDeviceEndpointIDQueue(device: MTRDevice, endpointID: number, queue: interop.Pointer | interop.Reference<any>): this;

	initWithDeviceEndpointQueue(device: MTRDevice, endpoint: number, queue: interop.Pointer | interop.Reference<any>): this;

	readAttributeAcceptedCommandListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeAttributeListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeCarrierDetectWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeClusterRevisionWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeCollisionCountWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeFeatureMapWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeFullDuplexWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeGeneratedCommandListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeOverrunCountWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributePHYRateWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributePacketRxCountWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributePacketTxCountWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeTimeSinceResetWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeTxErrCountWithParams(params: MTRReadParams): NSDictionary<string, any>;

	resetCountsWithExpectedValuesExpectedValueIntervalCompletion(expectedValues: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: NSError) => void): void;

	resetCountsWithExpectedValuesExpectedValueIntervalCompletionHandler(expectedValues: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: NSError) => void): void;

	resetCountsWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTREthernetNetworkDiagnosticsClusterResetCountsParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: NSError) => void): void;

	resetCountsWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTREthernetNetworkDiagnosticsClusterResetCountsParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: NSError) => void): void;
}

declare class MTRClusterFanControl extends MTRGenericCluster {

	static alloc(): MTRClusterFanControl; // inherited from NSObject

	static new(): MTRClusterFanControl; // inherited from NSObject

	constructor(o: { device: MTRDevice; endpointID: number; queue: interop.Pointer | interop.Reference<any>; });

	constructor(o: { device: MTRDevice; endpoint: number; queue: interop.Pointer | interop.Reference<any>; });

	initWithDeviceEndpointIDQueue(device: MTRDevice, endpointID: number, queue: interop.Pointer | interop.Reference<any>): this;

	initWithDeviceEndpointQueue(device: MTRDevice, endpoint: number, queue: interop.Pointer | interop.Reference<any>): this;

	readAttributeAcceptedCommandListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeAttributeListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeClusterRevisionWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeFanModeSequenceWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeFanModeWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeFeatureMapWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeGeneratedCommandListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributePercentCurrentWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributePercentSettingWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeRockSettingWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeRockSupportWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeSpeedCurrentWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeSpeedMaxWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeSpeedSettingWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeWindSettingWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeWindSupportWithParams(params: MTRReadParams): NSDictionary<string, any>;

	writeAttributeFanModeSequenceWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeFanModeSequenceWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeFanModeWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeFanModeWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributePercentSettingWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributePercentSettingWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeRockSettingWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeRockSettingWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeSpeedSettingWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeSpeedSettingWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeWindSettingWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeWindSettingWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;
}

declare class MTRClusterFixedLabel extends MTRGenericCluster {

	static alloc(): MTRClusterFixedLabel; // inherited from NSObject

	static new(): MTRClusterFixedLabel; // inherited from NSObject

	constructor(o: { device: MTRDevice; endpointID: number; queue: interop.Pointer | interop.Reference<any>; });

	constructor(o: { device: MTRDevice; endpoint: number; queue: interop.Pointer | interop.Reference<any>; });

	initWithDeviceEndpointIDQueue(device: MTRDevice, endpointID: number, queue: interop.Pointer | interop.Reference<any>): this;

	initWithDeviceEndpointQueue(device: MTRDevice, endpoint: number, queue: interop.Pointer | interop.Reference<any>): this;

	readAttributeAcceptedCommandListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeAttributeListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeClusterRevisionWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeFeatureMapWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeGeneratedCommandListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeLabelListWithParams(params: MTRReadParams): NSDictionary<string, any>;
}

declare class MTRClusterFlowMeasurement extends MTRGenericCluster {

	static alloc(): MTRClusterFlowMeasurement; // inherited from NSObject

	static new(): MTRClusterFlowMeasurement; // inherited from NSObject

	constructor(o: { device: MTRDevice; endpointID: number; queue: interop.Pointer | interop.Reference<any>; });

	constructor(o: { device: MTRDevice; endpoint: number; queue: interop.Pointer | interop.Reference<any>; });

	initWithDeviceEndpointIDQueue(device: MTRDevice, endpointID: number, queue: interop.Pointer | interop.Reference<any>): this;

	initWithDeviceEndpointQueue(device: MTRDevice, endpoint: number, queue: interop.Pointer | interop.Reference<any>): this;

	readAttributeAcceptedCommandListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeAttributeListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeClusterRevisionWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeFeatureMapWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeGeneratedCommandListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeMaxMeasuredValueWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeMeasuredValueWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeMinMeasuredValueWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeToleranceWithParams(params: MTRReadParams): NSDictionary<string, any>;
}

declare class MTRClusterGeneralCommissioning extends MTRGenericCluster {

	static alloc(): MTRClusterGeneralCommissioning; // inherited from NSObject

	static new(): MTRClusterGeneralCommissioning; // inherited from NSObject

	constructor(o: { device: MTRDevice; endpointID: number; queue: interop.Pointer | interop.Reference<any>; });

	constructor(o: { device: MTRDevice; endpoint: number; queue: interop.Pointer | interop.Reference<any>; });

	armFailSafeWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRGeneralCommissioningClusterArmFailSafeParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: MTRGeneralCommissioningClusterArmFailSafeResponseParams, p2: NSError) => void): void;

	armFailSafeWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRGeneralCommissioningClusterArmFailSafeParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: MTRGeneralCommissioningClusterArmFailSafeResponseParams, p2: NSError) => void): void;

	commissioningCompleteWithExpectedValuesExpectedValueIntervalCompletion(expectedValues: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: MTRGeneralCommissioningClusterCommissioningCompleteResponseParams, p2: NSError) => void): void;

	commissioningCompleteWithExpectedValuesExpectedValueIntervalCompletionHandler(expectedValues: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: MTRGeneralCommissioningClusterCommissioningCompleteResponseParams, p2: NSError) => void): void;

	commissioningCompleteWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRGeneralCommissioningClusterCommissioningCompleteParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: MTRGeneralCommissioningClusterCommissioningCompleteResponseParams, p2: NSError) => void): void;

	commissioningCompleteWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRGeneralCommissioningClusterCommissioningCompleteParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: MTRGeneralCommissioningClusterCommissioningCompleteResponseParams, p2: NSError) => void): void;

	initWithDeviceEndpointIDQueue(device: MTRDevice, endpointID: number, queue: interop.Pointer | interop.Reference<any>): this;

	initWithDeviceEndpointQueue(device: MTRDevice, endpoint: number, queue: interop.Pointer | interop.Reference<any>): this;

	readAttributeAcceptedCommandListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeAttributeListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeBasicCommissioningInfoWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeBreadcrumbWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeClusterRevisionWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeFeatureMapWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeGeneratedCommandListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeLocationCapabilityWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeRegulatoryConfigWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeSupportsConcurrentConnectionWithParams(params: MTRReadParams): NSDictionary<string, any>;

	setRegulatoryConfigWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRGeneralCommissioningClusterSetRegulatoryConfigParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: MTRGeneralCommissioningClusterSetRegulatoryConfigResponseParams, p2: NSError) => void): void;

	setRegulatoryConfigWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRGeneralCommissioningClusterSetRegulatoryConfigParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: MTRGeneralCommissioningClusterSetRegulatoryConfigResponseParams, p2: NSError) => void): void;

	writeAttributeBreadcrumbWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeBreadcrumbWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;
}

declare class MTRClusterGeneralDiagnostics extends MTRGenericCluster {

	static alloc(): MTRClusterGeneralDiagnostics; // inherited from NSObject

	static new(): MTRClusterGeneralDiagnostics; // inherited from NSObject

	constructor(o: { device: MTRDevice; endpointID: number; queue: interop.Pointer | interop.Reference<any>; });

	constructor(o: { device: MTRDevice; endpoint: number; queue: interop.Pointer | interop.Reference<any>; });

	initWithDeviceEndpointIDQueue(device: MTRDevice, endpointID: number, queue: interop.Pointer | interop.Reference<any>): this;

	initWithDeviceEndpointQueue(device: MTRDevice, endpoint: number, queue: interop.Pointer | interop.Reference<any>): this;

	readAttributeAcceptedCommandListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeActiveHardwareFaultsWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeActiveNetworkFaultsWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeActiveRadioFaultsWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeAttributeListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeBootReasonWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeBootReasonsWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeClusterRevisionWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeFeatureMapWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeGeneratedCommandListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeNetworkInterfacesWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeRebootCountWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeTestEventTriggersEnabledWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeTotalOperationalHoursWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeUpTimeWithParams(params: MTRReadParams): NSDictionary<string, any>;

	testEventTriggerWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRGeneralDiagnosticsClusterTestEventTriggerParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: NSError) => void): void;

	testEventTriggerWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRGeneralDiagnosticsClusterTestEventTriggerParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: NSError) => void): void;
}

declare class MTRClusterGroupKeyManagement extends MTRGenericCluster {

	static alloc(): MTRClusterGroupKeyManagement; // inherited from NSObject

	static new(): MTRClusterGroupKeyManagement; // inherited from NSObject

	constructor(o: { device: MTRDevice; endpointID: number; queue: interop.Pointer | interop.Reference<any>; });

	constructor(o: { device: MTRDevice; endpoint: number; queue: interop.Pointer | interop.Reference<any>; });

	initWithDeviceEndpointIDQueue(device: MTRDevice, endpointID: number, queue: interop.Pointer | interop.Reference<any>): this;

	initWithDeviceEndpointQueue(device: MTRDevice, endpoint: number, queue: interop.Pointer | interop.Reference<any>): this;

	keySetReadAllIndicesWithExpectedValuesExpectedValueIntervalCompletion(expectedValues: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: MTRGroupKeyManagementClusterKeySetReadAllIndicesResponseParams, p2: NSError) => void): void;

	keySetReadAllIndicesWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRGroupKeyManagementClusterKeySetReadAllIndicesParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: MTRGroupKeyManagementClusterKeySetReadAllIndicesResponseParams, p2: NSError) => void): void;

	keySetReadAllIndicesWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRGroupKeyManagementClusterKeySetReadAllIndicesParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: MTRGroupKeyManagementClusterKeySetReadAllIndicesResponseParams, p2: NSError) => void): void;

	keySetReadWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRGroupKeyManagementClusterKeySetReadParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: MTRGroupKeyManagementClusterKeySetReadResponseParams, p2: NSError) => void): void;

	keySetReadWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRGroupKeyManagementClusterKeySetReadParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: MTRGroupKeyManagementClusterKeySetReadResponseParams, p2: NSError) => void): void;

	keySetRemoveWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRGroupKeyManagementClusterKeySetRemoveParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: NSError) => void): void;

	keySetRemoveWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRGroupKeyManagementClusterKeySetRemoveParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: NSError) => void): void;

	keySetWriteWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRGroupKeyManagementClusterKeySetWriteParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: NSError) => void): void;

	keySetWriteWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRGroupKeyManagementClusterKeySetWriteParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: NSError) => void): void;

	readAttributeAcceptedCommandListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeAttributeListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeClusterRevisionWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeFeatureMapWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeGeneratedCommandListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeGroupKeyMapWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeGroupTableWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeMaxGroupKeysPerFabricWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeMaxGroupsPerFabricWithParams(params: MTRReadParams): NSDictionary<string, any>;

	writeAttributeGroupKeyMapWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeGroupKeyMapWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;
}

declare class MTRClusterGroups extends MTRGenericCluster {

	static alloc(): MTRClusterGroups; // inherited from NSObject

	static new(): MTRClusterGroups; // inherited from NSObject

	constructor(o: { device: MTRDevice; endpointID: number; queue: interop.Pointer | interop.Reference<any>; });

	constructor(o: { device: MTRDevice; endpoint: number; queue: interop.Pointer | interop.Reference<any>; });

	addGroupIfIdentifyingWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRGroupsClusterAddGroupIfIdentifyingParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: NSError) => void): void;

	addGroupIfIdentifyingWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRGroupsClusterAddGroupIfIdentifyingParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: NSError) => void): void;

	addGroupWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRGroupsClusterAddGroupParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: MTRGroupsClusterAddGroupResponseParams, p2: NSError) => void): void;

	addGroupWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRGroupsClusterAddGroupParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: MTRGroupsClusterAddGroupResponseParams, p2: NSError) => void): void;

	getGroupMembershipWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRGroupsClusterGetGroupMembershipParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: MTRGroupsClusterGetGroupMembershipResponseParams, p2: NSError) => void): void;

	getGroupMembershipWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRGroupsClusterGetGroupMembershipParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: MTRGroupsClusterGetGroupMembershipResponseParams, p2: NSError) => void): void;

	initWithDeviceEndpointIDQueue(device: MTRDevice, endpointID: number, queue: interop.Pointer | interop.Reference<any>): this;

	initWithDeviceEndpointQueue(device: MTRDevice, endpoint: number, queue: interop.Pointer | interop.Reference<any>): this;

	readAttributeAcceptedCommandListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeAttributeListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeClusterRevisionWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeFeatureMapWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeGeneratedCommandListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeNameSupportWithParams(params: MTRReadParams): NSDictionary<string, any>;

	removeAllGroupsWithExpectedValuesExpectedValueIntervalCompletion(expectedValues: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: NSError) => void): void;

	removeAllGroupsWithExpectedValuesExpectedValueIntervalCompletionHandler(expectedValues: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: NSError) => void): void;

	removeAllGroupsWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRGroupsClusterRemoveAllGroupsParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: NSError) => void): void;

	removeAllGroupsWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRGroupsClusterRemoveAllGroupsParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: NSError) => void): void;

	removeGroupWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRGroupsClusterRemoveGroupParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: MTRGroupsClusterRemoveGroupResponseParams, p2: NSError) => void): void;

	removeGroupWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRGroupsClusterRemoveGroupParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: MTRGroupsClusterRemoveGroupResponseParams, p2: NSError) => void): void;

	viewGroupWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRGroupsClusterViewGroupParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: MTRGroupsClusterViewGroupResponseParams, p2: NSError) => void): void;

	viewGroupWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRGroupsClusterViewGroupParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: MTRGroupsClusterViewGroupResponseParams, p2: NSError) => void): void;
}

declare const enum MTRClusterIDType {

	IdentifyID = 3,

	GroupsID = 4,

	ScenesID = 5,

	OnOffID = 6,

	OnOffSwitchConfigurationID = 7,

	LevelControlID = 8,

	BinaryInputBasicID = 15,

	PulseWidthModulationID = 28,

	DescriptorID = 29,

	BindingID = 30,

	AccessControlID = 31,

	ActionsID = 37,

	BasicID = 40,

	OtaSoftwareUpdateProviderID = 41,

	OtaSoftwareUpdateRequestorID = 42,

	LocalizationConfigurationID = 43,

	TimeFormatLocalizationID = 44,

	UnitLocalizationID = 45,

	PowerSourceConfigurationID = 46,

	PowerSourceID = 47,

	GeneralCommissioningID = 48,

	NetworkCommissioningID = 49,

	DiagnosticLogsID = 50,

	GeneralDiagnosticsID = 51,

	SoftwareDiagnosticsID = 52,

	ThreadNetworkDiagnosticsID = 53,

	WiFiNetworkDiagnosticsID = 54,

	EthernetNetworkDiagnosticsID = 55,

	TimeSynchronizationID = 56,

	BridgedDeviceBasicID = 57,

	SwitchID = 59,

	AdministratorCommissioningID = 60,

	OperationalCredentialsID = 62,

	GroupKeyManagementID = 63,

	FixedLabelID = 64,

	UserLabelID = 65,

	BooleanStateID = 69,

	ModeSelectID = 80,

	DoorLockID = 257,

	WindowCoveringID = 258,

	BarrierControlID = 259,

	PumpConfigurationAndControlID = 512,

	ThermostatID = 513,

	FanControlID = 514,

	ThermostatUserInterfaceConfigurationID = 516,

	ColorControlID = 768,

	BallastConfigurationID = 769,

	IlluminanceMeasurementID = 1024,

	TemperatureMeasurementID = 1026,

	PressureMeasurementID = 1027,

	FlowMeasurementID = 1028,

	RelativeHumidityMeasurementID = 1029,

	OccupancySensingID = 1030,

	WakeOnLanID = 1283,

	ChannelID = 1284,

	TargetNavigatorID = 1285,

	MediaPlaybackID = 1286,

	MediaInputID = 1287,

	LowPowerID = 1288,

	KeypadInputID = 1289,

	ContentLauncherID = 1290,

	AudioOutputID = 1291,

	ApplicationLauncherID = 1292,

	ApplicationBasicID = 1293,

	AccountLoginID = 1294,

	ElectricalMeasurementID = 2820,

	TestClusterID = 4294048773,

	IDTypeIdentifyID = 3,

	IDTypeGroupsID = 4,

	IDTypeScenesID = 5,

	IDTypeOnOffID = 6,

	IDTypeOnOffSwitchConfigurationID = 7,

	IDTypeLevelControlID = 8,

	IDTypeBinaryInputBasicID = 15,

	IDTypePulseWidthModulationID = 28,

	IDTypeDescriptorID = 29,

	IDTypeBindingID = 30,

	IDTypeAccessControlID = 31,

	IDTypeActionsID = 37,

	IDTypeBasicInformationID = 40,

	IDTypeOTASoftwareUpdateProviderID = 41,

	IDTypeOTASoftwareUpdateRequestorID = 42,

	IDTypeLocalizationConfigurationID = 43,

	IDTypeTimeFormatLocalizationID = 44,

	IDTypeUnitLocalizationID = 45,

	IDTypePowerSourceConfigurationID = 46,

	IDTypePowerSourceID = 47,

	IDTypeGeneralCommissioningID = 48,

	IDTypeNetworkCommissioningID = 49,

	IDTypeDiagnosticLogsID = 50,

	IDTypeGeneralDiagnosticsID = 51,

	IDTypeSoftwareDiagnosticsID = 52,

	IDTypeThreadNetworkDiagnosticsID = 53,

	IDTypeWiFiNetworkDiagnosticsID = 54,

	IDTypeEthernetNetworkDiagnosticsID = 55,

	IDTypeTimeSynchronizationID = 56,

	IDTypeBridgedDeviceBasicInformationID = 57,

	IDTypeSwitchID = 59,

	IDTypeAdministratorCommissioningID = 60,

	IDTypeOperationalCredentialsID = 62,

	IDTypeGroupKeyManagementID = 63,

	IDTypeFixedLabelID = 64,

	IDTypeUserLabelID = 65,

	IDTypeBooleanStateID = 69,

	IDTypeICDManagementID = 70,

	IDTypeTimerID = 71,

	IDTypeOvenCavityOperationalStateID = 72,

	IDTypeOvenModeID = 73,

	IDTypeLaundryDryerControlsID = 74,

	IDTypeModeSelectID = 80,

	IDTypeLaundryWasherModeID = 81,

	IDTypeRefrigeratorAndTemperatureControlledCabinetModeID = 82,

	IDTypeLaundryWasherControlsID = 83,

	IDTypeRVCRunModeID = 84,

	IDTypeRVCCleanModeID = 85,

	IDTypeTemperatureControlID = 86,

	IDTypeRefrigeratorAlarmID = 87,

	IDTypeDishwasherModeID = 89,

	IDTypeAirQualityID = 91,

	IDTypeSmokeCOAlarmID = 92,

	IDTypeDishwasherAlarmID = 93,

	IDTypeMicrowaveOvenModeID = 94,

	IDTypeMicrowaveOvenControlID = 95,

	IDTypeOperationalStateID = 96,

	IDTypeRVCOperationalStateID = 97,

	IDTypeHEPAFilterMonitoringID = 113,

	IDTypeActivatedCarbonFilterMonitoringID = 114,

	IDTypeBooleanStateConfigurationID = 128,

	IDTypeValveConfigurationAndControlID = 129,

	IDTypeElectricalEnergyMeasurementID = 145,

	IDTypeDemandResponseLoadControlID = 150,

	IDTypeDeviceEnergyManagementID = 152,

	IDTypeEnergyEVSEID = 153,

	IDTypeEnergyPreferenceID = 155,

	IDTypeDoorLockID = 257,

	IDTypeWindowCoveringID = 258,

	IDTypeBarrierControlID = 259,

	IDTypePumpConfigurationAndControlID = 512,

	IDTypeThermostatID = 513,

	IDTypeFanControlID = 514,

	IDTypeThermostatUserInterfaceConfigurationID = 516,

	IDTypeColorControlID = 768,

	IDTypeBallastConfigurationID = 769,

	IDTypeIlluminanceMeasurementID = 1024,

	IDTypeTemperatureMeasurementID = 1026,

	IDTypePressureMeasurementID = 1027,

	IDTypeFlowMeasurementID = 1028,

	IDTypeRelativeHumidityMeasurementID = 1029,

	IDTypeOccupancySensingID = 1030,

	IDTypeCarbonMonoxideConcentrationMeasurementID = 1036,

	IDTypeCarbonDioxideConcentrationMeasurementID = 1037,

	IDTypeNitrogenDioxideConcentrationMeasurementID = 1043,

	IDTypeOzoneConcentrationMeasurementID = 1045,

	IDTypePM25ConcentrationMeasurementID = 1066,

	IDTypeFormaldehydeConcentrationMeasurementID = 1067,

	IDTypePM1ConcentrationMeasurementID = 1068,

	IDTypePM10ConcentrationMeasurementID = 1069,

	IDTypeTotalVolatileOrganicCompoundsConcentrationMeasurementID = 1070,

	IDTypeRadonConcentrationMeasurementID = 1071,

	IDTypeWakeOnLANID = 1283,

	IDTypeChannelID = 1284,

	IDTypeTargetNavigatorID = 1285,

	IDTypeMediaPlaybackID = 1286,

	IDTypeMediaInputID = 1287,

	IDTypeLowPowerID = 1288,

	IDTypeKeypadInputID = 1289,

	IDTypeContentLauncherID = 1290,

	IDTypeAudioOutputID = 1291,

	IDTypeApplicationLauncherID = 1292,

	IDTypeApplicationBasicID = 1293,

	IDTypeAccountLoginID = 1294,

	IDTypeContentControlID = 1295,

	IDTypeContentAppObserverID = 1296,

	IDTypeElectricalMeasurementID = 2820,

	IDTypeUnitTestingID = 4294048773,

	IDTypeSampleMEIID = 4294048800
}

declare class MTRClusterIdentify extends MTRGenericCluster {

	static alloc(): MTRClusterIdentify; // inherited from NSObject

	static new(): MTRClusterIdentify; // inherited from NSObject

	constructor(o: { device: MTRDevice; endpointID: number; queue: interop.Pointer | interop.Reference<any>; });

	constructor(o: { device: MTRDevice; endpoint: number; queue: interop.Pointer | interop.Reference<any>; });

	identifyWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRIdentifyClusterIdentifyParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: NSError) => void): void;

	identifyWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRIdentifyClusterIdentifyParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: NSError) => void): void;

	initWithDeviceEndpointIDQueue(device: MTRDevice, endpointID: number, queue: interop.Pointer | interop.Reference<any>): this;

	initWithDeviceEndpointQueue(device: MTRDevice, endpoint: number, queue: interop.Pointer | interop.Reference<any>): this;

	readAttributeAcceptedCommandListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeAttributeListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeClusterRevisionWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeFeatureMapWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeGeneratedCommandListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeIdentifyTimeWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeIdentifyTypeWithParams(params: MTRReadParams): NSDictionary<string, any>;

	triggerEffectWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRIdentifyClusterTriggerEffectParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: NSError) => void): void;

	triggerEffectWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRIdentifyClusterTriggerEffectParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeIdentifyTimeWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeIdentifyTimeWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;
}

declare class MTRClusterIlluminanceMeasurement extends MTRGenericCluster {

	static alloc(): MTRClusterIlluminanceMeasurement; // inherited from NSObject

	static new(): MTRClusterIlluminanceMeasurement; // inherited from NSObject

	constructor(o: { device: MTRDevice; endpointID: number; queue: interop.Pointer | interop.Reference<any>; });

	constructor(o: { device: MTRDevice; endpoint: number; queue: interop.Pointer | interop.Reference<any>; });

	initWithDeviceEndpointIDQueue(device: MTRDevice, endpointID: number, queue: interop.Pointer | interop.Reference<any>): this;

	initWithDeviceEndpointQueue(device: MTRDevice, endpoint: number, queue: interop.Pointer | interop.Reference<any>): this;

	readAttributeAcceptedCommandListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeAttributeListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeClusterRevisionWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeFeatureMapWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeGeneratedCommandListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeLightSensorTypeWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeMaxMeasuredValueWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeMeasuredValueWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeMinMeasuredValueWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeToleranceWithParams(params: MTRReadParams): NSDictionary<string, any>;
}

declare class MTRClusterKeypadInput extends MTRGenericCluster {

	static alloc(): MTRClusterKeypadInput; // inherited from NSObject

	static new(): MTRClusterKeypadInput; // inherited from NSObject

	constructor(o: { device: MTRDevice; endpointID: number; queue: interop.Pointer | interop.Reference<any>; });

	constructor(o: { device: MTRDevice; endpoint: number; queue: interop.Pointer | interop.Reference<any>; });

	initWithDeviceEndpointIDQueue(device: MTRDevice, endpointID: number, queue: interop.Pointer | interop.Reference<any>): this;

	initWithDeviceEndpointQueue(device: MTRDevice, endpoint: number, queue: interop.Pointer | interop.Reference<any>): this;

	readAttributeAcceptedCommandListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeAttributeListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeClusterRevisionWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeFeatureMapWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeGeneratedCommandListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	sendKeyWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRKeypadInputClusterSendKeyParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: MTRKeypadInputClusterSendKeyResponseParams, p2: NSError) => void): void;

	sendKeyWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRKeypadInputClusterSendKeyParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: MTRKeypadInputClusterSendKeyResponseParams, p2: NSError) => void): void;
}

declare class MTRClusterLevelControl extends MTRGenericCluster {

	static alloc(): MTRClusterLevelControl; // inherited from NSObject

	static new(): MTRClusterLevelControl; // inherited from NSObject

	constructor(o: { device: MTRDevice; endpointID: number; queue: interop.Pointer | interop.Reference<any>; });

	constructor(o: { device: MTRDevice; endpoint: number; queue: interop.Pointer | interop.Reference<any>; });

	initWithDeviceEndpointIDQueue(device: MTRDevice, endpointID: number, queue: interop.Pointer | interop.Reference<any>): this;

	initWithDeviceEndpointQueue(device: MTRDevice, endpoint: number, queue: interop.Pointer | interop.Reference<any>): this;

	moveToClosestFrequencyWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRLevelControlClusterMoveToClosestFrequencyParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: NSError) => void): void;

	moveToClosestFrequencyWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRLevelControlClusterMoveToClosestFrequencyParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: NSError) => void): void;

	moveToLevelWithOnOffWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRLevelControlClusterMoveToLevelWithOnOffParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: NSError) => void): void;

	moveToLevelWithOnOffWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRLevelControlClusterMoveToLevelWithOnOffParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: NSError) => void): void;

	moveToLevelWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRLevelControlClusterMoveToLevelParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: NSError) => void): void;

	moveToLevelWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRLevelControlClusterMoveToLevelParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: NSError) => void): void;

	moveWithOnOffWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRLevelControlClusterMoveWithOnOffParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: NSError) => void): void;

	moveWithOnOffWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRLevelControlClusterMoveWithOnOffParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: NSError) => void): void;

	moveWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRLevelControlClusterMoveParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: NSError) => void): void;

	moveWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRLevelControlClusterMoveParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: NSError) => void): void;

	readAttributeAcceptedCommandListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeAttributeListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeClusterRevisionWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeCurrentFrequencyWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeCurrentLevelWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeDefaultMoveRateWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeFeatureMapWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeGeneratedCommandListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeMaxFrequencyWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeMaxLevelWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeMinFrequencyWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeMinLevelWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeOffTransitionTimeWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeOnLevelWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeOnOffTransitionTimeWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeOnTransitionTimeWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeOptionsWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeRemainingTimeWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeStartUpCurrentLevelWithParams(params: MTRReadParams): NSDictionary<string, any>;

	stepWithOnOffWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRLevelControlClusterStepWithOnOffParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: NSError) => void): void;

	stepWithOnOffWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRLevelControlClusterStepWithOnOffParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: NSError) => void): void;

	stepWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRLevelControlClusterStepParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: NSError) => void): void;

	stepWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRLevelControlClusterStepParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: NSError) => void): void;

	stopWithOnOffWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRLevelControlClusterStopWithOnOffParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: NSError) => void): void;

	stopWithOnOffWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRLevelControlClusterStopWithOnOffParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: NSError) => void): void;

	stopWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRLevelControlClusterStopParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: NSError) => void): void;

	stopWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRLevelControlClusterStopParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeDefaultMoveRateWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeDefaultMoveRateWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeOffTransitionTimeWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeOffTransitionTimeWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeOnLevelWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeOnLevelWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeOnOffTransitionTimeWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeOnOffTransitionTimeWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeOnTransitionTimeWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeOnTransitionTimeWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeOptionsWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeOptionsWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeStartUpCurrentLevelWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeStartUpCurrentLevelWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;
}

declare class MTRClusterLocalizationConfiguration extends MTRGenericCluster {

	static alloc(): MTRClusterLocalizationConfiguration; // inherited from NSObject

	static new(): MTRClusterLocalizationConfiguration; // inherited from NSObject

	constructor(o: { device: MTRDevice; endpointID: number; queue: interop.Pointer | interop.Reference<any>; });

	constructor(o: { device: MTRDevice; endpoint: number; queue: interop.Pointer | interop.Reference<any>; });

	initWithDeviceEndpointIDQueue(device: MTRDevice, endpointID: number, queue: interop.Pointer | interop.Reference<any>): this;

	initWithDeviceEndpointQueue(device: MTRDevice, endpoint: number, queue: interop.Pointer | interop.Reference<any>): this;

	readAttributeAcceptedCommandListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeActiveLocaleWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeAttributeListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeClusterRevisionWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeFeatureMapWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeGeneratedCommandListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeSupportedLocalesWithParams(params: MTRReadParams): NSDictionary<string, any>;

	writeAttributeActiveLocaleWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeActiveLocaleWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;
}

declare class MTRClusterLowPower extends MTRGenericCluster {

	static alloc(): MTRClusterLowPower; // inherited from NSObject

	static new(): MTRClusterLowPower; // inherited from NSObject

	constructor(o: { device: MTRDevice; endpointID: number; queue: interop.Pointer | interop.Reference<any>; });

	constructor(o: { device: MTRDevice; endpoint: number; queue: interop.Pointer | interop.Reference<any>; });

	initWithDeviceEndpointIDQueue(device: MTRDevice, endpointID: number, queue: interop.Pointer | interop.Reference<any>): this;

	initWithDeviceEndpointQueue(device: MTRDevice, endpoint: number, queue: interop.Pointer | interop.Reference<any>): this;

	readAttributeAcceptedCommandListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeAttributeListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeClusterRevisionWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeFeatureMapWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeGeneratedCommandListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	sleepWithExpectedValuesExpectedValueIntervalCompletion(expectedValues: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: NSError) => void): void;

	sleepWithExpectedValuesExpectedValueIntervalCompletionHandler(expectedValues: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: NSError) => void): void;

	sleepWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRLowPowerClusterSleepParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: NSError) => void): void;

	sleepWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRLowPowerClusterSleepParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: NSError) => void): void;
}

declare class MTRClusterMediaInput extends MTRGenericCluster {

	static alloc(): MTRClusterMediaInput; // inherited from NSObject

	static new(): MTRClusterMediaInput; // inherited from NSObject

	constructor(o: { device: MTRDevice; endpointID: number; queue: interop.Pointer | interop.Reference<any>; });

	constructor(o: { device: MTRDevice; endpoint: number; queue: interop.Pointer | interop.Reference<any>; });

	hideInputStatusWithExpectedValuesExpectedValueIntervalCompletion(expectedValues: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: NSError) => void): void;

	hideInputStatusWithExpectedValuesExpectedValueIntervalCompletionHandler(expectedValues: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: NSError) => void): void;

	hideInputStatusWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRMediaInputClusterHideInputStatusParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: NSError) => void): void;

	hideInputStatusWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRMediaInputClusterHideInputStatusParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: NSError) => void): void;

	initWithDeviceEndpointIDQueue(device: MTRDevice, endpointID: number, queue: interop.Pointer | interop.Reference<any>): this;

	initWithDeviceEndpointQueue(device: MTRDevice, endpoint: number, queue: interop.Pointer | interop.Reference<any>): this;

	readAttributeAcceptedCommandListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeAttributeListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeClusterRevisionWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeCurrentInputWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeFeatureMapWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeGeneratedCommandListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeInputListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	renameInputWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRMediaInputClusterRenameInputParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: NSError) => void): void;

	renameInputWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRMediaInputClusterRenameInputParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: NSError) => void): void;

	selectInputWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRMediaInputClusterSelectInputParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: NSError) => void): void;

	selectInputWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRMediaInputClusterSelectInputParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: NSError) => void): void;

	showInputStatusWithExpectedValuesExpectedValueIntervalCompletion(expectedValues: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: NSError) => void): void;

	showInputStatusWithExpectedValuesExpectedValueIntervalCompletionHandler(expectedValues: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: NSError) => void): void;

	showInputStatusWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRMediaInputClusterShowInputStatusParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: NSError) => void): void;

	showInputStatusWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRMediaInputClusterShowInputStatusParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: NSError) => void): void;
}

declare class MTRClusterMediaPlayback extends MTRGenericCluster {

	static alloc(): MTRClusterMediaPlayback; // inherited from NSObject

	static new(): MTRClusterMediaPlayback; // inherited from NSObject

	constructor(o: { device: MTRDevice; endpointID: number; queue: interop.Pointer | interop.Reference<any>; });

	constructor(o: { device: MTRDevice; endpoint: number; queue: interop.Pointer | interop.Reference<any>; });

	fastForwardWithExpectedValuesExpectedValueIntervalCompletion(expectedValues: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: MTRMediaPlaybackClusterPlaybackResponseParams, p2: NSError) => void): void;

	fastForwardWithExpectedValuesExpectedValueIntervalCompletionHandler(expectedValues: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: MTRMediaPlaybackClusterPlaybackResponseParams, p2: NSError) => void): void;

	fastForwardWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRMediaPlaybackClusterFastForwardParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: MTRMediaPlaybackClusterPlaybackResponseParams, p2: NSError) => void): void;

	fastForwardWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRMediaPlaybackClusterFastForwardParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: MTRMediaPlaybackClusterPlaybackResponseParams, p2: NSError) => void): void;

	initWithDeviceEndpointIDQueue(device: MTRDevice, endpointID: number, queue: interop.Pointer | interop.Reference<any>): this;

	initWithDeviceEndpointQueue(device: MTRDevice, endpoint: number, queue: interop.Pointer | interop.Reference<any>): this;

	nextWithExpectedValuesExpectedValueIntervalCompletion(expectedValues: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: MTRMediaPlaybackClusterPlaybackResponseParams, p2: NSError) => void): void;

	nextWithExpectedValuesExpectedValueIntervalCompletionHandler(expectedValues: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: MTRMediaPlaybackClusterPlaybackResponseParams, p2: NSError) => void): void;

	nextWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRMediaPlaybackClusterNextParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: MTRMediaPlaybackClusterPlaybackResponseParams, p2: NSError) => void): void;

	nextWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRMediaPlaybackClusterNextParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: MTRMediaPlaybackClusterPlaybackResponseParams, p2: NSError) => void): void;

	pauseWithExpectedValuesExpectedValueIntervalCompletion(expectedValues: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: MTRMediaPlaybackClusterPlaybackResponseParams, p2: NSError) => void): void;

	pauseWithExpectedValuesExpectedValueIntervalCompletionHandler(expectedValues: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: MTRMediaPlaybackClusterPlaybackResponseParams, p2: NSError) => void): void;

	pauseWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRMediaPlaybackClusterPauseParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: MTRMediaPlaybackClusterPlaybackResponseParams, p2: NSError) => void): void;

	pauseWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRMediaPlaybackClusterPauseParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: MTRMediaPlaybackClusterPlaybackResponseParams, p2: NSError) => void): void;

	playWithExpectedValuesExpectedValueIntervalCompletion(expectedValues: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: MTRMediaPlaybackClusterPlaybackResponseParams, p2: NSError) => void): void;

	playWithExpectedValuesExpectedValueIntervalCompletionHandler(expectedValues: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: MTRMediaPlaybackClusterPlaybackResponseParams, p2: NSError) => void): void;

	playWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRMediaPlaybackClusterPlayParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: MTRMediaPlaybackClusterPlaybackResponseParams, p2: NSError) => void): void;

	playWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRMediaPlaybackClusterPlayParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: MTRMediaPlaybackClusterPlaybackResponseParams, p2: NSError) => void): void;

	previousWithExpectedValuesExpectedValueIntervalCompletion(expectedValues: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: MTRMediaPlaybackClusterPlaybackResponseParams, p2: NSError) => void): void;

	previousWithExpectedValuesExpectedValueIntervalCompletionHandler(expectedValues: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: MTRMediaPlaybackClusterPlaybackResponseParams, p2: NSError) => void): void;

	previousWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRMediaPlaybackClusterPreviousParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: MTRMediaPlaybackClusterPlaybackResponseParams, p2: NSError) => void): void;

	previousWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRMediaPlaybackClusterPreviousParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: MTRMediaPlaybackClusterPlaybackResponseParams, p2: NSError) => void): void;

	readAttributeAcceptedCommandListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeAttributeListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeClusterRevisionWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeCurrentStateWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeDurationWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeFeatureMapWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeGeneratedCommandListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributePlaybackSpeedWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeSampledPositionWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeSeekRangeEndWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeSeekRangeStartWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeStartTimeWithParams(params: MTRReadParams): NSDictionary<string, any>;

	rewindWithExpectedValuesExpectedValueIntervalCompletion(expectedValues: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: MTRMediaPlaybackClusterPlaybackResponseParams, p2: NSError) => void): void;

	rewindWithExpectedValuesExpectedValueIntervalCompletionHandler(expectedValues: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: MTRMediaPlaybackClusterPlaybackResponseParams, p2: NSError) => void): void;

	rewindWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRMediaPlaybackClusterRewindParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: MTRMediaPlaybackClusterPlaybackResponseParams, p2: NSError) => void): void;

	rewindWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRMediaPlaybackClusterRewindParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: MTRMediaPlaybackClusterPlaybackResponseParams, p2: NSError) => void): void;

	seekWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRMediaPlaybackClusterSeekParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: MTRMediaPlaybackClusterPlaybackResponseParams, p2: NSError) => void): void;

	seekWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRMediaPlaybackClusterSeekParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: MTRMediaPlaybackClusterPlaybackResponseParams, p2: NSError) => void): void;

	skipBackwardWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRMediaPlaybackClusterSkipBackwardParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: MTRMediaPlaybackClusterPlaybackResponseParams, p2: NSError) => void): void;

	skipBackwardWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRMediaPlaybackClusterSkipBackwardParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: MTRMediaPlaybackClusterPlaybackResponseParams, p2: NSError) => void): void;

	skipForwardWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRMediaPlaybackClusterSkipForwardParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: MTRMediaPlaybackClusterPlaybackResponseParams, p2: NSError) => void): void;

	skipForwardWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRMediaPlaybackClusterSkipForwardParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: MTRMediaPlaybackClusterPlaybackResponseParams, p2: NSError) => void): void;

	startOverWithExpectedValuesExpectedValueIntervalCompletion(expectedValues: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: MTRMediaPlaybackClusterPlaybackResponseParams, p2: NSError) => void): void;

	startOverWithExpectedValuesExpectedValueIntervalCompletionHandler(expectedValues: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: MTRMediaPlaybackClusterPlaybackResponseParams, p2: NSError) => void): void;

	startOverWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRMediaPlaybackClusterStartOverParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: MTRMediaPlaybackClusterPlaybackResponseParams, p2: NSError) => void): void;

	startOverWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRMediaPlaybackClusterStartOverParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: MTRMediaPlaybackClusterPlaybackResponseParams, p2: NSError) => void): void;

	stopPlaybackWithExpectedValuesExpectedValueIntervalCompletionHandler(expectedValues: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: MTRMediaPlaybackClusterPlaybackResponseParams, p2: NSError) => void): void;

	stopPlaybackWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRMediaPlaybackClusterStopPlaybackParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: MTRMediaPlaybackClusterPlaybackResponseParams, p2: NSError) => void): void;

	stopWithExpectedValuesExpectedValueIntervalCompletion(expectedValues: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: MTRMediaPlaybackClusterPlaybackResponseParams, p2: NSError) => void): void;

	stopWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRMediaPlaybackClusterStopParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: MTRMediaPlaybackClusterPlaybackResponseParams, p2: NSError) => void): void;
}

declare class MTRClusterModeSelect extends MTRGenericCluster {

	static alloc(): MTRClusterModeSelect; // inherited from NSObject

	static new(): MTRClusterModeSelect; // inherited from NSObject

	constructor(o: { device: MTRDevice; endpointID: number; queue: interop.Pointer | interop.Reference<any>; });

	constructor(o: { device: MTRDevice; endpoint: number; queue: interop.Pointer | interop.Reference<any>; });

	changeToModeWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRModeSelectClusterChangeToModeParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: NSError) => void): void;

	changeToModeWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRModeSelectClusterChangeToModeParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: NSError) => void): void;

	initWithDeviceEndpointIDQueue(device: MTRDevice, endpointID: number, queue: interop.Pointer | interop.Reference<any>): this;

	initWithDeviceEndpointQueue(device: MTRDevice, endpoint: number, queue: interop.Pointer | interop.Reference<any>): this;

	readAttributeAcceptedCommandListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeAttributeListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeClusterRevisionWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeCurrentModeWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeDescriptionWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeFeatureMapWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeGeneratedCommandListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeOnModeWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeStandardNamespaceWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeStartUpModeWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeSupportedModesWithParams(params: MTRReadParams): NSDictionary<string, any>;

	writeAttributeOnModeWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeOnModeWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeStartUpModeWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeStartUpModeWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;
}

declare class MTRClusterNetworkCommissioning extends MTRGenericCluster {

	static alloc(): MTRClusterNetworkCommissioning; // inherited from NSObject

	static new(): MTRClusterNetworkCommissioning; // inherited from NSObject

	constructor(o: { device: MTRDevice; endpointID: number; queue: interop.Pointer | interop.Reference<any>; });

	constructor(o: { device: MTRDevice; endpoint: number; queue: interop.Pointer | interop.Reference<any>; });

	addOrUpdateThreadNetworkWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRNetworkCommissioningClusterAddOrUpdateThreadNetworkParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: MTRNetworkCommissioningClusterNetworkConfigResponseParams, p2: NSError) => void): void;

	addOrUpdateThreadNetworkWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRNetworkCommissioningClusterAddOrUpdateThreadNetworkParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: MTRNetworkCommissioningClusterNetworkConfigResponseParams, p2: NSError) => void): void;

	addOrUpdateWiFiNetworkWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRNetworkCommissioningClusterAddOrUpdateWiFiNetworkParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: MTRNetworkCommissioningClusterNetworkConfigResponseParams, p2: NSError) => void): void;

	addOrUpdateWiFiNetworkWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRNetworkCommissioningClusterAddOrUpdateWiFiNetworkParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: MTRNetworkCommissioningClusterNetworkConfigResponseParams, p2: NSError) => void): void;

	connectNetworkWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRNetworkCommissioningClusterConnectNetworkParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: MTRNetworkCommissioningClusterConnectNetworkResponseParams, p2: NSError) => void): void;

	connectNetworkWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRNetworkCommissioningClusterConnectNetworkParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: MTRNetworkCommissioningClusterConnectNetworkResponseParams, p2: NSError) => void): void;

	initWithDeviceEndpointIDQueue(device: MTRDevice, endpointID: number, queue: interop.Pointer | interop.Reference<any>): this;

	initWithDeviceEndpointQueue(device: MTRDevice, endpoint: number, queue: interop.Pointer | interop.Reference<any>): this;

	readAttributeAcceptedCommandListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeAttributeListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeClusterRevisionWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeConnectMaxTimeSecondsWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeFeatureMapWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeGeneratedCommandListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeInterfaceEnabledWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeLastConnectErrorValueWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeLastNetworkIDWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeLastNetworkingStatusWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeMaxNetworksWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeNetworksWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeScanMaxTimeSecondsWithParams(params: MTRReadParams): NSDictionary<string, any>;

	removeNetworkWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRNetworkCommissioningClusterRemoveNetworkParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: MTRNetworkCommissioningClusterNetworkConfigResponseParams, p2: NSError) => void): void;

	removeNetworkWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRNetworkCommissioningClusterRemoveNetworkParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: MTRNetworkCommissioningClusterNetworkConfigResponseParams, p2: NSError) => void): void;

	reorderNetworkWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRNetworkCommissioningClusterReorderNetworkParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: MTRNetworkCommissioningClusterNetworkConfigResponseParams, p2: NSError) => void): void;

	reorderNetworkWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRNetworkCommissioningClusterReorderNetworkParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: MTRNetworkCommissioningClusterNetworkConfigResponseParams, p2: NSError) => void): void;

	scanNetworksWithExpectedValuesExpectedValueIntervalCompletion(expectedValues: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: MTRNetworkCommissioningClusterScanNetworksResponseParams, p2: NSError) => void): void;

	scanNetworksWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRNetworkCommissioningClusterScanNetworksParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: MTRNetworkCommissioningClusterScanNetworksResponseParams, p2: NSError) => void): void;

	scanNetworksWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRNetworkCommissioningClusterScanNetworksParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: MTRNetworkCommissioningClusterScanNetworksResponseParams, p2: NSError) => void): void;

	writeAttributeInterfaceEnabledWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeInterfaceEnabledWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;
}

declare class MTRClusterOTASoftwareUpdateProvider extends MTRGenericCluster {

	static alloc(): MTRClusterOTASoftwareUpdateProvider; // inherited from NSObject

	static new(): MTRClusterOTASoftwareUpdateProvider; // inherited from NSObject

	constructor(o: { device: MTRDevice; endpointID: number; queue: interop.Pointer | interop.Reference<any>; });

	applyUpdateRequestWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTROTASoftwareUpdateProviderClusterApplyUpdateRequestParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: MTROTASoftwareUpdateProviderClusterApplyUpdateResponseParams, p2: NSError) => void): void;

	initWithDeviceEndpointIDQueue(device: MTRDevice, endpointID: number, queue: interop.Pointer | interop.Reference<any>): this;

	notifyUpdateAppliedWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTROTASoftwareUpdateProviderClusterNotifyUpdateAppliedParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: NSError) => void): void;

	queryImageWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTROTASoftwareUpdateProviderClusterQueryImageParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: MTROTASoftwareUpdateProviderClusterQueryImageResponseParams, p2: NSError) => void): void;

	readAttributeAcceptedCommandListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeAttributeListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeClusterRevisionWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeFeatureMapWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeGeneratedCommandListWithParams(params: MTRReadParams): NSDictionary<string, any>;
}

declare class MTRClusterOTASoftwareUpdateRequestor extends MTRGenericCluster {

	static alloc(): MTRClusterOTASoftwareUpdateRequestor; // inherited from NSObject

	static new(): MTRClusterOTASoftwareUpdateRequestor; // inherited from NSObject

	constructor(o: { device: MTRDevice; endpointID: number; queue: interop.Pointer | interop.Reference<any>; });

	announceOTAProviderWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTROTASoftwareUpdateRequestorClusterAnnounceOTAProviderParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: NSError) => void): void;

	initWithDeviceEndpointIDQueue(device: MTRDevice, endpointID: number, queue: interop.Pointer | interop.Reference<any>): this;

	readAttributeAcceptedCommandListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeAttributeListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeClusterRevisionWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeDefaultOTAProvidersWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeFeatureMapWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeGeneratedCommandListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeUpdatePossibleWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeUpdateStateProgressWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeUpdateStateWithParams(params: MTRReadParams): NSDictionary<string, any>;

	writeAttributeDefaultOTAProvidersWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeDefaultOTAProvidersWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;
}

declare class MTRClusterOccupancySensing extends MTRGenericCluster {

	static alloc(): MTRClusterOccupancySensing; // inherited from NSObject

	static new(): MTRClusterOccupancySensing; // inherited from NSObject

	constructor(o: { device: MTRDevice; endpointID: number; queue: interop.Pointer | interop.Reference<any>; });

	constructor(o: { device: MTRDevice; endpoint: number; queue: interop.Pointer | interop.Reference<any>; });

	initWithDeviceEndpointIDQueue(device: MTRDevice, endpointID: number, queue: interop.Pointer | interop.Reference<any>): this;

	initWithDeviceEndpointQueue(device: MTRDevice, endpoint: number, queue: interop.Pointer | interop.Reference<any>): this;

	readAttributeAcceptedCommandListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeAttributeListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeClusterRevisionWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeFeatureMapWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeGeneratedCommandListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeOccupancySensorTypeBitmapWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeOccupancySensorTypeWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeOccupancyWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributePIROccupiedToUnoccupiedDelayWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributePIRUnoccupiedToOccupiedDelayWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributePIRUnoccupiedToOccupiedThresholdWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributePhysicalContactOccupiedToUnoccupiedDelayWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributePhysicalContactUnoccupiedToOccupiedDelayWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributePhysicalContactUnoccupiedToOccupiedThresholdWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributePirOccupiedToUnoccupiedDelayWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributePirUnoccupiedToOccupiedDelayWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributePirUnoccupiedToOccupiedThresholdWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeUltrasonicOccupiedToUnoccupiedDelayWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeUltrasonicUnoccupiedToOccupiedDelayWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeUltrasonicUnoccupiedToOccupiedThresholdWithParams(params: MTRReadParams): NSDictionary<string, any>;

	writeAttributePIROccupiedToUnoccupiedDelayWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributePIROccupiedToUnoccupiedDelayWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributePIRUnoccupiedToOccupiedDelayWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributePIRUnoccupiedToOccupiedDelayWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributePIRUnoccupiedToOccupiedThresholdWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributePIRUnoccupiedToOccupiedThresholdWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributePhysicalContactOccupiedToUnoccupiedDelayWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributePhysicalContactOccupiedToUnoccupiedDelayWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributePhysicalContactUnoccupiedToOccupiedDelayWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributePhysicalContactUnoccupiedToOccupiedDelayWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributePhysicalContactUnoccupiedToOccupiedThresholdWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributePhysicalContactUnoccupiedToOccupiedThresholdWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributePirOccupiedToUnoccupiedDelayWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributePirOccupiedToUnoccupiedDelayWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributePirUnoccupiedToOccupiedDelayWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributePirUnoccupiedToOccupiedDelayWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributePirUnoccupiedToOccupiedThresholdWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributePirUnoccupiedToOccupiedThresholdWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeUltrasonicOccupiedToUnoccupiedDelayWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeUltrasonicOccupiedToUnoccupiedDelayWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeUltrasonicUnoccupiedToOccupiedDelayWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeUltrasonicUnoccupiedToOccupiedDelayWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeUltrasonicUnoccupiedToOccupiedThresholdWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeUltrasonicUnoccupiedToOccupiedThresholdWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;
}

declare class MTRClusterOnOff extends MTRGenericCluster {

	static alloc(): MTRClusterOnOff; // inherited from NSObject

	static new(): MTRClusterOnOff; // inherited from NSObject

	constructor(o: { device: MTRDevice; endpointID: number; queue: interop.Pointer | interop.Reference<any>; });

	constructor(o: { device: MTRDevice; endpoint: number; queue: interop.Pointer | interop.Reference<any>; });

	initWithDeviceEndpointIDQueue(device: MTRDevice, endpointID: number, queue: interop.Pointer | interop.Reference<any>): this;

	initWithDeviceEndpointQueue(device: MTRDevice, endpoint: number, queue: interop.Pointer | interop.Reference<any>): this;

	offWithEffectWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTROnOffClusterOffWithEffectParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: NSError) => void): void;

	offWithEffectWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTROnOffClusterOffWithEffectParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: NSError) => void): void;

	offWithExpectedValuesExpectedValueIntervalCompletion(expectedValues: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: NSError) => void): void;

	offWithExpectedValuesExpectedValueIntervalCompletionHandler(expectedValues: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: NSError) => void): void;

	offWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTROnOffClusterOffParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: NSError) => void): void;

	offWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTROnOffClusterOffParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: NSError) => void): void;

	onWithExpectedValuesExpectedValueIntervalCompletion(expectedValues: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: NSError) => void): void;

	onWithExpectedValuesExpectedValueIntervalCompletionHandler(expectedValues: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: NSError) => void): void;

	onWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTROnOffClusterOnParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: NSError) => void): void;

	onWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTROnOffClusterOnParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: NSError) => void): void;

	onWithRecallGlobalSceneWithExpectedValuesExpectedValueIntervalCompletion(expectedValues: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: NSError) => void): void;

	onWithRecallGlobalSceneWithExpectedValuesExpectedValueIntervalCompletionHandler(expectedValues: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: NSError) => void): void;

	onWithRecallGlobalSceneWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTROnOffClusterOnWithRecallGlobalSceneParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: NSError) => void): void;

	onWithRecallGlobalSceneWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTROnOffClusterOnWithRecallGlobalSceneParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: NSError) => void): void;

	onWithTimedOffWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTROnOffClusterOnWithTimedOffParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: NSError) => void): void;

	onWithTimedOffWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTROnOffClusterOnWithTimedOffParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: NSError) => void): void;

	readAttributeAcceptedCommandListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeAttributeListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeClusterRevisionWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeFeatureMapWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeGeneratedCommandListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeGlobalSceneControlWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeOffWaitTimeWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeOnOffWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeOnTimeWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeStartUpOnOffWithParams(params: MTRReadParams): NSDictionary<string, any>;

	toggleWithExpectedValuesExpectedValueIntervalCompletion(expectedValues: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: NSError) => void): void;

	toggleWithExpectedValuesExpectedValueIntervalCompletionHandler(expectedValues: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: NSError) => void): void;

	toggleWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTROnOffClusterToggleParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: NSError) => void): void;

	toggleWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTROnOffClusterToggleParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeOffWaitTimeWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeOffWaitTimeWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeOnTimeWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeOnTimeWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeStartUpOnOffWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeStartUpOnOffWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;
}

declare class MTRClusterOnOffSwitchConfiguration extends MTRGenericCluster {

	static alloc(): MTRClusterOnOffSwitchConfiguration; // inherited from NSObject

	static new(): MTRClusterOnOffSwitchConfiguration; // inherited from NSObject

	constructor(o: { device: MTRDevice; endpointID: number; queue: interop.Pointer | interop.Reference<any>; });

	constructor(o: { device: MTRDevice; endpoint: number; queue: interop.Pointer | interop.Reference<any>; });

	initWithDeviceEndpointIDQueue(device: MTRDevice, endpointID: number, queue: interop.Pointer | interop.Reference<any>): this;

	initWithDeviceEndpointQueue(device: MTRDevice, endpoint: number, queue: interop.Pointer | interop.Reference<any>): this;

	readAttributeAcceptedCommandListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeAttributeListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeClusterRevisionWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeFeatureMapWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeGeneratedCommandListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeSwitchActionsWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeSwitchTypeWithParams(params: MTRReadParams): NSDictionary<string, any>;

	writeAttributeSwitchActionsWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeSwitchActionsWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;
}

declare class MTRClusterOperationalCredentials extends MTRGenericCluster {

	static alloc(): MTRClusterOperationalCredentials; // inherited from NSObject

	static new(): MTRClusterOperationalCredentials; // inherited from NSObject

	constructor(o: { device: MTRDevice; endpointID: number; queue: interop.Pointer | interop.Reference<any>; });

	constructor(o: { device: MTRDevice; endpoint: number; queue: interop.Pointer | interop.Reference<any>; });

	CSRRequestWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTROperationalCredentialsClusterCSRRequestParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: MTROperationalCredentialsClusterCSRResponseParams, p2: NSError) => void): void;

	CSRRequestWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTROperationalCredentialsClusterCSRRequestParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: MTROperationalCredentialsClusterCSRResponseParams, p2: NSError) => void): void;

	addNOCWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTROperationalCredentialsClusterAddNOCParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: MTROperationalCredentialsClusterNOCResponseParams, p2: NSError) => void): void;

	addNOCWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTROperationalCredentialsClusterAddNOCParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: MTROperationalCredentialsClusterNOCResponseParams, p2: NSError) => void): void;

	addTrustedRootCertificateWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTROperationalCredentialsClusterAddTrustedRootCertificateParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: NSError) => void): void;

	addTrustedRootCertificateWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTROperationalCredentialsClusterAddTrustedRootCertificateParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: NSError) => void): void;

	attestationRequestWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTROperationalCredentialsClusterAttestationRequestParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: MTROperationalCredentialsClusterAttestationResponseParams, p2: NSError) => void): void;

	attestationRequestWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTROperationalCredentialsClusterAttestationRequestParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: MTROperationalCredentialsClusterAttestationResponseParams, p2: NSError) => void): void;

	certificateChainRequestWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTROperationalCredentialsClusterCertificateChainRequestParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: MTROperationalCredentialsClusterCertificateChainResponseParams, p2: NSError) => void): void;

	certificateChainRequestWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTROperationalCredentialsClusterCertificateChainRequestParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: MTROperationalCredentialsClusterCertificateChainResponseParams, p2: NSError) => void): void;

	initWithDeviceEndpointIDQueue(device: MTRDevice, endpointID: number, queue: interop.Pointer | interop.Reference<any>): this;

	initWithDeviceEndpointQueue(device: MTRDevice, endpoint: number, queue: interop.Pointer | interop.Reference<any>): this;

	readAttributeAcceptedCommandListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeAttributeListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeClusterRevisionWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeCommissionedFabricsWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeCurrentFabricIndexWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeFabricsWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeFeatureMapWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeGeneratedCommandListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeNOCsWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeSupportedFabricsWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeTrustedRootCertificatesWithParams(params: MTRReadParams): NSDictionary<string, any>;

	removeFabricWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTROperationalCredentialsClusterRemoveFabricParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: MTROperationalCredentialsClusterNOCResponseParams, p2: NSError) => void): void;

	removeFabricWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTROperationalCredentialsClusterRemoveFabricParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: MTROperationalCredentialsClusterNOCResponseParams, p2: NSError) => void): void;

	updateFabricLabelWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTROperationalCredentialsClusterUpdateFabricLabelParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: MTROperationalCredentialsClusterNOCResponseParams, p2: NSError) => void): void;

	updateFabricLabelWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTROperationalCredentialsClusterUpdateFabricLabelParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: MTROperationalCredentialsClusterNOCResponseParams, p2: NSError) => void): void;

	updateNOCWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTROperationalCredentialsClusterUpdateNOCParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: MTROperationalCredentialsClusterNOCResponseParams, p2: NSError) => void): void;

	updateNOCWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTROperationalCredentialsClusterUpdateNOCParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: MTROperationalCredentialsClusterNOCResponseParams, p2: NSError) => void): void;
}

declare class MTRClusterOperationalState extends MTRGenericCluster {

	static alloc(): MTRClusterOperationalState; // inherited from NSObject

	static new(): MTRClusterOperationalState; // inherited from NSObject

	constructor(o: { device: MTRDevice; endpointID: number; queue: interop.Pointer | interop.Reference<any>; });

	initWithDeviceEndpointIDQueue(device: MTRDevice, endpointID: number, queue: interop.Pointer | interop.Reference<any>): this;

	pauseWithExpectedValuesExpectedValueIntervalCompletion(expectedValues: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: MTROperationalStateClusterOperationalCommandResponseParams, p2: NSError) => void): void;

	pauseWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTROperationalStateClusterPauseParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: MTROperationalStateClusterOperationalCommandResponseParams, p2: NSError) => void): void;

	readAttributeAcceptedCommandListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeAttributeListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeClusterRevisionWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeCountdownTimeWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeCurrentPhaseWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeFeatureMapWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeGeneratedCommandListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeOperationalErrorWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeOperationalStateListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeOperationalStateWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributePhaseListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	resumeWithExpectedValuesExpectedValueIntervalCompletion(expectedValues: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: MTROperationalStateClusterOperationalCommandResponseParams, p2: NSError) => void): void;

	resumeWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTROperationalStateClusterResumeParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: MTROperationalStateClusterOperationalCommandResponseParams, p2: NSError) => void): void;

	startWithExpectedValuesExpectedValueIntervalCompletion(expectedValues: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: MTROperationalStateClusterOperationalCommandResponseParams, p2: NSError) => void): void;

	startWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTROperationalStateClusterStartParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: MTROperationalStateClusterOperationalCommandResponseParams, p2: NSError) => void): void;

	stopWithExpectedValuesExpectedValueIntervalCompletion(expectedValues: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: MTROperationalStateClusterOperationalCommandResponseParams, p2: NSError) => void): void;

	stopWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTROperationalStateClusterStopParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: MTROperationalStateClusterOperationalCommandResponseParams, p2: NSError) => void): void;
}

declare class MTRClusterOtaSoftwareUpdateProvider extends MTRClusterOTASoftwareUpdateProvider {

	static alloc(): MTRClusterOtaSoftwareUpdateProvider; // inherited from NSObject

	static new(): MTRClusterOtaSoftwareUpdateProvider; // inherited from NSObject

	constructor(o: { device: MTRDevice; endpoint: number; queue: interop.Pointer | interop.Reference<any>; });

	applyUpdateRequestWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTROtaSoftwareUpdateProviderClusterApplyUpdateRequestParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: MTROtaSoftwareUpdateProviderClusterApplyUpdateResponseParams, p2: NSError) => void): void;

	initWithDeviceEndpointQueue(device: MTRDevice, endpoint: number, queue: interop.Pointer | interop.Reference<any>): this;

	notifyUpdateAppliedWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTROtaSoftwareUpdateProviderClusterNotifyUpdateAppliedParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: NSError) => void): void;

	queryImageWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTROtaSoftwareUpdateProviderClusterQueryImageParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: MTROtaSoftwareUpdateProviderClusterQueryImageResponseParams, p2: NSError) => void): void;
}

declare class MTRClusterOtaSoftwareUpdateRequestor extends MTRClusterOTASoftwareUpdateRequestor {

	static alloc(): MTRClusterOtaSoftwareUpdateRequestor; // inherited from NSObject

	static new(): MTRClusterOtaSoftwareUpdateRequestor; // inherited from NSObject

	constructor(o: { device: MTRDevice; endpoint: number; queue: interop.Pointer | interop.Reference<any>; });

	announceOtaProviderWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTROtaSoftwareUpdateRequestorClusterAnnounceOtaProviderParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: NSError) => void): void;

	initWithDeviceEndpointQueue(device: MTRDevice, endpoint: number, queue: interop.Pointer | interop.Reference<any>): this;

	readAttributeDefaultOtaProvidersWithParams(params: MTRReadParams): NSDictionary<string, any>;

	writeAttributeDefaultOtaProvidersWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeDefaultOtaProvidersWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;
}

declare class MTRClusterPath extends NSObject implements NSCopying {

	static alloc(): MTRClusterPath; // inherited from NSObject

	static clusterPathWithEndpointIDClusterID(endpointID: number, clusterID: number): MTRClusterPath;

	static new(): MTRClusterPath; // inherited from NSObject

	readonly cluster: number;

	readonly endpoint: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRClusterPowerSource extends MTRGenericCluster {

	static alloc(): MTRClusterPowerSource; // inherited from NSObject

	static new(): MTRClusterPowerSource; // inherited from NSObject

	constructor(o: { device: MTRDevice; endpointID: number; queue: interop.Pointer | interop.Reference<any>; });

	constructor(o: { device: MTRDevice; endpoint: number; queue: interop.Pointer | interop.Reference<any>; });

	initWithDeviceEndpointIDQueue(device: MTRDevice, endpointID: number, queue: interop.Pointer | interop.Reference<any>): this;

	initWithDeviceEndpointQueue(device: MTRDevice, endpoint: number, queue: interop.Pointer | interop.Reference<any>): this;

	readAttributeAcceptedCommandListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeActiveBatChargeFaultsWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeActiveBatFaultsWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeActiveWiredFaultsWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeAttributeListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeBatANSIDesignationWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeBatApprovedChemistryWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeBatCapacityWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeBatChargeLevelWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeBatChargeStateWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeBatChargingCurrentWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeBatCommonDesignationWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeBatFunctionalWhileChargingWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeBatIECDesignationWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeBatPercentRemainingWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeBatPresentWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeBatQuantityWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeBatReplaceabilityWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeBatReplacementDescriptionWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeBatReplacementNeededWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeBatTimeRemainingWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeBatTimeToFullChargeWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeBatVoltageWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeClusterRevisionWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeDescriptionWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeEndpointListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeFeatureMapWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeGeneratedCommandListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeOrderWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeStatusWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeWiredAssessedCurrentWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeWiredAssessedInputFrequencyWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeWiredAssessedInputVoltageWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeWiredCurrentTypeWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeWiredMaximumCurrentWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeWiredNominalVoltageWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeWiredPresentWithParams(params: MTRReadParams): NSDictionary<string, any>;
}

declare class MTRClusterPowerSourceConfiguration extends MTRGenericCluster {

	static alloc(): MTRClusterPowerSourceConfiguration; // inherited from NSObject

	static new(): MTRClusterPowerSourceConfiguration; // inherited from NSObject

	constructor(o: { device: MTRDevice; endpointID: number; queue: interop.Pointer | interop.Reference<any>; });

	constructor(o: { device: MTRDevice; endpoint: number; queue: interop.Pointer | interop.Reference<any>; });

	initWithDeviceEndpointIDQueue(device: MTRDevice, endpointID: number, queue: interop.Pointer | interop.Reference<any>): this;

	initWithDeviceEndpointQueue(device: MTRDevice, endpoint: number, queue: interop.Pointer | interop.Reference<any>): this;

	readAttributeAcceptedCommandListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeAttributeListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeClusterRevisionWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeFeatureMapWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeGeneratedCommandListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeSourcesWithParams(params: MTRReadParams): NSDictionary<string, any>;
}

declare class MTRClusterPressureMeasurement extends MTRGenericCluster {

	static alloc(): MTRClusterPressureMeasurement; // inherited from NSObject

	static new(): MTRClusterPressureMeasurement; // inherited from NSObject

	constructor(o: { device: MTRDevice; endpointID: number; queue: interop.Pointer | interop.Reference<any>; });

	constructor(o: { device: MTRDevice; endpoint: number; queue: interop.Pointer | interop.Reference<any>; });

	initWithDeviceEndpointIDQueue(device: MTRDevice, endpointID: number, queue: interop.Pointer | interop.Reference<any>): this;

	initWithDeviceEndpointQueue(device: MTRDevice, endpoint: number, queue: interop.Pointer | interop.Reference<any>): this;

	readAttributeAcceptedCommandListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeAttributeListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeClusterRevisionWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeFeatureMapWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeGeneratedCommandListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeMaxMeasuredValueWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeMaxScaledValueWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeMeasuredValueWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeMinMeasuredValueWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeMinScaledValueWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeScaleWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeScaledToleranceWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeScaledValueWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeToleranceWithParams(params: MTRReadParams): NSDictionary<string, any>;
}

declare class MTRClusterPumpConfigurationAndControl extends MTRGenericCluster {

	static alloc(): MTRClusterPumpConfigurationAndControl; // inherited from NSObject

	static new(): MTRClusterPumpConfigurationAndControl; // inherited from NSObject

	constructor(o: { device: MTRDevice; endpointID: number; queue: interop.Pointer | interop.Reference<any>; });

	constructor(o: { device: MTRDevice; endpoint: number; queue: interop.Pointer | interop.Reference<any>; });

	initWithDeviceEndpointIDQueue(device: MTRDevice, endpointID: number, queue: interop.Pointer | interop.Reference<any>): this;

	initWithDeviceEndpointQueue(device: MTRDevice, endpoint: number, queue: interop.Pointer | interop.Reference<any>): this;

	readAttributeAcceptedCommandListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeAttributeListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeCapacityWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeClusterRevisionWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeControlModeWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeEffectiveControlModeWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeEffectiveOperationModeWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeFeatureMapWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeGeneratedCommandListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeLifetimeEnergyConsumedWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeLifetimeRunningHoursWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeMaxCompPressureWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeMaxConstFlowWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeMaxConstPressureWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeMaxConstSpeedWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeMaxConstTempWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeMaxFlowWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeMaxPressureWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeMaxSpeedWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeMinCompPressureWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeMinConstFlowWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeMinConstPressureWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeMinConstSpeedWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeMinConstTempWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeOperationModeWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributePowerWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributePumpStatusWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeSpeedWithParams(params: MTRReadParams): NSDictionary<string, any>;

	writeAttributeControlModeWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeControlModeWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeLifetimeEnergyConsumedWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeLifetimeEnergyConsumedWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeLifetimeRunningHoursWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeLifetimeRunningHoursWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeOperationModeWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeOperationModeWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;
}

declare class MTRClusterRVCCleanMode extends MTRGenericCluster {

	static alloc(): MTRClusterRVCCleanMode; // inherited from NSObject

	static new(): MTRClusterRVCCleanMode; // inherited from NSObject

	constructor(o: { device: MTRDevice; endpointID: number; queue: interop.Pointer | interop.Reference<any>; });

	changeToModeWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRRVCCleanModeClusterChangeToModeParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: MTRRVCCleanModeClusterChangeToModeResponseParams, p2: NSError) => void): void;

	initWithDeviceEndpointIDQueue(device: MTRDevice, endpointID: number, queue: interop.Pointer | interop.Reference<any>): this;

	readAttributeAcceptedCommandListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeAttributeListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeClusterRevisionWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeCurrentModeWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeFeatureMapWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeGeneratedCommandListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeSupportedModesWithParams(params: MTRReadParams): NSDictionary<string, any>;
}

declare class MTRClusterRVCOperationalState extends MTRGenericCluster {

	static alloc(): MTRClusterRVCOperationalState; // inherited from NSObject

	static new(): MTRClusterRVCOperationalState; // inherited from NSObject

	constructor(o: { device: MTRDevice; endpointID: number; queue: interop.Pointer | interop.Reference<any>; });

	initWithDeviceEndpointIDQueue(device: MTRDevice, endpointID: number, queue: interop.Pointer | interop.Reference<any>): this;

	pauseWithExpectedValuesExpectedValueIntervalCompletion(expectedValues: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: MTRRVCOperationalStateClusterOperationalCommandResponseParams, p2: NSError) => void): void;

	pauseWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRRVCOperationalStateClusterPauseParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: MTRRVCOperationalStateClusterOperationalCommandResponseParams, p2: NSError) => void): void;

	readAttributeAcceptedCommandListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeAttributeListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeClusterRevisionWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeCountdownTimeWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeCurrentPhaseWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeFeatureMapWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeGeneratedCommandListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeOperationalErrorWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeOperationalStateListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeOperationalStateWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributePhaseListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	resumeWithExpectedValuesExpectedValueIntervalCompletion(expectedValues: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: MTRRVCOperationalStateClusterOperationalCommandResponseParams, p2: NSError) => void): void;

	resumeWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRRVCOperationalStateClusterResumeParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: MTRRVCOperationalStateClusterOperationalCommandResponseParams, p2: NSError) => void): void;
}

declare class MTRClusterRVCRunMode extends MTRGenericCluster {

	static alloc(): MTRClusterRVCRunMode; // inherited from NSObject

	static new(): MTRClusterRVCRunMode; // inherited from NSObject

	constructor(o: { device: MTRDevice; endpointID: number; queue: interop.Pointer | interop.Reference<any>; });

	changeToModeWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRRVCRunModeClusterChangeToModeParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: MTRRVCRunModeClusterChangeToModeResponseParams, p2: NSError) => void): void;

	initWithDeviceEndpointIDQueue(device: MTRDevice, endpointID: number, queue: interop.Pointer | interop.Reference<any>): this;

	readAttributeAcceptedCommandListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeAttributeListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeClusterRevisionWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeCurrentModeWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeFeatureMapWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeGeneratedCommandListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeSupportedModesWithParams(params: MTRReadParams): NSDictionary<string, any>;
}

declare class MTRClusterRelativeHumidityMeasurement extends MTRGenericCluster {

	static alloc(): MTRClusterRelativeHumidityMeasurement; // inherited from NSObject

	static new(): MTRClusterRelativeHumidityMeasurement; // inherited from NSObject

	constructor(o: { device: MTRDevice; endpointID: number; queue: interop.Pointer | interop.Reference<any>; });

	constructor(o: { device: MTRDevice; endpoint: number; queue: interop.Pointer | interop.Reference<any>; });

	initWithDeviceEndpointIDQueue(device: MTRDevice, endpointID: number, queue: interop.Pointer | interop.Reference<any>): this;

	initWithDeviceEndpointQueue(device: MTRDevice, endpoint: number, queue: interop.Pointer | interop.Reference<any>): this;

	readAttributeAcceptedCommandListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeAttributeListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeClusterRevisionWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeFeatureMapWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeGeneratedCommandListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeMaxMeasuredValueWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeMeasuredValueWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeMinMeasuredValueWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeToleranceWithParams(params: MTRReadParams): NSDictionary<string, any>;
}

declare class MTRClusterScenes extends MTRGenericCluster {

	static alloc(): MTRClusterScenes; // inherited from NSObject

	static new(): MTRClusterScenes; // inherited from NSObject

	constructor(o: { device: MTRDevice; endpointID: number; queue: interop.Pointer | interop.Reference<any>; });

	constructor(o: { device: MTRDevice; endpoint: number; queue: interop.Pointer | interop.Reference<any>; });

	addSceneWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRScenesClusterAddSceneParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: MTRScenesClusterAddSceneResponseParams, p2: NSError) => void): void;

	addSceneWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRScenesClusterAddSceneParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: MTRScenesClusterAddSceneResponseParams, p2: NSError) => void): void;

	copySceneWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRScenesClusterCopySceneParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: MTRScenesClusterCopySceneResponseParams, p2: NSError) => void): void;

	copySceneWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRScenesClusterCopySceneParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: MTRScenesClusterCopySceneResponseParams, p2: NSError) => void): void;

	enhancedAddSceneWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRScenesClusterEnhancedAddSceneParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: MTRScenesClusterEnhancedAddSceneResponseParams, p2: NSError) => void): void;

	enhancedAddSceneWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRScenesClusterEnhancedAddSceneParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: MTRScenesClusterEnhancedAddSceneResponseParams, p2: NSError) => void): void;

	enhancedViewSceneWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRScenesClusterEnhancedViewSceneParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: MTRScenesClusterEnhancedViewSceneResponseParams, p2: NSError) => void): void;

	enhancedViewSceneWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRScenesClusterEnhancedViewSceneParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: MTRScenesClusterEnhancedViewSceneResponseParams, p2: NSError) => void): void;

	getSceneMembershipWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRScenesClusterGetSceneMembershipParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: MTRScenesClusterGetSceneMembershipResponseParams, p2: NSError) => void): void;

	getSceneMembershipWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRScenesClusterGetSceneMembershipParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: MTRScenesClusterGetSceneMembershipResponseParams, p2: NSError) => void): void;

	initWithDeviceEndpointIDQueue(device: MTRDevice, endpointID: number, queue: interop.Pointer | interop.Reference<any>): this;

	initWithDeviceEndpointQueue(device: MTRDevice, endpoint: number, queue: interop.Pointer | interop.Reference<any>): this;

	readAttributeAcceptedCommandListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeAttributeListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeClusterRevisionWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeCurrentGroupWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeCurrentSceneWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeFeatureMapWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeGeneratedCommandListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeLastConfiguredByWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeNameSupportWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeSceneCountWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeSceneValidWithParams(params: MTRReadParams): NSDictionary<string, any>;

	recallSceneWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRScenesClusterRecallSceneParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: NSError) => void): void;

	recallSceneWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRScenesClusterRecallSceneParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: NSError) => void): void;

	removeAllScenesWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRScenesClusterRemoveAllScenesParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: MTRScenesClusterRemoveAllScenesResponseParams, p2: NSError) => void): void;

	removeAllScenesWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRScenesClusterRemoveAllScenesParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: MTRScenesClusterRemoveAllScenesResponseParams, p2: NSError) => void): void;

	removeSceneWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRScenesClusterRemoveSceneParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: MTRScenesClusterRemoveSceneResponseParams, p2: NSError) => void): void;

	removeSceneWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRScenesClusterRemoveSceneParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: MTRScenesClusterRemoveSceneResponseParams, p2: NSError) => void): void;

	storeSceneWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRScenesClusterStoreSceneParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: MTRScenesClusterStoreSceneResponseParams, p2: NSError) => void): void;

	storeSceneWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRScenesClusterStoreSceneParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: MTRScenesClusterStoreSceneResponseParams, p2: NSError) => void): void;

	viewSceneWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRScenesClusterViewSceneParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: MTRScenesClusterViewSceneResponseParams, p2: NSError) => void): void;

	viewSceneWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRScenesClusterViewSceneParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: MTRScenesClusterViewSceneResponseParams, p2: NSError) => void): void;
}

declare class MTRClusterSoftwareDiagnostics extends MTRGenericCluster {

	static alloc(): MTRClusterSoftwareDiagnostics; // inherited from NSObject

	static new(): MTRClusterSoftwareDiagnostics; // inherited from NSObject

	constructor(o: { device: MTRDevice; endpointID: number; queue: interop.Pointer | interop.Reference<any>; });

	constructor(o: { device: MTRDevice; endpoint: number; queue: interop.Pointer | interop.Reference<any>; });

	initWithDeviceEndpointIDQueue(device: MTRDevice, endpointID: number, queue: interop.Pointer | interop.Reference<any>): this;

	initWithDeviceEndpointQueue(device: MTRDevice, endpoint: number, queue: interop.Pointer | interop.Reference<any>): this;

	readAttributeAcceptedCommandListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeAttributeListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeClusterRevisionWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeCurrentHeapFreeWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeCurrentHeapHighWatermarkWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeCurrentHeapUsedWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeFeatureMapWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeGeneratedCommandListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeThreadMetricsWithParams(params: MTRReadParams): NSDictionary<string, any>;

	resetWatermarksWithExpectedValuesExpectedValueIntervalCompletion(expectedValues: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: NSError) => void): void;

	resetWatermarksWithExpectedValuesExpectedValueIntervalCompletionHandler(expectedValues: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: NSError) => void): void;

	resetWatermarksWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRSoftwareDiagnosticsClusterResetWatermarksParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: NSError) => void): void;

	resetWatermarksWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRSoftwareDiagnosticsClusterResetWatermarksParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: NSError) => void): void;
}

declare class MTRClusterStateCacheContainer extends NSObject {

	static alloc(): MTRClusterStateCacheContainer; // inherited from NSObject

	static new(): MTRClusterStateCacheContainer; // inherited from NSObject

	readAttributesWithEndpointIDClusterIDAttributeIDQueueCompletion(endpointID: number, clusterID: number, attributeID: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<NSDictionary<string, any>>, p2: NSError) => void): void;
}

declare class MTRClusterSwitch extends MTRGenericCluster {

	static alloc(): MTRClusterSwitch; // inherited from NSObject

	static new(): MTRClusterSwitch; // inherited from NSObject

	constructor(o: { device: MTRDevice; endpointID: number; queue: interop.Pointer | interop.Reference<any>; });

	constructor(o: { device: MTRDevice; endpoint: number; queue: interop.Pointer | interop.Reference<any>; });

	initWithDeviceEndpointIDQueue(device: MTRDevice, endpointID: number, queue: interop.Pointer | interop.Reference<any>): this;

	initWithDeviceEndpointQueue(device: MTRDevice, endpoint: number, queue: interop.Pointer | interop.Reference<any>): this;

	readAttributeAcceptedCommandListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeAttributeListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeClusterRevisionWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeCurrentPositionWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeFeatureMapWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeGeneratedCommandListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeMultiPressMaxWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeNumberOfPositionsWithParams(params: MTRReadParams): NSDictionary<string, any>;
}

declare class MTRClusterTargetNavigator extends MTRGenericCluster {

	static alloc(): MTRClusterTargetNavigator; // inherited from NSObject

	static new(): MTRClusterTargetNavigator; // inherited from NSObject

	constructor(o: { device: MTRDevice; endpointID: number; queue: interop.Pointer | interop.Reference<any>; });

	constructor(o: { device: MTRDevice; endpoint: number; queue: interop.Pointer | interop.Reference<any>; });

	initWithDeviceEndpointIDQueue(device: MTRDevice, endpointID: number, queue: interop.Pointer | interop.Reference<any>): this;

	initWithDeviceEndpointQueue(device: MTRDevice, endpoint: number, queue: interop.Pointer | interop.Reference<any>): this;

	navigateTargetWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRTargetNavigatorClusterNavigateTargetParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: MTRTargetNavigatorClusterNavigateTargetResponseParams, p2: NSError) => void): void;

	navigateTargetWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRTargetNavigatorClusterNavigateTargetParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: MTRTargetNavigatorClusterNavigateTargetResponseParams, p2: NSError) => void): void;

	readAttributeAcceptedCommandListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeAttributeListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeClusterRevisionWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeCurrentTargetWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeFeatureMapWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeGeneratedCommandListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeTargetListWithParams(params: MTRReadParams): NSDictionary<string, any>;
}

declare class MTRClusterTemperatureMeasurement extends MTRGenericCluster {

	static alloc(): MTRClusterTemperatureMeasurement; // inherited from NSObject

	static new(): MTRClusterTemperatureMeasurement; // inherited from NSObject

	constructor(o: { device: MTRDevice; endpointID: number; queue: interop.Pointer | interop.Reference<any>; });

	constructor(o: { device: MTRDevice; endpoint: number; queue: interop.Pointer | interop.Reference<any>; });

	initWithDeviceEndpointIDQueue(device: MTRDevice, endpointID: number, queue: interop.Pointer | interop.Reference<any>): this;

	initWithDeviceEndpointQueue(device: MTRDevice, endpoint: number, queue: interop.Pointer | interop.Reference<any>): this;

	readAttributeAcceptedCommandListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeAttributeListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeClusterRevisionWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeFeatureMapWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeGeneratedCommandListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeMaxMeasuredValueWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeMeasuredValueWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeMinMeasuredValueWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeToleranceWithParams(params: MTRReadParams): NSDictionary<string, any>;
}

declare class MTRClusterTestCluster extends MTRClusterUnitTesting {

	static alloc(): MTRClusterTestCluster; // inherited from NSObject

	static new(): MTRClusterTestCluster; // inherited from NSObject

	constructor(o: { device: MTRDevice; endpoint: number; queue: interop.Pointer | interop.Reference<any>; });

	initWithDeviceEndpointQueue(device: MTRDevice, endpoint: number, queue: interop.Pointer | interop.Reference<any>): this;

	simpleStructEchoRequestWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRTestClusterClusterSimpleStructEchoRequestParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: MTRTestClusterClusterSimpleStructResponseParams, p2: NSError) => void): void;

	testAddArgumentsWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRTestClusterClusterTestAddArgumentsParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: MTRTestClusterClusterTestAddArgumentsResponseParams, p2: NSError) => void): void;

	testComplexNullableOptionalRequestWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRTestClusterClusterTestComplexNullableOptionalRequestParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: MTRTestClusterClusterTestComplexNullableOptionalResponseParams, p2: NSError) => void): void;

	testEmitTestEventRequestWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRTestClusterClusterTestEmitTestEventRequestParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: MTRTestClusterClusterTestEmitTestEventResponseParams, p2: NSError) => void): void;

	testEmitTestFabricScopedEventRequestWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRTestClusterClusterTestEmitTestFabricScopedEventRequestParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: MTRTestClusterClusterTestEmitTestFabricScopedEventResponseParams, p2: NSError) => void): void;

	testEnumsRequestWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRTestClusterClusterTestEnumsRequestParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: MTRTestClusterClusterTestEnumsResponseParams, p2: NSError) => void): void;

	testListInt8UArgumentRequestWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRTestClusterClusterTestListInt8UArgumentRequestParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: MTRTestClusterClusterBooleanResponseParams, p2: NSError) => void): void;

	testListInt8UReverseRequestWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRTestClusterClusterTestListInt8UReverseRequestParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: MTRTestClusterClusterTestListInt8UReverseResponseParams, p2: NSError) => void): void;

	testListNestedStructListArgumentRequestWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRTestClusterClusterTestListNestedStructListArgumentRequestParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: MTRTestClusterClusterBooleanResponseParams, p2: NSError) => void): void;

	testListStructArgumentRequestWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRTestClusterClusterTestListStructArgumentRequestParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: MTRTestClusterClusterBooleanResponseParams, p2: NSError) => void): void;

	testNestedStructArgumentRequestWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRTestClusterClusterTestNestedStructArgumentRequestParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: MTRTestClusterClusterBooleanResponseParams, p2: NSError) => void): void;

	testNestedStructListArgumentRequestWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRTestClusterClusterTestNestedStructListArgumentRequestParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: MTRTestClusterClusterBooleanResponseParams, p2: NSError) => void): void;

	testNotHandledWithExpectedValuesExpectedValueIntervalCompletionHandler(expectedValues: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: NSError) => void): void;

	testNotHandledWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRTestClusterClusterTestNotHandledParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: NSError) => void): void;

	testNullableOptionalRequestWithExpectedValuesExpectedValueIntervalCompletionHandler(expectedValues: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: MTRTestClusterClusterTestNullableOptionalResponseParams, p2: NSError) => void): void;

	testNullableOptionalRequestWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRTestClusterClusterTestNullableOptionalRequestParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: MTRTestClusterClusterTestNullableOptionalResponseParams, p2: NSError) => void): void;

	testSimpleArgumentRequestWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRTestClusterClusterTestSimpleArgumentRequestParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: MTRTestClusterClusterTestSimpleArgumentResponseParams, p2: NSError) => void): void;

	testSimpleOptionalArgumentRequestWithExpectedValuesExpectedValueIntervalCompletionHandler(expectedValues: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: NSError) => void): void;

	testSimpleOptionalArgumentRequestWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRTestClusterClusterTestSimpleOptionalArgumentRequestParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: NSError) => void): void;

	testSpecificWithExpectedValuesExpectedValueIntervalCompletionHandler(expectedValues: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: MTRTestClusterClusterTestSpecificResponseParams, p2: NSError) => void): void;

	testSpecificWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRTestClusterClusterTestSpecificParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: MTRTestClusterClusterTestSpecificResponseParams, p2: NSError) => void): void;

	testStructArgumentRequestWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRTestClusterClusterTestStructArgumentRequestParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: MTRTestClusterClusterBooleanResponseParams, p2: NSError) => void): void;

	testStructArrayArgumentRequestWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRTestClusterClusterTestStructArrayArgumentRequestParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: MTRTestClusterClusterTestStructArrayArgumentResponseParams, p2: NSError) => void): void;

	testUnknownCommandWithExpectedValuesExpectedValueIntervalCompletionHandler(expectedValues: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: NSError) => void): void;

	testUnknownCommandWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRTestClusterClusterTestUnknownCommandParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: NSError) => void): void;

	testWithExpectedValuesExpectedValueIntervalCompletionHandler(expectedValues: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: NSError) => void): void;

	testWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRTestClusterClusterTestParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: NSError) => void): void;

	timedInvokeRequestWithExpectedValuesExpectedValueIntervalCompletionHandler(expectedValues: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: NSError) => void): void;

	timedInvokeRequestWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRTestClusterClusterTimedInvokeRequestParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: NSError) => void): void;
}

declare class MTRClusterThermostat extends MTRGenericCluster {

	static alloc(): MTRClusterThermostat; // inherited from NSObject

	static new(): MTRClusterThermostat; // inherited from NSObject

	constructor(o: { device: MTRDevice; endpointID: number; queue: interop.Pointer | interop.Reference<any>; });

	constructor(o: { device: MTRDevice; endpoint: number; queue: interop.Pointer | interop.Reference<any>; });

	clearWeeklyScheduleWithExpectedValuesExpectedValueIntervalCompletion(expectedValues: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: NSError) => void): void;

	clearWeeklyScheduleWithExpectedValuesExpectedValueIntervalCompletionHandler(expectedValues: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: NSError) => void): void;

	clearWeeklyScheduleWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRThermostatClusterClearWeeklyScheduleParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: NSError) => void): void;

	clearWeeklyScheduleWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRThermostatClusterClearWeeklyScheduleParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: NSError) => void): void;

	getWeeklyScheduleWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRThermostatClusterGetWeeklyScheduleParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: MTRThermostatClusterGetWeeklyScheduleResponseParams, p2: NSError) => void): void;

	getWeeklyScheduleWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRThermostatClusterGetWeeklyScheduleParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: MTRThermostatClusterGetWeeklyScheduleResponseParams, p2: NSError) => void): void;

	initWithDeviceEndpointIDQueue(device: MTRDevice, endpointID: number, queue: interop.Pointer | interop.Reference<any>): this;

	initWithDeviceEndpointQueue(device: MTRDevice, endpoint: number, queue: interop.Pointer | interop.Reference<any>): this;

	readAttributeACCapacityWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeACCapacityformatWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeACCoilTemperatureWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeACCompressorTypeWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeACErrorCodeWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeACLouverPositionWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeACRefrigerantTypeWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeACTypeWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeAbsMaxCoolSetpointLimitWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeAbsMaxHeatSetpointLimitWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeAbsMinCoolSetpointLimitWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeAbsMinHeatSetpointLimitWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeAcceptedCommandListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeAttributeListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeClusterRevisionWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeControlSequenceOfOperationWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeEmergencyHeatDeltaWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeFeatureMapWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeGeneratedCommandListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeHVACSystemTypeConfigurationWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeLocalTemperatureCalibrationWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeLocalTemperatureWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeMaxCoolSetpointLimitWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeMaxHeatSetpointLimitWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeMinCoolSetpointLimitWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeMinHeatSetpointLimitWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeMinSetpointDeadBandWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeNumberOfDailyTransitionsWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeNumberOfWeeklyTransitionsWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeOccupancyWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeOccupiedCoolingSetpointWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeOccupiedHeatingSetpointWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeOccupiedSetbackMaxWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeOccupiedSetbackMinWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeOccupiedSetbackWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeOutdoorTemperatureWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributePICoolingDemandWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributePIHeatingDemandWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeRemoteSensingWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeSetpointChangeAmountWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeSetpointChangeSourceTimestampWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeSetpointChangeSourceWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeStartOfWeekWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeSystemModeWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeTemperatureSetpointHoldDurationWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeTemperatureSetpointHoldWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeThermostatProgrammingOperationModeWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeThermostatRunningModeWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeThermostatRunningStateWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeUnoccupiedCoolingSetpointWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeUnoccupiedHeatingSetpointWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeUnoccupiedSetbackMaxWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeUnoccupiedSetbackMinWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeUnoccupiedSetbackWithParams(params: MTRReadParams): NSDictionary<string, any>;

	setWeeklyScheduleWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRThermostatClusterSetWeeklyScheduleParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: NSError) => void): void;

	setWeeklyScheduleWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRThermostatClusterSetWeeklyScheduleParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: NSError) => void): void;

	setpointRaiseLowerWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRThermostatClusterSetpointRaiseLowerParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: NSError) => void): void;

	setpointRaiseLowerWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRThermostatClusterSetpointRaiseLowerParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeACCapacityWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeACCapacityWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeACCapacityformatWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeACCapacityformatWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeACCompressorTypeWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeACCompressorTypeWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeACErrorCodeWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeACErrorCodeWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeACLouverPositionWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeACLouverPositionWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeACRefrigerantTypeWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeACRefrigerantTypeWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeACTypeWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeACTypeWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeControlSequenceOfOperationWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeControlSequenceOfOperationWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeEmergencyHeatDeltaWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeEmergencyHeatDeltaWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeHVACSystemTypeConfigurationWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeHVACSystemTypeConfigurationWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeLocalTemperatureCalibrationWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeLocalTemperatureCalibrationWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeMaxCoolSetpointLimitWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeMaxCoolSetpointLimitWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeMaxHeatSetpointLimitWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeMaxHeatSetpointLimitWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeMinCoolSetpointLimitWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeMinCoolSetpointLimitWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeMinHeatSetpointLimitWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeMinHeatSetpointLimitWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeMinSetpointDeadBandWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeMinSetpointDeadBandWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeOccupiedCoolingSetpointWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeOccupiedCoolingSetpointWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeOccupiedHeatingSetpointWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeOccupiedHeatingSetpointWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeOccupiedSetbackWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeOccupiedSetbackWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeRemoteSensingWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeRemoteSensingWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeSystemModeWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeSystemModeWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeTemperatureSetpointHoldDurationWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeTemperatureSetpointHoldDurationWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeTemperatureSetpointHoldWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeTemperatureSetpointHoldWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeThermostatProgrammingOperationModeWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeThermostatProgrammingOperationModeWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeUnoccupiedCoolingSetpointWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeUnoccupiedCoolingSetpointWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeUnoccupiedHeatingSetpointWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeUnoccupiedHeatingSetpointWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeUnoccupiedSetbackWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeUnoccupiedSetbackWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;
}

declare class MTRClusterThermostatUserInterfaceConfiguration extends MTRGenericCluster {

	static alloc(): MTRClusterThermostatUserInterfaceConfiguration; // inherited from NSObject

	static new(): MTRClusterThermostatUserInterfaceConfiguration; // inherited from NSObject

	constructor(o: { device: MTRDevice; endpointID: number; queue: interop.Pointer | interop.Reference<any>; });

	constructor(o: { device: MTRDevice; endpoint: number; queue: interop.Pointer | interop.Reference<any>; });

	initWithDeviceEndpointIDQueue(device: MTRDevice, endpointID: number, queue: interop.Pointer | interop.Reference<any>): this;

	initWithDeviceEndpointQueue(device: MTRDevice, endpoint: number, queue: interop.Pointer | interop.Reference<any>): this;

	readAttributeAcceptedCommandListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeAttributeListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeClusterRevisionWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeFeatureMapWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeGeneratedCommandListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeKeypadLockoutWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeScheduleProgrammingVisibilityWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeTemperatureDisplayModeWithParams(params: MTRReadParams): NSDictionary<string, any>;

	writeAttributeKeypadLockoutWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeKeypadLockoutWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeScheduleProgrammingVisibilityWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeScheduleProgrammingVisibilityWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeTemperatureDisplayModeWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeTemperatureDisplayModeWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;
}

declare class MTRClusterThreadNetworkDiagnostics extends MTRGenericCluster {

	static alloc(): MTRClusterThreadNetworkDiagnostics; // inherited from NSObject

	static new(): MTRClusterThreadNetworkDiagnostics; // inherited from NSObject

	constructor(o: { device: MTRDevice; endpointID: number; queue: interop.Pointer | interop.Reference<any>; });

	constructor(o: { device: MTRDevice; endpoint: number; queue: interop.Pointer | interop.Reference<any>; });

	initWithDeviceEndpointIDQueue(device: MTRDevice, endpointID: number, queue: interop.Pointer | interop.Reference<any>): this;

	initWithDeviceEndpointQueue(device: MTRDevice, endpoint: number, queue: interop.Pointer | interop.Reference<any>): this;

	readAttributeAcceptedCommandListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeActiveNetworkFaultsListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeActiveTimestampWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeAttachAttemptCountWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeAttributeListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeBetterPartitionAttachAttemptCountWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeChannelPage0MaskWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeChannelWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeChildRoleCountWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeClusterRevisionWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeDataVersionWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeDelayWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeDetachedRoleCountWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeExtendedPanIdWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeFeatureMapWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeGeneratedCommandListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeLeaderRoleCountWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeLeaderRouterIdWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeMeshLocalPrefixWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeNeighborTableListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeNeighborTableWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeNetworkNameWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeOperationalDatasetComponentsWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeOverrunCountWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributePanIdWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeParentChangeCountWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributePartitionIdChangeCountWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributePartitionIdWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributePendingTimestampWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeRouteTableListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeRouteTableWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeRouterRoleCountWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeRoutingRoleWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeRxAddressFilteredCountWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeRxBeaconCountWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeRxBeaconRequestCountWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeRxBroadcastCountWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeRxDataCountWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeRxDataPollCountWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeRxDestAddrFilteredCountWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeRxDuplicatedCountWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeRxErrFcsCountWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeRxErrInvalidSrcAddrCountWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeRxErrNoFrameCountWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeRxErrOtherCountWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeRxErrSecCountWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeRxErrUnknownNeighborCountWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeRxOtherCountWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeRxTotalCountWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeRxUnicastCountWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeSecurityPolicyWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeStableDataVersionWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeTxAckRequestedCountWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeTxAckedCountWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeTxBeaconCountWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeTxBeaconRequestCountWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeTxBroadcastCountWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeTxDataCountWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeTxDataPollCountWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeTxDirectMaxRetryExpiryCountWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeTxErrAbortCountWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeTxErrBusyChannelCountWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeTxErrCcaCountWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeTxIndirectMaxRetryExpiryCountWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeTxNoAckRequestedCountWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeTxOtherCountWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeTxRetryCountWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeTxTotalCountWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeTxUnicastCountWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeWeightingWithParams(params: MTRReadParams): NSDictionary<string, any>;

	resetCountsWithExpectedValuesExpectedValueIntervalCompletion(expectedValues: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: NSError) => void): void;

	resetCountsWithExpectedValuesExpectedValueIntervalCompletionHandler(expectedValues: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: NSError) => void): void;

	resetCountsWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRThreadNetworkDiagnosticsClusterResetCountsParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: NSError) => void): void;

	resetCountsWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRThreadNetworkDiagnosticsClusterResetCountsParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: NSError) => void): void;
}

declare class MTRClusterTimeFormatLocalization extends MTRGenericCluster {

	static alloc(): MTRClusterTimeFormatLocalization; // inherited from NSObject

	static new(): MTRClusterTimeFormatLocalization; // inherited from NSObject

	constructor(o: { device: MTRDevice; endpointID: number; queue: interop.Pointer | interop.Reference<any>; });

	constructor(o: { device: MTRDevice; endpoint: number; queue: interop.Pointer | interop.Reference<any>; });

	initWithDeviceEndpointIDQueue(device: MTRDevice, endpointID: number, queue: interop.Pointer | interop.Reference<any>): this;

	initWithDeviceEndpointQueue(device: MTRDevice, endpoint: number, queue: interop.Pointer | interop.Reference<any>): this;

	readAttributeAcceptedCommandListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeActiveCalendarTypeWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeAttributeListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeClusterRevisionWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeFeatureMapWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeGeneratedCommandListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeHourFormatWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeSupportedCalendarTypesWithParams(params: MTRReadParams): NSDictionary<string, any>;

	writeAttributeActiveCalendarTypeWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeActiveCalendarTypeWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeHourFormatWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeHourFormatWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;
}

declare class MTRClusterUnitLocalization extends MTRGenericCluster {

	static alloc(): MTRClusterUnitLocalization; // inherited from NSObject

	static new(): MTRClusterUnitLocalization; // inherited from NSObject

	constructor(o: { device: MTRDevice; endpointID: number; queue: interop.Pointer | interop.Reference<any>; });

	constructor(o: { device: MTRDevice; endpoint: number; queue: interop.Pointer | interop.Reference<any>; });

	initWithDeviceEndpointIDQueue(device: MTRDevice, endpointID: number, queue: interop.Pointer | interop.Reference<any>): this;

	initWithDeviceEndpointQueue(device: MTRDevice, endpoint: number, queue: interop.Pointer | interop.Reference<any>): this;

	readAttributeAcceptedCommandListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeAttributeListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeClusterRevisionWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeFeatureMapWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeGeneratedCommandListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeTemperatureUnitWithParams(params: MTRReadParams): NSDictionary<string, any>;

	writeAttributeTemperatureUnitWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeTemperatureUnitWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;
}

declare class MTRClusterUnitTesting extends MTRGenericCluster {

	static alloc(): MTRClusterUnitTesting; // inherited from NSObject

	static new(): MTRClusterUnitTesting; // inherited from NSObject

	constructor(o: { device: MTRDevice; endpointID: number; queue: interop.Pointer | interop.Reference<any>; });

	initWithDeviceEndpointIDQueue(device: MTRDevice, endpointID: number, queue: interop.Pointer | interop.Reference<any>): this;

	readAttributeAcceptedCommandListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeAttributeListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeBitmap16WithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeBitmap32WithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeBitmap64WithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeBitmap8WithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeBooleanWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeCharStringWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeClusterErrorBooleanWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeClusterRevisionWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeEnum16WithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeEnum8WithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeEnumAttrWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeEpochSWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeEpochUsWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeFeatureMapWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeFloatDoubleWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeFloatSingleWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeGeneralErrorBooleanWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeGeneratedCommandListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeInt16sWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeInt16uWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeInt24sWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeInt24uWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeInt32sWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeInt32uWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeInt40sWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeInt40uWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeInt48sWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeInt48uWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeInt56sWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeInt56uWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeInt64sWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeInt64uWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeInt8sWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeInt8uWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeListFabricScopedWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeListInt8uWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeListLongOctetStringWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeListNullablesAndOptionalsStructWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeListOctetStringWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeListStructOctetStringWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeLongCharStringWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeLongOctetStringWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeNullableBitmap16WithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeNullableBitmap32WithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeNullableBitmap64WithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeNullableBitmap8WithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeNullableBooleanWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeNullableCharStringWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeNullableEnum16WithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeNullableEnum8WithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeNullableEnumAttrWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeNullableFloatDoubleWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeNullableFloatSingleWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeNullableInt16sWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeNullableInt16uWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeNullableInt24sWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeNullableInt24uWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeNullableInt32sWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeNullableInt32uWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeNullableInt40sWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeNullableInt40uWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeNullableInt48sWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeNullableInt48uWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeNullableInt56sWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeNullableInt56uWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeNullableInt64sWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeNullableInt64uWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeNullableInt8sWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeNullableInt8uWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeNullableOctetStringWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeNullableRangeRestrictedInt16sWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeNullableRangeRestrictedInt16uWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeNullableRangeRestrictedInt8sWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeNullableRangeRestrictedInt8uWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeNullableStructWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeOctetStringWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeRangeRestrictedInt16sWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeRangeRestrictedInt16uWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeRangeRestrictedInt8sWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeRangeRestrictedInt8uWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeStructAttrWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeTimedWriteBooleanWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeUnsupportedWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeVendorIdWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeWriteOnlyInt8uWithParams(params: MTRReadParams): NSDictionary<string, any>;

	simpleStructEchoRequestWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRUnitTestingClusterSimpleStructEchoRequestParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: MTRUnitTestingClusterSimpleStructResponseParams, p2: NSError) => void): void;

	testAddArgumentsWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRUnitTestingClusterTestAddArgumentsParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: MTRUnitTestingClusterTestAddArgumentsResponseParams, p2: NSError) => void): void;

	testComplexNullableOptionalRequestWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRUnitTestingClusterTestComplexNullableOptionalRequestParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: MTRUnitTestingClusterTestComplexNullableOptionalResponseParams, p2: NSError) => void): void;

	testEmitTestEventRequestWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRUnitTestingClusterTestEmitTestEventRequestParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: MTRUnitTestingClusterTestEmitTestEventResponseParams, p2: NSError) => void): void;

	testEmitTestFabricScopedEventRequestWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRUnitTestingClusterTestEmitTestFabricScopedEventRequestParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: MTRUnitTestingClusterTestEmitTestFabricScopedEventResponseParams, p2: NSError) => void): void;

	testEnumsRequestWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRUnitTestingClusterTestEnumsRequestParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: MTRUnitTestingClusterTestEnumsResponseParams, p2: NSError) => void): void;

	testListInt8UArgumentRequestWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRUnitTestingClusterTestListInt8UArgumentRequestParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: MTRUnitTestingClusterBooleanResponseParams, p2: NSError) => void): void;

	testListInt8UReverseRequestWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRUnitTestingClusterTestListInt8UReverseRequestParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: MTRUnitTestingClusterTestListInt8UReverseResponseParams, p2: NSError) => void): void;

	testListNestedStructListArgumentRequestWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRUnitTestingClusterTestListNestedStructListArgumentRequestParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: MTRUnitTestingClusterBooleanResponseParams, p2: NSError) => void): void;

	testListStructArgumentRequestWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRUnitTestingClusterTestListStructArgumentRequestParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: MTRUnitTestingClusterBooleanResponseParams, p2: NSError) => void): void;

	testNestedStructArgumentRequestWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRUnitTestingClusterTestNestedStructArgumentRequestParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: MTRUnitTestingClusterBooleanResponseParams, p2: NSError) => void): void;

	testNestedStructListArgumentRequestWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRUnitTestingClusterTestNestedStructListArgumentRequestParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: MTRUnitTestingClusterBooleanResponseParams, p2: NSError) => void): void;

	testNotHandledWithExpectedValuesExpectedValueIntervalCompletion(expectedValues: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: NSError) => void): void;

	testNotHandledWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRUnitTestingClusterTestNotHandledParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: NSError) => void): void;

	testNullableOptionalRequestWithExpectedValuesExpectedValueIntervalCompletion(expectedValues: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: MTRUnitTestingClusterTestNullableOptionalResponseParams, p2: NSError) => void): void;

	testNullableOptionalRequestWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRUnitTestingClusterTestNullableOptionalRequestParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: MTRUnitTestingClusterTestNullableOptionalResponseParams, p2: NSError) => void): void;

	testSimpleArgumentRequestWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRUnitTestingClusterTestSimpleArgumentRequestParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: MTRUnitTestingClusterTestSimpleArgumentResponseParams, p2: NSError) => void): void;

	testSimpleOptionalArgumentRequestWithExpectedValuesExpectedValueIntervalCompletion(expectedValues: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: NSError) => void): void;

	testSimpleOptionalArgumentRequestWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRUnitTestingClusterTestSimpleOptionalArgumentRequestParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: NSError) => void): void;

	testSpecificWithExpectedValuesExpectedValueIntervalCompletion(expectedValues: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: MTRUnitTestingClusterTestSpecificResponseParams, p2: NSError) => void): void;

	testSpecificWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRUnitTestingClusterTestSpecificParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: MTRUnitTestingClusterTestSpecificResponseParams, p2: NSError) => void): void;

	testStructArgumentRequestWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRUnitTestingClusterTestStructArgumentRequestParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: MTRUnitTestingClusterBooleanResponseParams, p2: NSError) => void): void;

	testStructArrayArgumentRequestWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRUnitTestingClusterTestStructArrayArgumentRequestParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: MTRUnitTestingClusterTestStructArrayArgumentResponseParams, p2: NSError) => void): void;

	testUnknownCommandWithExpectedValuesExpectedValueIntervalCompletion(expectedValues: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: NSError) => void): void;

	testUnknownCommandWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRUnitTestingClusterTestUnknownCommandParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: NSError) => void): void;

	testWithExpectedValuesExpectedValueIntervalCompletion(expectedValues: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: NSError) => void): void;

	testWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRUnitTestingClusterTestParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: NSError) => void): void;

	timedInvokeRequestWithExpectedValuesExpectedValueIntervalCompletion(expectedValues: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: NSError) => void): void;

	timedInvokeRequestWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRUnitTestingClusterTimedInvokeRequestParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: NSError) => void): void;

	writeAttributeBitmap16WithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeBitmap16WithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeBitmap32WithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeBitmap32WithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeBitmap64WithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeBitmap64WithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeBitmap8WithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeBitmap8WithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeBooleanWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeBooleanWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeCharStringWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeCharStringWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeClusterErrorBooleanWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeClusterErrorBooleanWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeEnum16WithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeEnum16WithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeEnum8WithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeEnum8WithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeEnumAttrWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeEnumAttrWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeEpochSWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeEpochSWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeEpochUsWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeEpochUsWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeFloatDoubleWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeFloatDoubleWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeFloatSingleWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeFloatSingleWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeGeneralErrorBooleanWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeGeneralErrorBooleanWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeInt16sWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeInt16sWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeInt16uWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeInt16uWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeInt24sWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeInt24sWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeInt24uWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeInt24uWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeInt32sWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeInt32sWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeInt32uWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeInt32uWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeInt40sWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeInt40sWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeInt40uWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeInt40uWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeInt48sWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeInt48sWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeInt48uWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeInt48uWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeInt56sWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeInt56sWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeInt56uWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeInt56uWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeInt64sWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeInt64sWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeInt64uWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeInt64uWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeInt8sWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeInt8sWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeInt8uWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeInt8uWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeListFabricScopedWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeListFabricScopedWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeListInt8uWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeListInt8uWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeListLongOctetStringWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeListLongOctetStringWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeListNullablesAndOptionalsStructWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeListNullablesAndOptionalsStructWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeListOctetStringWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeListOctetStringWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeListStructOctetStringWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeListStructOctetStringWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeLongCharStringWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeLongCharStringWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeLongOctetStringWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeLongOctetStringWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeNullableBitmap16WithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeNullableBitmap16WithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeNullableBitmap32WithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeNullableBitmap32WithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeNullableBitmap64WithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeNullableBitmap64WithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeNullableBitmap8WithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeNullableBitmap8WithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeNullableBooleanWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeNullableBooleanWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeNullableCharStringWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeNullableCharStringWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeNullableEnum16WithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeNullableEnum16WithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeNullableEnum8WithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeNullableEnum8WithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeNullableEnumAttrWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeNullableEnumAttrWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeNullableFloatDoubleWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeNullableFloatDoubleWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeNullableFloatSingleWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeNullableFloatSingleWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeNullableInt16sWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeNullableInt16sWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeNullableInt16uWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeNullableInt16uWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeNullableInt24sWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeNullableInt24sWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeNullableInt24uWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeNullableInt24uWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeNullableInt32sWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeNullableInt32sWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeNullableInt32uWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeNullableInt32uWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeNullableInt40sWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeNullableInt40sWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeNullableInt40uWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeNullableInt40uWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeNullableInt48sWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeNullableInt48sWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeNullableInt48uWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeNullableInt48uWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeNullableInt56sWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeNullableInt56sWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeNullableInt56uWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeNullableInt56uWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeNullableInt64sWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeNullableInt64sWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeNullableInt64uWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeNullableInt64uWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeNullableInt8sWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeNullableInt8sWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeNullableInt8uWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeNullableInt8uWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeNullableOctetStringWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeNullableOctetStringWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeNullableRangeRestrictedInt16sWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeNullableRangeRestrictedInt16sWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeNullableRangeRestrictedInt16uWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeNullableRangeRestrictedInt16uWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeNullableRangeRestrictedInt8sWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeNullableRangeRestrictedInt8sWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeNullableRangeRestrictedInt8uWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeNullableRangeRestrictedInt8uWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeNullableStructWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeNullableStructWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeOctetStringWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeOctetStringWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeRangeRestrictedInt16sWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeRangeRestrictedInt16sWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeRangeRestrictedInt16uWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeRangeRestrictedInt16uWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeRangeRestrictedInt8sWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeRangeRestrictedInt8sWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeRangeRestrictedInt8uWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeRangeRestrictedInt8uWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeStructAttrWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeStructAttrWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeTimedWriteBooleanWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeTimedWriteBooleanWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeUnsupportedWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeUnsupportedWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeVendorIdWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeVendorIdWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;

	writeAttributeWriteOnlyInt8uWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeWriteOnlyInt8uWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;
}

declare class MTRClusterUserLabel extends MTRGenericCluster {

	static alloc(): MTRClusterUserLabel; // inherited from NSObject

	static new(): MTRClusterUserLabel; // inherited from NSObject

	constructor(o: { device: MTRDevice; endpointID: number; queue: interop.Pointer | interop.Reference<any>; });

	constructor(o: { device: MTRDevice; endpoint: number; queue: interop.Pointer | interop.Reference<any>; });

	initWithDeviceEndpointIDQueue(device: MTRDevice, endpointID: number, queue: interop.Pointer | interop.Reference<any>): this;

	initWithDeviceEndpointQueue(device: MTRDevice, endpoint: number, queue: interop.Pointer | interop.Reference<any>): this;

	readAttributeAcceptedCommandListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeAttributeListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeClusterRevisionWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeFeatureMapWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeGeneratedCommandListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeLabelListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	writeAttributeLabelListWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeLabelListWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;
}

declare class MTRClusterWakeOnLAN extends MTRGenericCluster {

	static alloc(): MTRClusterWakeOnLAN; // inherited from NSObject

	static new(): MTRClusterWakeOnLAN; // inherited from NSObject

	constructor(o: { device: MTRDevice; endpointID: number; queue: interop.Pointer | interop.Reference<any>; });

	initWithDeviceEndpointIDQueue(device: MTRDevice, endpointID: number, queue: interop.Pointer | interop.Reference<any>): this;

	readAttributeAcceptedCommandListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeAttributeListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeClusterRevisionWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeFeatureMapWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeGeneratedCommandListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeMACAddressWithParams(params: MTRReadParams): NSDictionary<string, any>;
}

declare class MTRClusterWakeOnLan extends MTRClusterWakeOnLAN {

	static alloc(): MTRClusterWakeOnLan; // inherited from NSObject

	static new(): MTRClusterWakeOnLan; // inherited from NSObject

	constructor(o: { device: MTRDevice; endpoint: number; queue: interop.Pointer | interop.Reference<any>; });

	initWithDeviceEndpointQueue(device: MTRDevice, endpoint: number, queue: interop.Pointer | interop.Reference<any>): this;
}

declare class MTRClusterWiFiNetworkDiagnostics extends MTRGenericCluster {

	static alloc(): MTRClusterWiFiNetworkDiagnostics; // inherited from NSObject

	static new(): MTRClusterWiFiNetworkDiagnostics; // inherited from NSObject

	constructor(o: { device: MTRDevice; endpointID: number; queue: interop.Pointer | interop.Reference<any>; });

	constructor(o: { device: MTRDevice; endpoint: number; queue: interop.Pointer | interop.Reference<any>; });

	initWithDeviceEndpointIDQueue(device: MTRDevice, endpointID: number, queue: interop.Pointer | interop.Reference<any>): this;

	initWithDeviceEndpointQueue(device: MTRDevice, endpoint: number, queue: interop.Pointer | interop.Reference<any>): this;

	readAttributeAcceptedCommandListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeAttributeListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeBSSIDWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeBeaconLostCountWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeBeaconRxCountWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeBssidWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeChannelNumberWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeClusterRevisionWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeCurrentMaxRateWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeFeatureMapWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeGeneratedCommandListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeOverrunCountWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributePacketMulticastRxCountWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributePacketMulticastTxCountWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributePacketUnicastRxCountWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributePacketUnicastTxCountWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeRSSIWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeRssiWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeSecurityTypeWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeWiFiVersionWithParams(params: MTRReadParams): NSDictionary<string, any>;

	resetCountsWithExpectedValuesExpectedValueIntervalCompletion(expectedValues: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: NSError) => void): void;

	resetCountsWithExpectedValuesExpectedValueIntervalCompletionHandler(expectedValues: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: NSError) => void): void;

	resetCountsWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRWiFiNetworkDiagnosticsClusterResetCountsParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: NSError) => void): void;

	resetCountsWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRWiFiNetworkDiagnosticsClusterResetCountsParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: NSError) => void): void;
}

declare class MTRClusterWindowCovering extends MTRGenericCluster {

	static alloc(): MTRClusterWindowCovering; // inherited from NSObject

	static new(): MTRClusterWindowCovering; // inherited from NSObject

	constructor(o: { device: MTRDevice; endpointID: number; queue: interop.Pointer | interop.Reference<any>; });

	constructor(o: { device: MTRDevice; endpoint: number; queue: interop.Pointer | interop.Reference<any>; });

	downOrCloseWithExpectedValuesExpectedValueIntervalCompletion(expectedValues: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: NSError) => void): void;

	downOrCloseWithExpectedValuesExpectedValueIntervalCompletionHandler(expectedValues: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: NSError) => void): void;

	downOrCloseWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRWindowCoveringClusterDownOrCloseParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: NSError) => void): void;

	downOrCloseWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRWindowCoveringClusterDownOrCloseParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: NSError) => void): void;

	goToLiftPercentageWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRWindowCoveringClusterGoToLiftPercentageParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: NSError) => void): void;

	goToLiftPercentageWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRWindowCoveringClusterGoToLiftPercentageParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: NSError) => void): void;

	goToLiftValueWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRWindowCoveringClusterGoToLiftValueParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: NSError) => void): void;

	goToLiftValueWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRWindowCoveringClusterGoToLiftValueParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: NSError) => void): void;

	goToTiltPercentageWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRWindowCoveringClusterGoToTiltPercentageParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: NSError) => void): void;

	goToTiltPercentageWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRWindowCoveringClusterGoToTiltPercentageParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: NSError) => void): void;

	goToTiltValueWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRWindowCoveringClusterGoToTiltValueParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: NSError) => void): void;

	goToTiltValueWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRWindowCoveringClusterGoToTiltValueParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: NSError) => void): void;

	initWithDeviceEndpointIDQueue(device: MTRDevice, endpointID: number, queue: interop.Pointer | interop.Reference<any>): this;

	initWithDeviceEndpointQueue(device: MTRDevice, endpoint: number, queue: interop.Pointer | interop.Reference<any>): this;

	readAttributeAcceptedCommandListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeAttributeListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeClusterRevisionWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeConfigStatusWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeCurrentPositionLiftPercent100thsWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeCurrentPositionLiftPercentageWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeCurrentPositionLiftWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeCurrentPositionTiltPercent100thsWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeCurrentPositionTiltPercentageWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeCurrentPositionTiltWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeEndProductTypeWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeFeatureMapWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeGeneratedCommandListWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeInstalledClosedLimitLiftWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeInstalledClosedLimitTiltWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeInstalledOpenLimitLiftWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeInstalledOpenLimitTiltWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeModeWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeNumberOfActuationsLiftWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeNumberOfActuationsTiltWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeOperationalStatusWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributePhysicalClosedLimitLiftWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributePhysicalClosedLimitTiltWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeSafetyStatusWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeTargetPositionLiftPercent100thsWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeTargetPositionTiltPercent100thsWithParams(params: MTRReadParams): NSDictionary<string, any>;

	readAttributeTypeWithParams(params: MTRReadParams): NSDictionary<string, any>;

	stopMotionWithExpectedValuesExpectedValueIntervalCompletion(expectedValues: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: NSError) => void): void;

	stopMotionWithExpectedValuesExpectedValueIntervalCompletionHandler(expectedValues: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: NSError) => void): void;

	stopMotionWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRWindowCoveringClusterStopMotionParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: NSError) => void): void;

	stopMotionWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRWindowCoveringClusterStopMotionParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: NSError) => void): void;

	upOrOpenWithExpectedValuesExpectedValueIntervalCompletion(expectedValues: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: NSError) => void): void;

	upOrOpenWithExpectedValuesExpectedValueIntervalCompletionHandler(expectedValues: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: NSError) => void): void;

	upOrOpenWithParamsExpectedValuesExpectedValueIntervalCompletion(params: MTRWindowCoveringClusterUpOrOpenParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completion: (p1: NSError) => void): void;

	upOrOpenWithParamsExpectedValuesExpectedValueIntervalCompletionHandler(params: MTRWindowCoveringClusterUpOrOpenParams, expectedDataValueDictionaries: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueIntervalMs: number, completionHandler: (p1: NSError) => void): void;

	writeAttributeModeWithValueExpectedValueInterval(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number): void;

	writeAttributeModeWithValueExpectedValueIntervalParams(dataValueDictionary: NSDictionary<string, any>, expectedValueIntervalMs: number, params: MTRWriteParams): void;
}

declare class MTRColorControlClusterColorLoopSetParams extends NSObject implements NSCopying {

	static alloc(): MTRColorControlClusterColorLoopSetParams; // inherited from NSObject

	static new(): MTRColorControlClusterColorLoopSetParams; // inherited from NSObject

	action: number;

	direction: number;

	optionsMask: number;

	optionsOverride: number;

	serverSideProcessingTimeout: number;

	startHue: number;

	time: number;

	timedInvokeTimeoutMs: number;

	updateFlags: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRColorControlClusterEnhancedMoveHueParams extends NSObject implements NSCopying {

	static alloc(): MTRColorControlClusterEnhancedMoveHueParams; // inherited from NSObject

	static new(): MTRColorControlClusterEnhancedMoveHueParams; // inherited from NSObject

	moveMode: number;

	optionsMask: number;

	optionsOverride: number;

	rate: number;

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRColorControlClusterEnhancedMoveToHueAndSaturationParams extends NSObject implements NSCopying {

	static alloc(): MTRColorControlClusterEnhancedMoveToHueAndSaturationParams; // inherited from NSObject

	static new(): MTRColorControlClusterEnhancedMoveToHueAndSaturationParams; // inherited from NSObject

	enhancedHue: number;

	optionsMask: number;

	optionsOverride: number;

	saturation: number;

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	transitionTime: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRColorControlClusterEnhancedMoveToHueParams extends NSObject implements NSCopying {

	static alloc(): MTRColorControlClusterEnhancedMoveToHueParams; // inherited from NSObject

	static new(): MTRColorControlClusterEnhancedMoveToHueParams; // inherited from NSObject

	direction: number;

	enhancedHue: number;

	optionsMask: number;

	optionsOverride: number;

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	transitionTime: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRColorControlClusterEnhancedStepHueParams extends NSObject implements NSCopying {

	static alloc(): MTRColorControlClusterEnhancedStepHueParams; // inherited from NSObject

	static new(): MTRColorControlClusterEnhancedStepHueParams; // inherited from NSObject

	optionsMask: number;

	optionsOverride: number;

	serverSideProcessingTimeout: number;

	stepMode: number;

	stepSize: number;

	timedInvokeTimeoutMs: number;

	transitionTime: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRColorControlClusterMoveColorParams extends NSObject implements NSCopying {

	static alloc(): MTRColorControlClusterMoveColorParams; // inherited from NSObject

	static new(): MTRColorControlClusterMoveColorParams; // inherited from NSObject

	optionsMask: number;

	optionsOverride: number;

	rateX: number;

	rateY: number;

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRColorControlClusterMoveColorTemperatureParams extends NSObject implements NSCopying {

	static alloc(): MTRColorControlClusterMoveColorTemperatureParams; // inherited from NSObject

	static new(): MTRColorControlClusterMoveColorTemperatureParams; // inherited from NSObject

	colorTemperatureMaximumMireds: number;

	colorTemperatureMinimumMireds: number;

	moveMode: number;

	optionsMask: number;

	optionsOverride: number;

	rate: number;

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRColorControlClusterMoveHueParams extends NSObject implements NSCopying {

	static alloc(): MTRColorControlClusterMoveHueParams; // inherited from NSObject

	static new(): MTRColorControlClusterMoveHueParams; // inherited from NSObject

	moveMode: number;

	optionsMask: number;

	optionsOverride: number;

	rate: number;

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRColorControlClusterMoveSaturationParams extends NSObject implements NSCopying {

	static alloc(): MTRColorControlClusterMoveSaturationParams; // inherited from NSObject

	static new(): MTRColorControlClusterMoveSaturationParams; // inherited from NSObject

	moveMode: number;

	optionsMask: number;

	optionsOverride: number;

	rate: number;

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRColorControlClusterMoveToColorParams extends NSObject implements NSCopying {

	static alloc(): MTRColorControlClusterMoveToColorParams; // inherited from NSObject

	static new(): MTRColorControlClusterMoveToColorParams; // inherited from NSObject

	colorX: number;

	colorY: number;

	optionsMask: number;

	optionsOverride: number;

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	transitionTime: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRColorControlClusterMoveToColorTemperatureParams extends NSObject implements NSCopying {

	static alloc(): MTRColorControlClusterMoveToColorTemperatureParams; // inherited from NSObject

	static new(): MTRColorControlClusterMoveToColorTemperatureParams; // inherited from NSObject

	colorTemperature: number;

	colorTemperatureMireds: number;

	optionsMask: number;

	optionsOverride: number;

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	transitionTime: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRColorControlClusterMoveToHueAndSaturationParams extends NSObject implements NSCopying {

	static alloc(): MTRColorControlClusterMoveToHueAndSaturationParams; // inherited from NSObject

	static new(): MTRColorControlClusterMoveToHueAndSaturationParams; // inherited from NSObject

	hue: number;

	optionsMask: number;

	optionsOverride: number;

	saturation: number;

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	transitionTime: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRColorControlClusterMoveToHueParams extends NSObject implements NSCopying {

	static alloc(): MTRColorControlClusterMoveToHueParams; // inherited from NSObject

	static new(): MTRColorControlClusterMoveToHueParams; // inherited from NSObject

	direction: number;

	hue: number;

	optionsMask: number;

	optionsOverride: number;

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	transitionTime: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRColorControlClusterMoveToSaturationParams extends NSObject implements NSCopying {

	static alloc(): MTRColorControlClusterMoveToSaturationParams; // inherited from NSObject

	static new(): MTRColorControlClusterMoveToSaturationParams; // inherited from NSObject

	optionsMask: number;

	optionsOverride: number;

	saturation: number;

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	transitionTime: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRColorControlClusterStepColorParams extends NSObject implements NSCopying {

	static alloc(): MTRColorControlClusterStepColorParams; // inherited from NSObject

	static new(): MTRColorControlClusterStepColorParams; // inherited from NSObject

	optionsMask: number;

	optionsOverride: number;

	serverSideProcessingTimeout: number;

	stepX: number;

	stepY: number;

	timedInvokeTimeoutMs: number;

	transitionTime: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRColorControlClusterStepColorTemperatureParams extends NSObject implements NSCopying {

	static alloc(): MTRColorControlClusterStepColorTemperatureParams; // inherited from NSObject

	static new(): MTRColorControlClusterStepColorTemperatureParams; // inherited from NSObject

	colorTemperatureMaximumMireds: number;

	colorTemperatureMinimumMireds: number;

	optionsMask: number;

	optionsOverride: number;

	serverSideProcessingTimeout: number;

	stepMode: number;

	stepSize: number;

	timedInvokeTimeoutMs: number;

	transitionTime: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRColorControlClusterStepHueParams extends NSObject implements NSCopying {

	static alloc(): MTRColorControlClusterStepHueParams; // inherited from NSObject

	static new(): MTRColorControlClusterStepHueParams; // inherited from NSObject

	optionsMask: number;

	optionsOverride: number;

	serverSideProcessingTimeout: number;

	stepMode: number;

	stepSize: number;

	timedInvokeTimeoutMs: number;

	transitionTime: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRColorControlClusterStepSaturationParams extends NSObject implements NSCopying {

	static alloc(): MTRColorControlClusterStepSaturationParams; // inherited from NSObject

	static new(): MTRColorControlClusterStepSaturationParams; // inherited from NSObject

	optionsMask: number;

	optionsOverride: number;

	serverSideProcessingTimeout: number;

	stepMode: number;

	stepSize: number;

	timedInvokeTimeoutMs: number;

	transitionTime: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRColorControlClusterStopMoveStepParams extends NSObject implements NSCopying {

	static alloc(): MTRColorControlClusterStopMoveStepParams; // inherited from NSObject

	static new(): MTRColorControlClusterStopMoveStepParams; // inherited from NSObject

	optionsMask: number;

	optionsOverride: number;

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare const enum MTRColorControlColorCapabilities {

	HueSaturationSupported = 1,

	EnhancedHueSupported = 2,

	ColorLoopSupported = 4,

	XYAttributesSupported = 8,

	ColorTemperatureSupported = 16
}

declare const enum MTRColorControlColorLoopAction {

	Deactivate = 0,

	ActivateFromColorLoopStartEnhancedHue = 1,

	ActivateFromEnhancedCurrentHue = 2
}

declare const enum MTRColorControlColorLoopDirection {

	DecrementHue = 0,

	IncrementHue = 1
}

declare const enum MTRColorControlColorLoopUpdateFlags {

	UpdateAction = 1,

	UpdateDirection = 2,

	UpdateTime = 4,

	UpdateStartHue = 8
}

declare const enum MTRColorControlColorMode {

	CurrentHueAndCurrentSaturation = 0,

	CurrentXAndCurrentY = 1,

	ColorTemperature = 2
}

declare const enum MTRColorControlFeature {

	HueAndSaturation = 1,

	EnhancedHue = 2,

	ColorLoop = 4,

	XY = 8,

	ColorTemperature = 16
}

declare const enum MTRColorControlHueDirection {

	ShortestDistance = 0,

	LongestDistance = 1,

	Up = 2,

	Down = 3
}

declare const enum MTRColorControlHueMoveMode {

	Stop = 0,

	Up = 1,

	Down = 3
}

declare const enum MTRColorControlHueStepMode {

	Up = 1,

	Down = 3
}

declare const enum MTRColorControlSaturationMoveMode {

	Stop = 0,

	Up = 1,

	Down = 3
}

declare const enum MTRColorControlSaturationStepMode {

	Up = 1,

	Down = 3
}

declare const enum MTRCommandIDType {

	ClusterIdentifyCommandIdentifyID = 0,

	ClusterIdentifyCommandTriggerEffectID = 64,

	CommandIDTypeClusterIdentifyCommandIdentifyID = 0,

	CommandIDTypeClusterIdentifyCommandTriggerEffectID = 64,

	ClusterGroupsCommandAddGroupID = 0,

	ClusterGroupsCommandAddGroupResponseID = 0,

	ClusterGroupsCommandViewGroupID = 1,

	ClusterGroupsCommandViewGroupResponseID = 1,

	ClusterGroupsCommandGetGroupMembershipID = 2,

	ClusterGroupsCommandGetGroupMembershipResponseID = 2,

	ClusterGroupsCommandRemoveGroupID = 3,

	ClusterGroupsCommandRemoveGroupResponseID = 3,

	ClusterGroupsCommandRemoveAllGroupsID = 4,

	ClusterGroupsCommandAddGroupIfIdentifyingID = 5,

	CommandIDTypeClusterGroupsCommandAddGroupID = 0,

	CommandIDTypeClusterGroupsCommandAddGroupResponseID = 0,

	CommandIDTypeClusterGroupsCommandViewGroupID = 1,

	CommandIDTypeClusterGroupsCommandViewGroupResponseID = 1,

	CommandIDTypeClusterGroupsCommandGetGroupMembershipID = 2,

	CommandIDTypeClusterGroupsCommandGetGroupMembershipResponseID = 2,

	CommandIDTypeClusterGroupsCommandRemoveGroupID = 3,

	CommandIDTypeClusterGroupsCommandRemoveGroupResponseID = 3,

	CommandIDTypeClusterGroupsCommandRemoveAllGroupsID = 4,

	CommandIDTypeClusterGroupsCommandAddGroupIfIdentifyingID = 5,

	ClusterScenesCommandAddSceneID = 0,

	ClusterScenesCommandAddSceneResponseID = 0,

	ClusterScenesCommandViewSceneID = 1,

	ClusterScenesCommandViewSceneResponseID = 1,

	ClusterScenesCommandRemoveSceneID = 2,

	ClusterScenesCommandRemoveSceneResponseID = 2,

	ClusterScenesCommandRemoveAllScenesID = 3,

	ClusterScenesCommandRemoveAllScenesResponseID = 3,

	ClusterScenesCommandStoreSceneID = 4,

	ClusterScenesCommandStoreSceneResponseID = 4,

	ClusterScenesCommandRecallSceneID = 5,

	ClusterScenesCommandGetSceneMembershipID = 6,

	ClusterScenesCommandGetSceneMembershipResponseID = 6,

	ClusterScenesCommandEnhancedAddSceneID = 64,

	ClusterScenesCommandEnhancedAddSceneResponseID = 64,

	ClusterScenesCommandEnhancedViewSceneID = 65,

	ClusterScenesCommandEnhancedViewSceneResponseID = 65,

	ClusterScenesCommandCopySceneID = 66,

	ClusterScenesCommandCopySceneResponseID = 66,

	CommandIDTypeClusterScenesCommandAddSceneID = 0,

	CommandIDTypeClusterScenesCommandAddSceneResponseID = 0,

	CommandIDTypeClusterScenesCommandViewSceneID = 1,

	CommandIDTypeClusterScenesCommandViewSceneResponseID = 1,

	CommandIDTypeClusterScenesCommandRemoveSceneID = 2,

	CommandIDTypeClusterScenesCommandRemoveSceneResponseID = 2,

	CommandIDTypeClusterScenesCommandRemoveAllScenesID = 3,

	CommandIDTypeClusterScenesCommandRemoveAllScenesResponseID = 3,

	CommandIDTypeClusterScenesCommandStoreSceneID = 4,

	CommandIDTypeClusterScenesCommandStoreSceneResponseID = 4,

	CommandIDTypeClusterScenesCommandRecallSceneID = 5,

	CommandIDTypeClusterScenesCommandGetSceneMembershipID = 6,

	CommandIDTypeClusterScenesCommandGetSceneMembershipResponseID = 6,

	CommandIDTypeClusterScenesCommandEnhancedAddSceneID = 64,

	CommandIDTypeClusterScenesCommandEnhancedAddSceneResponseID = 64,

	CommandIDTypeClusterScenesCommandEnhancedViewSceneID = 65,

	CommandIDTypeClusterScenesCommandEnhancedViewSceneResponseID = 65,

	CommandIDTypeClusterScenesCommandCopySceneID = 66,

	CommandIDTypeClusterScenesCommandCopySceneResponseID = 66,

	ClusterOnOffCommandOffID = 0,

	ClusterOnOffCommandOnID = 1,

	ClusterOnOffCommandToggleID = 2,

	ClusterOnOffCommandOffWithEffectID = 64,

	ClusterOnOffCommandOnWithRecallGlobalSceneID = 65,

	ClusterOnOffCommandOnWithTimedOffID = 66,

	CommandIDTypeClusterOnOffCommandOffID = 0,

	CommandIDTypeClusterOnOffCommandOnID = 1,

	CommandIDTypeClusterOnOffCommandToggleID = 2,

	CommandIDTypeClusterOnOffCommandOffWithEffectID = 64,

	CommandIDTypeClusterOnOffCommandOnWithRecallGlobalSceneID = 65,

	CommandIDTypeClusterOnOffCommandOnWithTimedOffID = 66,

	ClusterLevelControlCommandMoveToLevelID = 0,

	ClusterLevelControlCommandMoveID = 1,

	ClusterLevelControlCommandStepID = 2,

	ClusterLevelControlCommandStopID = 3,

	ClusterLevelControlCommandMoveToLevelWithOnOffID = 4,

	ClusterLevelControlCommandMoveWithOnOffID = 5,

	ClusterLevelControlCommandStepWithOnOffID = 6,

	ClusterLevelControlCommandStopWithOnOffID = 7,

	ClusterLevelControlCommandMoveToClosestFrequencyID = 8,

	CommandIDTypeClusterLevelControlCommandMoveToLevelID = 0,

	CommandIDTypeClusterLevelControlCommandMoveID = 1,

	CommandIDTypeClusterLevelControlCommandStepID = 2,

	CommandIDTypeClusterLevelControlCommandStopID = 3,

	CommandIDTypeClusterLevelControlCommandMoveToLevelWithOnOffID = 4,

	CommandIDTypeClusterLevelControlCommandMoveWithOnOffID = 5,

	CommandIDTypeClusterLevelControlCommandStepWithOnOffID = 6,

	CommandIDTypeClusterLevelControlCommandStopWithOnOffID = 7,

	CommandIDTypeClusterLevelControlCommandMoveToClosestFrequencyID = 8,

	ClusterActionsCommandInstantActionID = 0,

	ClusterActionsCommandInstantActionWithTransitionID = 1,

	ClusterActionsCommandStartActionID = 2,

	ClusterActionsCommandStartActionWithDurationID = 3,

	ClusterActionsCommandStopActionID = 4,

	ClusterActionsCommandPauseActionID = 5,

	ClusterActionsCommandPauseActionWithDurationID = 6,

	ClusterActionsCommandResumeActionID = 7,

	ClusterActionsCommandEnableActionID = 8,

	ClusterActionsCommandEnableActionWithDurationID = 9,

	ClusterActionsCommandDisableActionID = 10,

	ClusterActionsCommandDisableActionWithDurationID = 11,

	CommandIDTypeClusterActionsCommandInstantActionID = 0,

	CommandIDTypeClusterActionsCommandInstantActionWithTransitionID = 1,

	CommandIDTypeClusterActionsCommandStartActionID = 2,

	CommandIDTypeClusterActionsCommandStartActionWithDurationID = 3,

	CommandIDTypeClusterActionsCommandStopActionID = 4,

	CommandIDTypeClusterActionsCommandPauseActionID = 5,

	CommandIDTypeClusterActionsCommandPauseActionWithDurationID = 6,

	CommandIDTypeClusterActionsCommandResumeActionID = 7,

	CommandIDTypeClusterActionsCommandEnableActionID = 8,

	CommandIDTypeClusterActionsCommandEnableActionWithDurationID = 9,

	CommandIDTypeClusterActionsCommandDisableActionID = 10,

	CommandIDTypeClusterActionsCommandDisableActionWithDurationID = 11,

	ClusterBasicCommandMfgSpecificPingID = 268566528,

	ClusterOtaSoftwareUpdateProviderCommandQueryImageID = 0,

	ClusterOtaSoftwareUpdateProviderCommandQueryImageResponseID = 1,

	ClusterOtaSoftwareUpdateProviderCommandApplyUpdateRequestID = 2,

	ClusterOtaSoftwareUpdateProviderCommandApplyUpdateResponseID = 3,

	ClusterOtaSoftwareUpdateProviderCommandNotifyUpdateAppliedID = 4,

	CommandIDTypeClusterOTASoftwareUpdateProviderCommandQueryImageID = 0,

	CommandIDTypeClusterOTASoftwareUpdateProviderCommandQueryImageResponseID = 1,

	CommandIDTypeClusterOTASoftwareUpdateProviderCommandApplyUpdateRequestID = 2,

	CommandIDTypeClusterOTASoftwareUpdateProviderCommandApplyUpdateResponseID = 3,

	CommandIDTypeClusterOTASoftwareUpdateProviderCommandNotifyUpdateAppliedID = 4,

	ClusterOtaSoftwareUpdateRequestorCommandAnnounceOtaProviderID = 0,

	CommandIDTypeClusterOTASoftwareUpdateRequestorCommandAnnounceOTAProviderID = 0,

	ClusterGeneralCommissioningCommandArmFailSafeID = 0,

	ClusterGeneralCommissioningCommandArmFailSafeResponseID = 1,

	ClusterGeneralCommissioningCommandSetRegulatoryConfigID = 2,

	ClusterGeneralCommissioningCommandSetRegulatoryConfigResponseID = 3,

	ClusterGeneralCommissioningCommandCommissioningCompleteID = 4,

	ClusterGeneralCommissioningCommandCommissioningCompleteResponseID = 5,

	CommandIDTypeClusterGeneralCommissioningCommandArmFailSafeID = 0,

	CommandIDTypeClusterGeneralCommissioningCommandArmFailSafeResponseID = 1,

	CommandIDTypeClusterGeneralCommissioningCommandSetRegulatoryConfigID = 2,

	CommandIDTypeClusterGeneralCommissioningCommandSetRegulatoryConfigResponseID = 3,

	CommandIDTypeClusterGeneralCommissioningCommandCommissioningCompleteID = 4,

	CommandIDTypeClusterGeneralCommissioningCommandCommissioningCompleteResponseID = 5,

	ClusterNetworkCommissioningCommandScanNetworksID = 0,

	ClusterNetworkCommissioningCommandScanNetworksResponseID = 1,

	ClusterNetworkCommissioningCommandAddOrUpdateWiFiNetworkID = 2,

	ClusterNetworkCommissioningCommandAddOrUpdateThreadNetworkID = 3,

	ClusterNetworkCommissioningCommandRemoveNetworkID = 4,

	ClusterNetworkCommissioningCommandNetworkConfigResponseID = 5,

	ClusterNetworkCommissioningCommandConnectNetworkID = 6,

	ClusterNetworkCommissioningCommandConnectNetworkResponseID = 7,

	ClusterNetworkCommissioningCommandReorderNetworkID = 8,

	CommandIDTypeClusterNetworkCommissioningCommandScanNetworksID = 0,

	CommandIDTypeClusterNetworkCommissioningCommandScanNetworksResponseID = 1,

	CommandIDTypeClusterNetworkCommissioningCommandAddOrUpdateWiFiNetworkID = 2,

	CommandIDTypeClusterNetworkCommissioningCommandAddOrUpdateThreadNetworkID = 3,

	CommandIDTypeClusterNetworkCommissioningCommandRemoveNetworkID = 4,

	CommandIDTypeClusterNetworkCommissioningCommandNetworkConfigResponseID = 5,

	CommandIDTypeClusterNetworkCommissioningCommandConnectNetworkID = 6,

	CommandIDTypeClusterNetworkCommissioningCommandConnectNetworkResponseID = 7,

	CommandIDTypeClusterNetworkCommissioningCommandReorderNetworkID = 8,

	CommandIDTypeClusterNetworkCommissioningCommandQueryIdentityID = 9,

	CommandIDTypeClusterNetworkCommissioningCommandQueryIdentityResponseID = 10,

	ClusterDiagnosticLogsCommandRetrieveLogsRequestID = 0,

	ClusterDiagnosticLogsCommandRetrieveLogsResponseID = 1,

	CommandIDTypeClusterDiagnosticLogsCommandRetrieveLogsRequestID = 0,

	CommandIDTypeClusterDiagnosticLogsCommandRetrieveLogsResponseID = 1,

	ClusterGeneralDiagnosticsCommandTestEventTriggerID = 0,

	CommandIDTypeClusterGeneralDiagnosticsCommandTestEventTriggerID = 0,

	CommandIDTypeClusterGeneralDiagnosticsCommandTimeSnapshotID = 1,

	CommandIDTypeClusterGeneralDiagnosticsCommandTimeSnapshotResponseID = 2,

	ClusterSoftwareDiagnosticsCommandResetWatermarksID = 0,

	CommandIDTypeClusterSoftwareDiagnosticsCommandResetWatermarksID = 0,

	ClusterThreadNetworkDiagnosticsCommandResetCountsID = 0,

	CommandIDTypeClusterThreadNetworkDiagnosticsCommandResetCountsID = 0,

	ClusterWiFiNetworkDiagnosticsCommandResetCountsID = 0,

	CommandIDTypeClusterWiFiNetworkDiagnosticsCommandResetCountsID = 0,

	ClusterEthernetNetworkDiagnosticsCommandResetCountsID = 0,

	CommandIDTypeClusterEthernetNetworkDiagnosticsCommandResetCountsID = 0,

	ClusterTimeSynchronizationCommandSetUtcTimeID = 0,

	CommandIDTypeClusterTimeSynchronizationCommandSetUTCTimeID = 0,

	CommandIDTypeClusterTimeSynchronizationCommandSetUtcTimeID = 0,

	CommandIDTypeClusterTimeSynchronizationCommandSetTrustedTimeSourceID = 1,

	CommandIDTypeClusterTimeSynchronizationCommandSetTimeZoneID = 2,

	CommandIDTypeClusterTimeSynchronizationCommandSetTimeZoneResponseID = 3,

	CommandIDTypeClusterTimeSynchronizationCommandSetDSTOffsetID = 4,

	CommandIDTypeClusterTimeSynchronizationCommandSetDefaultNTPID = 5,

	ClusterAdministratorCommissioningCommandOpenCommissioningWindowID = 0,

	ClusterAdministratorCommissioningCommandOpenBasicCommissioningWindowID = 1,

	ClusterAdministratorCommissioningCommandRevokeCommissioningID = 2,

	CommandIDTypeClusterAdministratorCommissioningCommandOpenCommissioningWindowID = 0,

	CommandIDTypeClusterAdministratorCommissioningCommandOpenBasicCommissioningWindowID = 1,

	CommandIDTypeClusterAdministratorCommissioningCommandRevokeCommissioningID = 2,

	ClusterOperationalCredentialsCommandAttestationRequestID = 0,

	ClusterOperationalCredentialsCommandAttestationResponseID = 1,

	ClusterOperationalCredentialsCommandCertificateChainRequestID = 2,

	ClusterOperationalCredentialsCommandCertificateChainResponseID = 3,

	ClusterOperationalCredentialsCommandCSRRequestID = 4,

	ClusterOperationalCredentialsCommandCSRResponseID = 5,

	ClusterOperationalCredentialsCommandAddNOCID = 6,

	ClusterOperationalCredentialsCommandUpdateNOCID = 7,

	ClusterOperationalCredentialsCommandNOCResponseID = 8,

	ClusterOperationalCredentialsCommandUpdateFabricLabelID = 9,

	ClusterOperationalCredentialsCommandRemoveFabricID = 10,

	ClusterOperationalCredentialsCommandAddTrustedRootCertificateID = 11,

	CommandIDTypeClusterOperationalCredentialsCommandAttestationRequestID = 0,

	CommandIDTypeClusterOperationalCredentialsCommandAttestationResponseID = 1,

	CommandIDTypeClusterOperationalCredentialsCommandCertificateChainRequestID = 2,

	CommandIDTypeClusterOperationalCredentialsCommandCertificateChainResponseID = 3,

	CommandIDTypeClusterOperationalCredentialsCommandCSRRequestID = 4,

	CommandIDTypeClusterOperationalCredentialsCommandCSRResponseID = 5,

	CommandIDTypeClusterOperationalCredentialsCommandAddNOCID = 6,

	CommandIDTypeClusterOperationalCredentialsCommandUpdateNOCID = 7,

	CommandIDTypeClusterOperationalCredentialsCommandNOCResponseID = 8,

	CommandIDTypeClusterOperationalCredentialsCommandUpdateFabricLabelID = 9,

	CommandIDTypeClusterOperationalCredentialsCommandRemoveFabricID = 10,

	CommandIDTypeClusterOperationalCredentialsCommandAddTrustedRootCertificateID = 11,

	ClusterGroupKeyManagementCommandKeySetWriteID = 0,

	ClusterGroupKeyManagementCommandKeySetReadID = 1,

	ClusterGroupKeyManagementCommandKeySetReadResponseID = 2,

	ClusterGroupKeyManagementCommandKeySetRemoveID = 3,

	ClusterGroupKeyManagementCommandKeySetReadAllIndicesID = 4,

	ClusterGroupKeyManagementCommandKeySetReadAllIndicesResponseID = 5,

	CommandIDTypeClusterGroupKeyManagementCommandKeySetWriteID = 0,

	CommandIDTypeClusterGroupKeyManagementCommandKeySetReadID = 1,

	CommandIDTypeClusterGroupKeyManagementCommandKeySetReadResponseID = 2,

	CommandIDTypeClusterGroupKeyManagementCommandKeySetRemoveID = 3,

	CommandIDTypeClusterGroupKeyManagementCommandKeySetReadAllIndicesID = 4,

	CommandIDTypeClusterGroupKeyManagementCommandKeySetReadAllIndicesResponseID = 5,

	CommandIDTypeClusterICDManagementCommandRegisterClientID = 0,

	CommandIDTypeClusterICDManagementCommandRegisterClientResponseID = 1,

	CommandIDTypeClusterICDManagementCommandUnregisterClientID = 2,

	CommandIDTypeClusterICDManagementCommandStayActiveRequestID = 3,

	CommandIDTypeClusterICDManagementCommandStayActiveResponseID = 4,

	CommandIDTypeClusterTimerCommandSetTimerID = 0,

	CommandIDTypeClusterTimerCommandResetTimerID = 1,

	CommandIDTypeClusterTimerCommandAddTimeID = 2,

	CommandIDTypeClusterTimerCommandReduceTimeID = 3,

	CommandIDTypeClusterOvenCavityOperationalStateCommandPauseID = 0,

	CommandIDTypeClusterOvenCavityOperationalStateCommandStopID = 1,

	CommandIDTypeClusterOvenCavityOperationalStateCommandStartID = 2,

	CommandIDTypeClusterOvenCavityOperationalStateCommandResumeID = 3,

	CommandIDTypeClusterOvenCavityOperationalStateCommandOperationalCommandResponseID = 4,

	CommandIDTypeClusterOvenModeCommandChangeToModeID = 0,

	CommandIDTypeClusterOvenModeCommandChangeToModeResponseID = 1,

	ClusterModeSelectCommandChangeToModeID = 0,

	CommandIDTypeClusterModeSelectCommandChangeToModeID = 0,

	CommandIDTypeClusterLaundryWasherModeCommandChangeToModeID = 0,

	CommandIDTypeClusterLaundryWasherModeCommandChangeToModeResponseID = 1,

	CommandIDTypeClusterRefrigeratorAndTemperatureControlledCabinetModeCommandChangeToModeID = 0,

	CommandIDTypeClusterRefrigeratorAndTemperatureControlledCabinetModeCommandChangeToModeResponseID = 1,

	CommandIDTypeClusterRVCRunModeCommandChangeToModeID = 0,

	CommandIDTypeClusterRVCRunModeCommandChangeToModeResponseID = 1,

	CommandIDTypeClusterRVCCleanModeCommandChangeToModeID = 0,

	CommandIDTypeClusterRVCCleanModeCommandChangeToModeResponseID = 1,

	CommandIDTypeClusterTemperatureControlCommandSetTemperatureID = 0,

	CommandIDTypeClusterDishwasherModeCommandChangeToModeID = 0,

	CommandIDTypeClusterDishwasherModeCommandChangeToModeResponseID = 1,

	CommandIDTypeClusterSmokeCOAlarmCommandSelfTestRequestID = 0,

	CommandIDTypeClusterDishwasherAlarmCommandResetID = 0,

	CommandIDTypeClusterDishwasherAlarmCommandModifyEnabledAlarmsID = 1,

	CommandIDTypeClusterMicrowaveOvenControlCommandSetCookingParametersID = 0,

	CommandIDTypeClusterMicrowaveOvenControlCommandAddMoreTimeID = 1,

	CommandIDTypeClusterOperationalStateCommandPauseID = 0,

	CommandIDTypeClusterOperationalStateCommandStopID = 1,

	CommandIDTypeClusterOperationalStateCommandStartID = 2,

	CommandIDTypeClusterOperationalStateCommandResumeID = 3,

	CommandIDTypeClusterOperationalStateCommandOperationalCommandResponseID = 4,

	CommandIDTypeClusterRVCOperationalStateCommandPauseID = 0,

	CommandIDTypeClusterRVCOperationalStateCommandStopID = 1,

	CommandIDTypeClusterRVCOperationalStateCommandStartID = 2,

	CommandIDTypeClusterRVCOperationalStateCommandResumeID = 3,

	CommandIDTypeClusterRVCOperationalStateCommandOperationalCommandResponseID = 4,

	CommandIDTypeClusterHEPAFilterMonitoringCommandResetConditionID = 0,

	CommandIDTypeClusterActivatedCarbonFilterMonitoringCommandResetConditionID = 0,

	CommandIDTypeClusterBooleanStateConfigurationCommandSuppressAlarmID = 0,

	CommandIDTypeClusterBooleanStateConfigurationCommandEnableDisableAlarmID = 1,

	CommandIDTypeClusterValveConfigurationAndControlCommandOpenID = 0,

	CommandIDTypeClusterValveConfigurationAndControlCommandCloseID = 1,

	CommandIDTypeClusterDemandResponseLoadControlCommandRegisterLoadControlProgramRequestID = 0,

	CommandIDTypeClusterDemandResponseLoadControlCommandUnregisterLoadControlProgramRequestID = 1,

	CommandIDTypeClusterDemandResponseLoadControlCommandAddLoadControlEventRequestID = 2,

	CommandIDTypeClusterDemandResponseLoadControlCommandRemoveLoadControlEventRequestID = 3,

	CommandIDTypeClusterDemandResponseLoadControlCommandClearLoadControlEventsRequestID = 4,

	CommandIDTypeClusterDeviceEnergyManagementCommandPowerAdjustRequestID = 0,

	CommandIDTypeClusterDeviceEnergyManagementCommandCancelPowerAdjustRequestID = 1,

	CommandIDTypeClusterDeviceEnergyManagementCommandStartTimeAdjustRequestID = 2,

	CommandIDTypeClusterDeviceEnergyManagementCommandPauseRequestID = 3,

	CommandIDTypeClusterDeviceEnergyManagementCommandResumeRequestID = 4,

	CommandIDTypeClusterDeviceEnergyManagementCommandModifyForecastRequestID = 5,

	CommandIDTypeClusterDeviceEnergyManagementCommandRequestConstraintBasedForecastID = 6,

	CommandIDTypeClusterEnergyEVSECommandGetTargetsResponseID = 0,

	CommandIDTypeClusterEnergyEVSECommandDisableID = 1,

	CommandIDTypeClusterEnergyEVSECommandEnableChargingID = 2,

	CommandIDTypeClusterEnergyEVSECommandEnableDischargingID = 3,

	CommandIDTypeClusterEnergyEVSECommandStartDiagnosticsID = 4,

	CommandIDTypeClusterEnergyEVSECommandSetTargetsID = 5,

	CommandIDTypeClusterEnergyEVSECommandGetTargetsID = 6,

	CommandIDTypeClusterEnergyEVSECommandClearTargetsID = 7,

	ClusterDoorLockCommandLockDoorID = 0,

	ClusterDoorLockCommandUnlockDoorID = 1,

	ClusterDoorLockCommandUnlockWithTimeoutID = 3,

	ClusterDoorLockCommandSetWeekDayScheduleID = 11,

	ClusterDoorLockCommandGetWeekDayScheduleID = 12,

	ClusterDoorLockCommandGetWeekDayScheduleResponseID = 12,

	ClusterDoorLockCommandClearWeekDayScheduleID = 13,

	ClusterDoorLockCommandSetYearDayScheduleID = 14,

	ClusterDoorLockCommandGetYearDayScheduleID = 15,

	ClusterDoorLockCommandGetYearDayScheduleResponseID = 15,

	ClusterDoorLockCommandClearYearDayScheduleID = 16,

	ClusterDoorLockCommandSetHolidayScheduleID = 17,

	ClusterDoorLockCommandGetHolidayScheduleID = 18,

	ClusterDoorLockCommandGetHolidayScheduleResponseID = 18,

	ClusterDoorLockCommandClearHolidayScheduleID = 19,

	ClusterDoorLockCommandSetUserID = 26,

	ClusterDoorLockCommandGetUserID = 27,

	ClusterDoorLockCommandGetUserResponseID = 28,

	ClusterDoorLockCommandClearUserID = 29,

	ClusterDoorLockCommandSetCredentialID = 34,

	ClusterDoorLockCommandSetCredentialResponseID = 35,

	ClusterDoorLockCommandGetCredentialStatusID = 36,

	ClusterDoorLockCommandGetCredentialStatusResponseID = 37,

	ClusterDoorLockCommandClearCredentialID = 38,

	CommandIDTypeClusterDoorLockCommandLockDoorID = 0,

	CommandIDTypeClusterDoorLockCommandUnlockDoorID = 1,

	CommandIDTypeClusterDoorLockCommandUnlockWithTimeoutID = 3,

	CommandIDTypeClusterDoorLockCommandSetWeekDayScheduleID = 11,

	CommandIDTypeClusterDoorLockCommandGetWeekDayScheduleID = 12,

	CommandIDTypeClusterDoorLockCommandGetWeekDayScheduleResponseID = 12,

	CommandIDTypeClusterDoorLockCommandClearWeekDayScheduleID = 13,

	CommandIDTypeClusterDoorLockCommandSetYearDayScheduleID = 14,

	CommandIDTypeClusterDoorLockCommandGetYearDayScheduleID = 15,

	CommandIDTypeClusterDoorLockCommandGetYearDayScheduleResponseID = 15,

	CommandIDTypeClusterDoorLockCommandClearYearDayScheduleID = 16,

	CommandIDTypeClusterDoorLockCommandSetHolidayScheduleID = 17,

	CommandIDTypeClusterDoorLockCommandGetHolidayScheduleID = 18,

	CommandIDTypeClusterDoorLockCommandGetHolidayScheduleResponseID = 18,

	CommandIDTypeClusterDoorLockCommandClearHolidayScheduleID = 19,

	CommandIDTypeClusterDoorLockCommandSetUserID = 26,

	CommandIDTypeClusterDoorLockCommandGetUserID = 27,

	CommandIDTypeClusterDoorLockCommandGetUserResponseID = 28,

	CommandIDTypeClusterDoorLockCommandClearUserID = 29,

	CommandIDTypeClusterDoorLockCommandSetCredentialID = 34,

	CommandIDTypeClusterDoorLockCommandSetCredentialResponseID = 35,

	CommandIDTypeClusterDoorLockCommandGetCredentialStatusID = 36,

	CommandIDTypeClusterDoorLockCommandGetCredentialStatusResponseID = 37,

	CommandIDTypeClusterDoorLockCommandClearCredentialID = 38,

	CommandIDTypeClusterDoorLockCommandUnboltDoorID = 39,

	ClusterWindowCoveringCommandUpOrOpenID = 0,

	ClusterWindowCoveringCommandDownOrCloseID = 1,

	ClusterWindowCoveringCommandStopMotionID = 2,

	ClusterWindowCoveringCommandGoToLiftValueID = 4,

	ClusterWindowCoveringCommandGoToLiftPercentageID = 5,

	ClusterWindowCoveringCommandGoToTiltValueID = 7,

	ClusterWindowCoveringCommandGoToTiltPercentageID = 8,

	CommandIDTypeClusterWindowCoveringCommandUpOrOpenID = 0,

	CommandIDTypeClusterWindowCoveringCommandDownOrCloseID = 1,

	CommandIDTypeClusterWindowCoveringCommandStopMotionID = 2,

	CommandIDTypeClusterWindowCoveringCommandGoToLiftValueID = 4,

	CommandIDTypeClusterWindowCoveringCommandGoToLiftPercentageID = 5,

	CommandIDTypeClusterWindowCoveringCommandGoToTiltValueID = 7,

	CommandIDTypeClusterWindowCoveringCommandGoToTiltPercentageID = 8,

	ClusterBarrierControlCommandBarrierControlGoToPercentID = 0,

	ClusterBarrierControlCommandBarrierControlStopID = 1,

	CommandIDTypeClusterBarrierControlCommandBarrierControlGoToPercentID = 0,

	CommandIDTypeClusterBarrierControlCommandBarrierControlStopID = 1,

	ClusterThermostatCommandSetpointRaiseLowerID = 0,

	ClusterThermostatCommandGetWeeklyScheduleResponseID = 0,

	ClusterThermostatCommandSetWeeklyScheduleID = 1,

	ClusterThermostatCommandGetWeeklyScheduleID = 2,

	ClusterThermostatCommandClearWeeklyScheduleID = 3,

	CommandIDTypeClusterThermostatCommandSetpointRaiseLowerID = 0,

	CommandIDTypeClusterThermostatCommandGetWeeklyScheduleResponseID = 0,

	CommandIDTypeClusterThermostatCommandSetWeeklyScheduleID = 1,

	CommandIDTypeClusterThermostatCommandGetWeeklyScheduleID = 2,

	CommandIDTypeClusterThermostatCommandClearWeeklyScheduleID = 3,

	CommandIDTypeClusterFanControlCommandStepID = 0,

	ClusterColorControlCommandMoveToHueID = 0,

	ClusterColorControlCommandMoveHueID = 1,

	ClusterColorControlCommandStepHueID = 2,

	ClusterColorControlCommandMoveToSaturationID = 3,

	ClusterColorControlCommandMoveSaturationID = 4,

	ClusterColorControlCommandStepSaturationID = 5,

	ClusterColorControlCommandMoveToHueAndSaturationID = 6,

	ClusterColorControlCommandMoveToColorID = 7,

	ClusterColorControlCommandMoveColorID = 8,

	ClusterColorControlCommandStepColorID = 9,

	ClusterColorControlCommandMoveToColorTemperatureID = 10,

	ClusterColorControlCommandEnhancedMoveToHueID = 64,

	ClusterColorControlCommandEnhancedMoveHueID = 65,

	ClusterColorControlCommandEnhancedStepHueID = 66,

	ClusterColorControlCommandEnhancedMoveToHueAndSaturationID = 67,

	ClusterColorControlCommandColorLoopSetID = 68,

	ClusterColorControlCommandStopMoveStepID = 71,

	ClusterColorControlCommandMoveColorTemperatureID = 75,

	ClusterColorControlCommandStepColorTemperatureID = 76,

	CommandIDTypeClusterColorControlCommandMoveToHueID = 0,

	CommandIDTypeClusterColorControlCommandMoveHueID = 1,

	CommandIDTypeClusterColorControlCommandStepHueID = 2,

	CommandIDTypeClusterColorControlCommandMoveToSaturationID = 3,

	CommandIDTypeClusterColorControlCommandMoveSaturationID = 4,

	CommandIDTypeClusterColorControlCommandStepSaturationID = 5,

	CommandIDTypeClusterColorControlCommandMoveToHueAndSaturationID = 6,

	CommandIDTypeClusterColorControlCommandMoveToColorID = 7,

	CommandIDTypeClusterColorControlCommandMoveColorID = 8,

	CommandIDTypeClusterColorControlCommandStepColorID = 9,

	CommandIDTypeClusterColorControlCommandMoveToColorTemperatureID = 10,

	CommandIDTypeClusterColorControlCommandEnhancedMoveToHueID = 64,

	CommandIDTypeClusterColorControlCommandEnhancedMoveHueID = 65,

	CommandIDTypeClusterColorControlCommandEnhancedStepHueID = 66,

	CommandIDTypeClusterColorControlCommandEnhancedMoveToHueAndSaturationID = 67,

	CommandIDTypeClusterColorControlCommandColorLoopSetID = 68,

	CommandIDTypeClusterColorControlCommandStopMoveStepID = 71,

	CommandIDTypeClusterColorControlCommandMoveColorTemperatureID = 75,

	CommandIDTypeClusterColorControlCommandStepColorTemperatureID = 76,

	ClusterChannelCommandChangeChannelID = 0,

	ClusterChannelCommandChangeChannelResponseID = 1,

	ClusterChannelCommandChangeChannelByNumberID = 2,

	ClusterChannelCommandSkipChannelID = 3,

	CommandIDTypeClusterChannelCommandChangeChannelID = 0,

	CommandIDTypeClusterChannelCommandChangeChannelResponseID = 1,

	CommandIDTypeClusterChannelCommandChangeChannelByNumberID = 2,

	CommandIDTypeClusterChannelCommandSkipChannelID = 3,

	CommandIDTypeClusterChannelCommandGetProgramGuideID = 4,

	CommandIDTypeClusterChannelCommandProgramGuideResponseID = 5,

	CommandIDTypeClusterChannelCommandRecordProgramID = 6,

	CommandIDTypeClusterChannelCommandCancelRecordProgramID = 7,

	ClusterTargetNavigatorCommandNavigateTargetID = 0,

	ClusterTargetNavigatorCommandNavigateTargetResponseID = 1,

	CommandIDTypeClusterTargetNavigatorCommandNavigateTargetID = 0,

	CommandIDTypeClusterTargetNavigatorCommandNavigateTargetResponseID = 1,

	ClusterMediaPlaybackCommandPlayID = 0,

	ClusterMediaPlaybackCommandPauseID = 1,

	ClusterMediaPlaybackCommandStopPlaybackID = 2,

	ClusterMediaPlaybackCommandStartOverID = 3,

	ClusterMediaPlaybackCommandPreviousID = 4,

	ClusterMediaPlaybackCommandNextID = 5,

	ClusterMediaPlaybackCommandRewindID = 6,

	ClusterMediaPlaybackCommandFastForwardID = 7,

	ClusterMediaPlaybackCommandSkipForwardID = 8,

	ClusterMediaPlaybackCommandSkipBackwardID = 9,

	ClusterMediaPlaybackCommandPlaybackResponseID = 10,

	ClusterMediaPlaybackCommandSeekID = 11,

	CommandIDTypeClusterMediaPlaybackCommandPlayID = 0,

	CommandIDTypeClusterMediaPlaybackCommandPauseID = 1,

	CommandIDTypeClusterMediaPlaybackCommandStopID = 2,

	CommandIDTypeClusterMediaPlaybackCommandStartOverID = 3,

	CommandIDTypeClusterMediaPlaybackCommandPreviousID = 4,

	CommandIDTypeClusterMediaPlaybackCommandNextID = 5,

	CommandIDTypeClusterMediaPlaybackCommandRewindID = 6,

	CommandIDTypeClusterMediaPlaybackCommandFastForwardID = 7,

	CommandIDTypeClusterMediaPlaybackCommandSkipForwardID = 8,

	CommandIDTypeClusterMediaPlaybackCommandSkipBackwardID = 9,

	CommandIDTypeClusterMediaPlaybackCommandPlaybackResponseID = 10,

	CommandIDTypeClusterMediaPlaybackCommandSeekID = 11,

	CommandIDTypeClusterMediaPlaybackCommandActivateAudioTrackID = 12,

	CommandIDTypeClusterMediaPlaybackCommandActivateTextTrackID = 13,

	CommandIDTypeClusterMediaPlaybackCommandDeactivateTextTrackID = 14,

	ClusterMediaInputCommandSelectInputID = 0,

	ClusterMediaInputCommandShowInputStatusID = 1,

	ClusterMediaInputCommandHideInputStatusID = 2,

	ClusterMediaInputCommandRenameInputID = 3,

	CommandIDTypeClusterMediaInputCommandSelectInputID = 0,

	CommandIDTypeClusterMediaInputCommandShowInputStatusID = 1,

	CommandIDTypeClusterMediaInputCommandHideInputStatusID = 2,

	CommandIDTypeClusterMediaInputCommandRenameInputID = 3,

	ClusterLowPowerCommandSleepID = 0,

	CommandIDTypeClusterLowPowerCommandSleepID = 0,

	ClusterKeypadInputCommandSendKeyID = 0,

	ClusterKeypadInputCommandSendKeyResponseID = 1,

	CommandIDTypeClusterKeypadInputCommandSendKeyID = 0,

	CommandIDTypeClusterKeypadInputCommandSendKeyResponseID = 1,

	ClusterContentLauncherCommandLaunchContentID = 0,

	ClusterContentLauncherCommandLaunchURLID = 1,

	ClusterContentLauncherCommandLaunchResponseID = 2,

	CommandIDTypeClusterContentLauncherCommandLaunchContentID = 0,

	CommandIDTypeClusterContentLauncherCommandLaunchURLID = 1,

	CommandIDTypeClusterContentLauncherCommandLauncherResponseID = 2,

	ClusterAudioOutputCommandSelectOutputID = 0,

	ClusterAudioOutputCommandRenameOutputID = 1,

	CommandIDTypeClusterAudioOutputCommandSelectOutputID = 0,

	CommandIDTypeClusterAudioOutputCommandRenameOutputID = 1,

	ClusterApplicationLauncherCommandLaunchAppID = 0,

	ClusterApplicationLauncherCommandStopAppID = 1,

	ClusterApplicationLauncherCommandHideAppID = 2,

	ClusterApplicationLauncherCommandLauncherResponseID = 3,

	CommandIDTypeClusterApplicationLauncherCommandLaunchAppID = 0,

	CommandIDTypeClusterApplicationLauncherCommandStopAppID = 1,

	CommandIDTypeClusterApplicationLauncherCommandHideAppID = 2,

	CommandIDTypeClusterApplicationLauncherCommandLauncherResponseID = 3,

	ClusterAccountLoginCommandGetSetupPINID = 0,

	ClusterAccountLoginCommandGetSetupPINResponseID = 1,

	ClusterAccountLoginCommandLoginID = 2,

	ClusterAccountLoginCommandLogoutID = 3,

	CommandIDTypeClusterAccountLoginCommandGetSetupPINID = 0,

	CommandIDTypeClusterAccountLoginCommandGetSetupPINResponseID = 1,

	CommandIDTypeClusterAccountLoginCommandLoginID = 2,

	CommandIDTypeClusterAccountLoginCommandLogoutID = 3,

	CommandIDTypeClusterContentControlCommandUpdatePINID = 0,

	CommandIDTypeClusterContentControlCommandResetPINID = 1,

	CommandIDTypeClusterContentControlCommandResetPINResponseID = 2,

	CommandIDTypeClusterContentControlCommandEnableID = 3,

	CommandIDTypeClusterContentControlCommandDisableID = 4,

	CommandIDTypeClusterContentControlCommandAddBonusTimeID = 5,

	CommandIDTypeClusterContentControlCommandSetScreenDailyTimeID = 6,

	CommandIDTypeClusterContentControlCommandBlockUnratedContentID = 7,

	CommandIDTypeClusterContentControlCommandUnblockUnratedContentID = 8,

	CommandIDTypeClusterContentControlCommandSetOnDemandRatingThresholdID = 9,

	CommandIDTypeClusterContentControlCommandSetScheduledContentRatingThresholdID = 10,

	CommandIDTypeClusterContentAppObserverCommandContentAppMessageID = 0,

	CommandIDTypeClusterContentAppObserverCommandContentAppMessageResponseID = 1,

	ClusterElectricalMeasurementCommandGetProfileInfoResponseCommandID = 0,

	ClusterElectricalMeasurementCommandGetProfileInfoCommandID = 0,

	ClusterElectricalMeasurementCommandGetMeasurementProfileResponseCommandID = 1,

	ClusterElectricalMeasurementCommandGetMeasurementProfileCommandID = 1,

	CommandIDTypeClusterElectricalMeasurementCommandGetProfileInfoResponseCommandID = 0,

	CommandIDTypeClusterElectricalMeasurementCommandGetProfileInfoCommandID = 0,

	CommandIDTypeClusterElectricalMeasurementCommandGetMeasurementProfileResponseCommandID = 1,

	CommandIDTypeClusterElectricalMeasurementCommandGetMeasurementProfileCommandID = 1,

	ClusterTestClusterCommandTestID = 0,

	ClusterTestClusterCommandTestSpecificResponseID = 0,

	ClusterTestClusterCommandTestNotHandledID = 1,

	ClusterTestClusterCommandTestAddArgumentsResponseID = 1,

	ClusterTestClusterCommandTestSpecificID = 2,

	ClusterTestClusterCommandTestSimpleArgumentResponseID = 2,

	ClusterTestClusterCommandTestUnknownCommandID = 3,

	ClusterTestClusterCommandTestStructArrayArgumentResponseID = 3,

	ClusterTestClusterCommandTestAddArgumentsID = 4,

	ClusterTestClusterCommandTestListInt8UReverseResponseID = 4,

	ClusterTestClusterCommandTestSimpleArgumentRequestID = 5,

	ClusterTestClusterCommandTestEnumsResponseID = 5,

	ClusterTestClusterCommandTestStructArrayArgumentRequestID = 6,

	ClusterTestClusterCommandTestNullableOptionalResponseID = 6,

	ClusterTestClusterCommandTestStructArgumentRequestID = 7,

	ClusterTestClusterCommandTestComplexNullableOptionalResponseID = 7,

	ClusterTestClusterCommandTestNestedStructArgumentRequestID = 8,

	ClusterTestClusterCommandBooleanResponseID = 8,

	ClusterTestClusterCommandTestListStructArgumentRequestID = 9,

	ClusterTestClusterCommandSimpleStructResponseID = 9,

	ClusterTestClusterCommandTestListInt8UArgumentRequestID = 10,

	ClusterTestClusterCommandTestEmitTestEventResponseID = 10,

	ClusterTestClusterCommandTestNestedStructListArgumentRequestID = 11,

	ClusterTestClusterCommandTestEmitTestFabricScopedEventResponseID = 11,

	ClusterTestClusterCommandTestListNestedStructListArgumentRequestID = 12,

	ClusterTestClusterCommandTestListInt8UReverseRequestID = 13,

	ClusterTestClusterCommandTestEnumsRequestID = 14,

	ClusterTestClusterCommandTestNullableOptionalRequestID = 15,

	ClusterTestClusterCommandTestComplexNullableOptionalRequestID = 16,

	ClusterTestClusterCommandSimpleStructEchoRequestID = 17,

	ClusterTestClusterCommandTimedInvokeRequestID = 18,

	ClusterTestClusterCommandTestSimpleOptionalArgumentRequestID = 19,

	ClusterTestClusterCommandTestEmitTestEventRequestID = 20,

	ClusterTestClusterCommandTestEmitTestFabricScopedEventRequestID = 21,

	CommandIDTypeClusterUnitTestingCommandTestID = 0,

	CommandIDTypeClusterUnitTestingCommandTestSpecificResponseID = 0,

	CommandIDTypeClusterUnitTestingCommandTestNotHandledID = 1,

	CommandIDTypeClusterUnitTestingCommandTestAddArgumentsResponseID = 1,

	CommandIDTypeClusterUnitTestingCommandTestSpecificID = 2,

	CommandIDTypeClusterUnitTestingCommandTestSimpleArgumentResponseID = 2,

	CommandIDTypeClusterUnitTestingCommandTestUnknownCommandID = 3,

	CommandIDTypeClusterUnitTestingCommandTestStructArrayArgumentResponseID = 3,

	CommandIDTypeClusterUnitTestingCommandTestAddArgumentsID = 4,

	CommandIDTypeClusterUnitTestingCommandTestListInt8UReverseResponseID = 4,

	CommandIDTypeClusterUnitTestingCommandTestSimpleArgumentRequestID = 5,

	CommandIDTypeClusterUnitTestingCommandTestEnumsResponseID = 5,

	CommandIDTypeClusterUnitTestingCommandTestStructArrayArgumentRequestID = 6,

	CommandIDTypeClusterUnitTestingCommandTestNullableOptionalResponseID = 6,

	CommandIDTypeClusterUnitTestingCommandTestStructArgumentRequestID = 7,

	CommandIDTypeClusterUnitTestingCommandTestComplexNullableOptionalResponseID = 7,

	CommandIDTypeClusterUnitTestingCommandTestNestedStructArgumentRequestID = 8,

	CommandIDTypeClusterUnitTestingCommandBooleanResponseID = 8,

	CommandIDTypeClusterUnitTestingCommandTestListStructArgumentRequestID = 9,

	CommandIDTypeClusterUnitTestingCommandSimpleStructResponseID = 9,

	CommandIDTypeClusterUnitTestingCommandTestListInt8UArgumentRequestID = 10,

	CommandIDTypeClusterUnitTestingCommandTestEmitTestEventResponseID = 10,

	CommandIDTypeClusterUnitTestingCommandTestNestedStructListArgumentRequestID = 11,

	CommandIDTypeClusterUnitTestingCommandTestEmitTestFabricScopedEventResponseID = 11,

	CommandIDTypeClusterUnitTestingCommandTestListNestedStructListArgumentRequestID = 12,

	CommandIDTypeClusterUnitTestingCommandTestListInt8UReverseRequestID = 13,

	CommandIDTypeClusterUnitTestingCommandTestEnumsRequestID = 14,

	CommandIDTypeClusterUnitTestingCommandTestNullableOptionalRequestID = 15,

	CommandIDTypeClusterUnitTestingCommandTestComplexNullableOptionalRequestID = 16,

	CommandIDTypeClusterUnitTestingCommandSimpleStructEchoRequestID = 17,

	CommandIDTypeClusterUnitTestingCommandTimedInvokeRequestID = 18,

	CommandIDTypeClusterUnitTestingCommandTestSimpleOptionalArgumentRequestID = 19,

	CommandIDTypeClusterUnitTestingCommandTestEmitTestEventRequestID = 20,

	CommandIDTypeClusterUnitTestingCommandTestEmitTestFabricScopedEventRequestID = 21,

	CommandIDTypeClusterSampleMEICommandPingID = 0,

	CommandIDTypeClusterSampleMEICommandAddArgumentsResponseID = 1,

	CommandIDTypeClusterSampleMEICommandAddArgumentsID = 2
}

declare class MTRCommandPath extends MTRClusterPath {

	static alloc(): MTRCommandPath; // inherited from NSObject

	static commandPathWithEndpointIDClusterIDCommandID(endpointID: number, clusterID: number, commandID: number): MTRCommandPath;

	static commandPathWithEndpointIdClusterIdCommandId(endpointId: number, clusterId: number, commandId: number): MTRCommandPath;

	static new(): MTRCommandPath; // inherited from NSObject

	readonly command: number;
}

declare var MTRCommandPathKey: string;

interface MTRCommissionableBrowserDelegate extends NSObjectProtocol {

	controllerDidFindCommissionableDevice(controller: MTRDeviceController, device: MTRCommissionableBrowserResult): void;

	controllerDidRemoveCommissionableDevice(controller: MTRDeviceController, device: MTRCommissionableBrowserResult): void;
}
declare var MTRCommissionableBrowserDelegate: {

	prototype: MTRCommissionableBrowserDelegate;
};

declare class MTRCommissionableBrowserResult extends NSObject {

	static alloc(): MTRCommissionableBrowserResult; // inherited from NSObject

	static new(): MTRCommissionableBrowserResult; // inherited from NSObject

	readonly commissioningMode: boolean;

	readonly discriminator: number;

	readonly instanceName: string;

	readonly productID: number;

	readonly vendorID: number;
}

declare const enum MTRCommissioningFlow {

	Standard = 0,

	UserActionRequired = 1,

	Custom = 2,

	Invalid = 3
}

declare class MTRCommissioningParameters extends NSObject {

	static alloc(): MTRCommissioningParameters; // inherited from NSObject

	static new(): MTRCommissioningParameters; // inherited from NSObject

	CSRNonce: NSData;

	attestationNonce: NSData;

	countryCode: string;

	csrNonce: NSData;

	deviceAttestationDelegate: MTRDeviceAttestationDelegate;

	failSafeExpiryTimeoutSecs: number;

	failSafeTimeout: number;

	skipCommissioningComplete: boolean;

	threadOperationalDataset: NSData;

	wifiCredentials: NSData;

	wifiSSID: NSData;
}

declare const enum MTRCommissioningStatus {

	Unknown = 0,

	Success = 1,

	Failed = 2,

	DiscoveringMoreDevices = 3
}

declare class MTRContentLauncherClusterAdditionalInfo extends MTRContentLauncherClusterAdditionalInfoStruct {

	static alloc(): MTRContentLauncherClusterAdditionalInfo; // inherited from NSObject

	static new(): MTRContentLauncherClusterAdditionalInfo; // inherited from NSObject
}

declare class MTRContentLauncherClusterAdditionalInfoStruct extends NSObject implements NSCopying {

	static alloc(): MTRContentLauncherClusterAdditionalInfoStruct; // inherited from NSObject

	static new(): MTRContentLauncherClusterAdditionalInfoStruct; // inherited from NSObject

	name: string;

	value: string;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRContentLauncherClusterBrandingInformation extends MTRContentLauncherClusterBrandingInformationStruct {

	static alloc(): MTRContentLauncherClusterBrandingInformation; // inherited from NSObject

	static new(): MTRContentLauncherClusterBrandingInformation; // inherited from NSObject
}

declare class MTRContentLauncherClusterBrandingInformationStruct extends NSObject implements NSCopying {

	static alloc(): MTRContentLauncherClusterBrandingInformationStruct; // inherited from NSObject

	static new(): MTRContentLauncherClusterBrandingInformationStruct; // inherited from NSObject

	background: MTRContentLauncherClusterStyleInformationStruct;

	logo: MTRContentLauncherClusterStyleInformationStruct;

	progressBar: MTRContentLauncherClusterStyleInformationStruct;

	providerName: string;

	splash: MTRContentLauncherClusterStyleInformationStruct;

	waterMark: MTRContentLauncherClusterStyleInformationStruct;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRContentLauncherClusterContentSearch extends MTRContentLauncherClusterContentSearchStruct {

	static alloc(): MTRContentLauncherClusterContentSearch; // inherited from NSObject

	static new(): MTRContentLauncherClusterContentSearch; // inherited from NSObject
}

declare class MTRContentLauncherClusterContentSearchStruct extends NSObject implements NSCopying {

	static alloc(): MTRContentLauncherClusterContentSearchStruct; // inherited from NSObject

	static new(): MTRContentLauncherClusterContentSearchStruct; // inherited from NSObject

	parameterList: NSArray<any>;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRContentLauncherClusterDimension extends MTRContentLauncherClusterDimensionStruct {

	static alloc(): MTRContentLauncherClusterDimension; // inherited from NSObject

	static new(): MTRContentLauncherClusterDimension; // inherited from NSObject
}

declare class MTRContentLauncherClusterDimensionStruct extends NSObject implements NSCopying {

	static alloc(): MTRContentLauncherClusterDimensionStruct; // inherited from NSObject

	static new(): MTRContentLauncherClusterDimensionStruct; // inherited from NSObject

	height: number;

	metric: number;

	width: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRContentLauncherClusterLaunchContentParams extends NSObject implements NSCopying {

	static alloc(): MTRContentLauncherClusterLaunchContentParams; // inherited from NSObject

	static new(): MTRContentLauncherClusterLaunchContentParams; // inherited from NSObject

	autoPlay: number;

	data: string;

	search: MTRContentLauncherClusterContentSearchStruct;

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRContentLauncherClusterLaunchResponseParams extends MTRContentLauncherClusterLauncherResponseParams {

	static alloc(): MTRContentLauncherClusterLaunchResponseParams; // inherited from NSObject

	static new(): MTRContentLauncherClusterLaunchResponseParams; // inherited from NSObject
}

declare class MTRContentLauncherClusterLaunchURLParams extends NSObject implements NSCopying {

	static alloc(): MTRContentLauncherClusterLaunchURLParams; // inherited from NSObject

	static new(): MTRContentLauncherClusterLaunchURLParams; // inherited from NSObject

	brandingInformation: MTRContentLauncherClusterBrandingInformationStruct;

	contentURL: string;

	displayString: string;

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRContentLauncherClusterLauncherResponseParams extends NSObject implements NSCopying {

	static alloc(): MTRContentLauncherClusterLauncherResponseParams; // inherited from NSObject

	static new(): MTRContentLauncherClusterLauncherResponseParams; // inherited from NSObject

	data: string;

	status: number;

	timedInvokeTimeoutMs: number;

	constructor(o: { responseValue: NSDictionary<string, any>; });

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;

	initWithResponseValueError(responseValue: NSDictionary<string, any>): this;
}

declare class MTRContentLauncherClusterParameter extends MTRContentLauncherClusterParameterStruct {

	static alloc(): MTRContentLauncherClusterParameter; // inherited from NSObject

	static new(): MTRContentLauncherClusterParameter; // inherited from NSObject
}

declare class MTRContentLauncherClusterParameterStruct extends NSObject implements NSCopying {

	static alloc(): MTRContentLauncherClusterParameterStruct; // inherited from NSObject

	static new(): MTRContentLauncherClusterParameterStruct; // inherited from NSObject

	externalIDList: NSArray<any>;

	type: number;

	value: string;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRContentLauncherClusterStyleInformation extends MTRContentLauncherClusterStyleInformationStruct {

	static alloc(): MTRContentLauncherClusterStyleInformation; // inherited from NSObject

	static new(): MTRContentLauncherClusterStyleInformation; // inherited from NSObject
}

declare class MTRContentLauncherClusterStyleInformationStruct extends NSObject implements NSCopying {

	static alloc(): MTRContentLauncherClusterStyleInformationStruct; // inherited from NSObject

	static new(): MTRContentLauncherClusterStyleInformationStruct; // inherited from NSObject

	color: string;

	imageURL: string;

	imageUrl: string;

	size: MTRContentLauncherClusterDimensionStruct;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare const enum MTRContentLauncherContentLaunchStatus {

	Success = 0,

	UrlNotAvailable = 1,

	AuthFailed = 2
}

declare const enum MTRContentLauncherFeature {

	ContentSearch = 1,

	URLPlayback = 2,

	AdvancedSeek = 3,

	TextTracks = 4,

	AudioTracks = 5
}

declare const enum MTRContentLauncherMetricType {

	Pixels = 0,

	PIXELS = 0,

	Percentage = 1,

	PERCENTAGE = 1
}

declare const enum MTRContentLauncherParameter {

	Actor = 0,

	Channel = 1,

	Character = 2,

	Director = 3,

	Event = 4,

	Franchise = 5,

	Genre = 6,

	League = 7,

	Popularity = 8,

	Provider = 9,

	Sport = 10,

	SportsTeam = 11,

	Type = 12,

	Video = 13,

	Season = 14,

	Episode = 15,

	Any = 16
}

declare const enum MTRContentLauncherStatus {

	Success = 0,

	URLNotAvailable = 1,

	AuthFailed = 2,

	TextTrackNotAvailable = 3,

	AudioTrackNotAvailable = 4
}

declare const enum MTRContentLauncherSupportedProtocolsBitmap {

	DASH = 1,

	HLS = 2,

	WebRTC = 2
}

declare const enum MTRContentLauncherSupportedStreamingProtocol {

	DASH = 1,

	HLS = 2
}

declare var MTRContextTagKey: string;

declare class MTRControllerFactory extends NSObject {

	static alloc(): MTRControllerFactory; // inherited from NSObject

	static new(): MTRControllerFactory; // inherited from NSObject

	static sharedInstance(): MTRControllerFactory;

	readonly isRunning: boolean;

	shutdown(): void;

	startControllerOnExistingFabric(startupParams: MTRDeviceControllerStartupParams): MTRDeviceController;

	startControllerOnNewFabric(startupParams: MTRDeviceControllerStartupParams): MTRDeviceController;

	startup(startupParams: MTRControllerFactoryParams): boolean;
}

declare class MTRControllerFactoryParams extends MTRDeviceControllerFactoryParams {

	static alloc(): MTRControllerFactoryParams; // inherited from NSObject

	static new(): MTRControllerFactoryParams; // inherited from NSObject

	cdCerts: NSArray<NSData>;

	paaCerts: NSArray<NSData>;

	startServer: boolean;

	readonly storageDelegate: MTRPersistentStorageDelegate;
}

declare var MTRDataKey: string;

declare class MTRDescriptorClusterDeviceType extends MTRDescriptorClusterDeviceTypeStruct {

	static alloc(): MTRDescriptorClusterDeviceType; // inherited from NSObject

	static new(): MTRDescriptorClusterDeviceType; // inherited from NSObject
}

declare class MTRDescriptorClusterDeviceTypeStruct extends NSObject implements NSCopying {

	static alloc(): MTRDescriptorClusterDeviceTypeStruct; // inherited from NSObject

	static new(): MTRDescriptorClusterDeviceTypeStruct; // inherited from NSObject

	deviceType: number;

	revision: number;

	type: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRDevice extends NSObject {

	static alloc(): MTRDevice; // inherited from NSObject

	static deviceWithNodeIDController(nodeID: number, controller: MTRDeviceController): MTRDevice;

	static deviceWithNodeIDDeviceController(nodeID: number, deviceController: MTRDeviceController): MTRDevice;

	static new(): MTRDevice; // inherited from NSObject

	readonly deviceController: MTRDeviceController;

	readonly estimatedStartTime: Date;

	readonly nodeID: number;

	readonly state: MTRDeviceState;

	invokeCommandWithEndpointIDClusterIDCommandIDCommandFieldsExpectedValuesExpectedValueIntervalQueueCompletion(endpointID: number, clusterID: number, commandID: number, commandFields: NSDictionary<string, any>, expectedValues: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueInterval: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<NSDictionary<string, any>>, p2: NSError) => void): void;

	invokeCommandWithEndpointIDClusterIDCommandIDCommandFieldsExpectedValuesExpectedValueIntervalTimedInvokeTimeoutClientQueueCompletion(endpointID: number, clusterID: number, commandID: number, commandFields: any, expectedValues: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueInterval: number, timeout: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<NSDictionary<string, any>>, p2: NSError) => void): void;

	invokeCommandWithEndpointIDClusterIDCommandIDCommandFieldsExpectedValuesExpectedValueIntervalTimedInvokeTimeoutQueueCompletion(endpointID: number, clusterID: number, commandID: number, commandFields: any, expectedValues: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[], expectedValueInterval: number, timeout: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: NSArray<NSDictionary<string, any>>, p2: NSError) => void): void;

	openCommissioningWindowWithDiscriminatorDurationQueueCompletion(discriminator: number, duration: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: MTRSetupPayload, p2: NSError) => void): void;

	openCommissioningWindowWithSetupPasscodeDiscriminatorDurationQueueCompletion(setupPasscode: number, discriminator: number, duration: number, queue: interop.Pointer | interop.Reference<any>, completion: (p1: MTRSetupPayload, p2: NSError) => void): void;

	readAttributeWithEndpointIDClusterIDAttributeIDParams(endpointID: number, clusterID: number, attributeID: number, params: MTRReadParams): NSDictionary<string, any>;

	setDelegateQueue(delegate: MTRDeviceDelegate, queue: interop.Pointer | interop.Reference<any>): void;

	writeAttributeWithEndpointIDClusterIDAttributeIDValueExpectedValueIntervalTimedWriteTimeout(endpointID: number, clusterID: number, attributeID: number, value: any, expectedValueInterval: number, timeout: number): void;
}

interface MTRDeviceAttestationDelegate extends NSObjectProtocol {

	deviceAttestationCompletedForControllerOpaqueDeviceHandleAttestationDeviceInfoError?(controller: MTRDeviceController, opaqueDeviceHandle: interop.Pointer | interop.Reference<any>, attestationDeviceInfo: MTRDeviceAttestationDeviceInfo, error: NSError): void;

	deviceAttestationCompletedForDeviceAttestationDeviceInfoError?(controller: MTRDeviceController, device: interop.Pointer | interop.Reference<any>, attestationDeviceInfo: MTRDeviceAttestationDeviceInfo, error: NSError): void;

	deviceAttestationFailedForControllerOpaqueDeviceHandleError?(controller: MTRDeviceController, opaqueDeviceHandle: interop.Pointer | interop.Reference<any>, error: NSError): void;

	deviceAttestationFailedForDeviceError?(controller: MTRDeviceController, device: interop.Pointer | interop.Reference<any>, error: NSError): void;
}
declare var MTRDeviceAttestationDelegate: {

	prototype: MTRDeviceAttestationDelegate;
};

declare class MTRDeviceAttestationDeviceInfo extends NSObject {

	static alloc(): MTRDeviceAttestationDeviceInfo; // inherited from NSObject

	static new(): MTRDeviceAttestationDeviceInfo; // inherited from NSObject

	readonly basicInformationProductID: number;

	readonly basicInformationVendorID: number;

	readonly certificateDeclaration: NSData;

	readonly dacCertificate: NSData;

	readonly dacPAICertificate: NSData;

	readonly productID: number;

	readonly vendorID: number;
}

declare class MTRDeviceAttestationInfo extends NSObject {

	static alloc(): MTRDeviceAttestationInfo; // inherited from NSObject

	static new(): MTRDeviceAttestationInfo; // inherited from NSObject

	readonly certificationDeclaration: NSData;

	readonly challenge: NSData;

	readonly deviceAttestationCertificate: NSData;

	readonly elementsSignature: NSData;

	readonly elementsTLV: NSData;

	readonly firmwareInfo: NSData;

	readonly nonce: NSData;

	readonly productAttestationIntermediateCertificate: NSData;

	constructor(o: { deviceAttestationChallenge: NSData; nonce: NSData; elementsTLV: NSData; elementsSignature: NSData; deviceAttestationCertificate: NSData; productAttestationIntermediateCertificate: NSData; certificationDeclaration: NSData; firmwareInfo: NSData; });

	initWithDeviceAttestationChallengeNonceElementsTLVElementsSignatureDeviceAttestationCertificateProductAttestationIntermediateCertificateCertificationDeclarationFirmwareInfo(challenge: NSData, nonce: NSData, elementsTLV: NSData, elementsSignature: NSData, deviceAttestationCertificate: NSData, processAttestationIntermediateCertificate: NSData, certificationDeclaration: NSData, firmwareInfo: NSData): this;
}

declare class MTRDeviceController extends NSObject {

	static alloc(): MTRDeviceController; // inherited from NSObject

	static computePASEVerifierForSetupPasscodeIterationsSaltError(setupPasscode: number, iterations: number, salt: NSData): NSData;

	static decodeXPCReadParams(params: NSDictionary<string, any>): MTRReadParams;

	static decodeXPCResponseValues(values: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[]): NSArray<NSDictionary<string, any>>;

	static decodeXPCSubscribeParams(params: NSDictionary<string, any>): MTRSubscribeParams;

	static encodeXPCReadParams(params: MTRReadParams): NSDictionary<string, any>;

	static encodeXPCResponseValues(values: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[]): NSArray<NSDictionary<string, any>>;

	static encodeXPCSubscribeParams(params: MTRSubscribeParams): NSDictionary<string, any>;

	static new(): MTRDeviceController; // inherited from NSObject

	static sharedControllerWithIDXpcConnectBlock(controllerID: any, xpcConnectBlock: () => NSXPCConnection): MTRDeviceController;

	static sharedControllerWithIdXpcConnectBlock(controllerID: any, xpcConnectBlock: () => NSXPCConnection): MTRDeviceController;

	static xpcInterfaceForClientProtocol(): NSXPCInterface;

	static xpcInterfaceForServerProtocol(): NSXPCInterface;

	readonly controllerNodeID: number;

	readonly controllerNodeId: number;

	readonly running: boolean;

	attestationChallengeForDeviceID(deviceID: number): NSData;

	cancelCommissioningForNodeIDError(nodeID: number): boolean;

	commissionDeviceCommissioningParamsError(deviceId: number, commissioningParams: MTRCommissioningParameters): boolean;

	commissionNodeWithIDCommissioningParamsError(nodeID: number, commissioningParams: MTRCommissioningParameters): boolean;

	computePaseVerifierIterationsSalt(setupPincode: number, iterations: number, salt: NSData): NSData;

	continueCommissioningDeviceIgnoreAttestationFailureError(opaqueDeviceHandle: interop.Pointer | interop.Reference<any>, ignoreAttestationFailure: boolean): boolean;

	deviceBeingCommissionedWithNodeIDError(nodeID: number): MTRBaseDevice;

	fetchAttestationChallengeForDeviceId(deviceId: number): NSData;

	getBaseDeviceQueueCompletionHandler(deviceID: number, queue: interop.Pointer | interop.Reference<any>, completionHandler: (p1: MTRBaseDevice, p2: NSError) => void): boolean;

	getDeviceBeingCommissionedError(deviceId: number): MTRBaseDevice;

	openPairingWindowDurationError(deviceID: number, duration: number): boolean;

	openPairingWindowWithPINDurationDiscriminatorSetupPINError(deviceID: number, duration: number, discriminator: number, setupPIN: number): string;

	pairDeviceAddressPortSetupPINCodeError(deviceID: number, address: string, port: number, setupPINCode: number): boolean;

	pairDeviceDiscriminatorSetupPINCodeError(deviceID: number, discriminator: number, setupPINCode: number): boolean;

	pairDeviceOnboardingPayloadError(deviceID: number, onboardingPayload: string): boolean;

	preWarmCommissioningSession(): void;

	setDeviceControllerDelegateQueue(delegate: MTRDeviceControllerDelegate, queue: interop.Pointer | interop.Reference<any>): void;

	setNocChainIssuerQueue(nocChainIssuer: MTRNOCChainIssuer, queue: interop.Pointer | interop.Reference<any>): void;

	setPairingDelegateQueue(delegate: MTRDevicePairingDelegate, queue: interop.Pointer | interop.Reference<any>): void;

	setupCommissioningSessionWithDiscoveredDevicePayloadNewNodeIDError(discoveredDevice: MTRCommissionableBrowserResult, payload: MTRSetupPayload, newNodeID: number): boolean;

	setupCommissioningSessionWithPayloadNewNodeIDError(payload: MTRSetupPayload, newNodeID: number): boolean;

	shutdown(): void;

	startBrowseForCommissionablesQueue(delegate: MTRCommissionableBrowserDelegate, queue: interop.Pointer | interop.Reference<any>): boolean;

	stopBrowseForCommissionables(): boolean;

	stopDevicePairingError(deviceID: number): boolean;
}

interface MTRDeviceControllerClientProtocol extends NSObjectProtocol {

	handleReportWithControllerNodeIdValuesError(controller: any, nodeId: number, values: any, error: NSError): void;
}
declare var MTRDeviceControllerClientProtocol: {

	prototype: MTRDeviceControllerClientProtocol;
};

interface MTRDeviceControllerDelegate extends NSObjectProtocol {

	controllerCommissioningComplete?(controller: MTRDeviceController, error: NSError): void;

	controllerCommissioningCompleteNodeID?(controller: MTRDeviceController, error: NSError, nodeID: number): void;

	controllerCommissioningSessionEstablishmentDone?(controller: MTRDeviceController, error: NSError): void;

	controllerReadCommissioningInfo?(controller: MTRDeviceController, info: MTRProductIdentity): void;

	controllerStatusUpdate?(controller: MTRDeviceController, status: MTRCommissioningStatus): void;
}
declare var MTRDeviceControllerDelegate: {

	prototype: MTRDeviceControllerDelegate;
};

declare class MTRDeviceControllerFactory extends NSObject {

	static alloc(): MTRDeviceControllerFactory; // inherited from NSObject

	static new(): MTRDeviceControllerFactory; // inherited from NSObject

	static sharedInstance(): MTRDeviceControllerFactory;

	readonly knownFabrics: NSArray<MTRFabricInfo>;

	readonly running: boolean;

	createControllerOnExistingFabricError(startupParams: MTRDeviceControllerStartupParams): MTRDeviceController;

	createControllerOnNewFabricError(startupParams: MTRDeviceControllerStartupParams): MTRDeviceController;

	startControllerFactoryError(startupParams: MTRDeviceControllerFactoryParams): boolean;

	stopControllerFactory(): void;
}

declare class MTRDeviceControllerFactoryParams extends NSObject {

	static alloc(): MTRDeviceControllerFactoryParams; // inherited from NSObject

	static new(): MTRDeviceControllerFactoryParams; // inherited from NSObject

	certificationDeclarationCertificates: NSArray<NSData>;

	otaProviderDelegate: MTROTAProviderDelegate;

	port: number;

	productAttestationAuthorityCertificates: NSArray<NSData>;

	shouldStartServer: boolean;

	readonly storage: MTRStorage;

	constructor(o: { storage: MTRStorage; });

	initWithStorage(storage: MTRStorage): this;
}

interface MTRDeviceControllerServerProtocol extends NSObjectProtocol {

	getAnyDeviceControllerWithCompletion(completion: (p1: any, p2: NSError) => void): void;

	getDeviceControllerWithFabricIdCompletion?(fabricId: number, completion: (p1: any, p2: NSError) => void): void;

	invokeCommandWithControllerNodeIdEndpointIdClusterIdCommandIdFieldsTimedInvokeTimeoutCompletion(controller: any, nodeId: number, endpointId: number, clusterId: number, commandId: number, fields: any, timeoutMs: number, completion: (p1: any, p2: NSError) => void): void;

	readAttributeCacheWithControllerNodeIdEndpointIdClusterIdAttributeIdCompletion(controller: any, nodeId: number, endpointId: number, clusterId: number, attributeId: number, completion: (p1: any, p2: NSError) => void): void;

	readAttributeWithControllerNodeIdEndpointIdClusterIdAttributeIdParamsCompletion(controller: any, nodeId: number, endpointId: number, clusterId: number, attributeId: number, params: NSDictionary<string, any>, completion: (p1: any, p2: NSError) => void): void;

	stopReportsWithControllerNodeIdCompletion(controller: any, nodeId: number, completion: () => void): void;

	subscribeAttributeWithControllerNodeIdEndpointIdClusterIdAttributeIdMinIntervalMaxIntervalParamsEstablishedHandler(controller: any, nodeId: number, endpointId: number, clusterId: number, attributeId: number, minInterval: number, maxInterval: number, params: NSDictionary<string, any>, establishedHandler: () => void): void;

	subscribeWithControllerNodeIdMinIntervalMaxIntervalParamsShouldCacheCompletion(controller: any, nodeId: number, minInterval: number, maxInterval: number, params: NSDictionary<string, any>, shouldCache: boolean, completion: (p1: NSError) => void): void;

	writeAttributeWithControllerNodeIdEndpointIdClusterIdAttributeIdValueTimedWriteTimeoutCompletion(controller: any, nodeId: number, endpointId: number, clusterId: number, attributeId: number, value: any, timeoutMs: number, completion: (p1: any, p2: NSError) => void): void;
}
declare var MTRDeviceControllerServerProtocol: {

	prototype: MTRDeviceControllerServerProtocol;
};

declare class MTRDeviceControllerStartupParams extends NSObject {

	static alloc(): MTRDeviceControllerStartupParams; // inherited from NSObject

	static new(): MTRDeviceControllerStartupParams; // inherited from NSObject

	caseAuthenticatedTags: NSSet<number>;

	readonly fabricID: number;

	readonly fabricId: number;

	intermediateCertificate: NSData;

	readonly ipk: NSData;

	readonly nocSigner: MTRKeypair;

	nodeID: number;

	nodeId: number;

	readonly operationalCertificate: NSData;

	operationalCertificateIssuer: MTROperationalCertificateIssuer;

	operationalKeypair: MTRKeypair;

	rootCertificate: NSData;

	vendorID: number;

	vendorId: number;

	constructor(o: { IPK: NSData; fabricID: number; nocSigner: MTRKeypair; });

	constructor(o: { IPK: NSData; operationalKeypair: MTRKeypair; operationalCertificate: NSData; intermediateCertificate: NSData; rootCertificate: NSData; });

	constructor(o: { operationalKeypair: MTRKeypair; operationalCertificate: NSData; intermediateCertificate: NSData; rootCertificate: NSData; ipk: NSData; });

	constructor(o: { signingKeypair: MTRKeypair; fabricId: number; ipk: NSData; });

	initWithIPKFabricIDNocSigner(ipk: NSData, fabricID: number, nocSigner: MTRKeypair): this;

	initWithIPKOperationalKeypairOperationalCertificateIntermediateCertificateRootCertificate(ipk: NSData, operationalKeypair: MTRKeypair, operationalCertificate: NSData, intermediateCertificate: NSData, rootCertificate: NSData): this;

	initWithOperationalKeypairOperationalCertificateIntermediateCertificateRootCertificateIpk(operationalKeypair: MTRKeypair, operationalCertificate: NSData, intermediateCertificate: NSData, rootCertificate: NSData, ipk: NSData): this;

	initWithSigningKeypairFabricIdIpk(nocSigner: MTRKeypair, fabricId: number, ipk: NSData): this;
}

interface MTRDeviceDelegate extends NSObjectProtocol {

	deviceBecameActive?(device: MTRDevice): void;

	deviceReceivedAttributeReport(device: MTRDevice, attributeReport: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[]): void;

	deviceReceivedEventReport(device: MTRDevice, eventReport: NSArray<NSDictionary<string, any>> | NSDictionary<string, any>[]): void;

	deviceStateChanged(device: MTRDevice, state: MTRDeviceState): void;
}
declare var MTRDeviceDelegate: {

	prototype: MTRDeviceDelegate;
};

interface MTRDevicePairingDelegate extends NSObjectProtocol {

	onCommissioningComplete?(error: NSError): void;

	onPairingComplete?(error: NSError): void;

	onPairingDeleted?(error: NSError): void;

	onStatusUpdate?(status: MTRPairingStatus): void;
}
declare var MTRDevicePairingDelegate: {

	prototype: MTRDevicePairingDelegate;
};

declare const enum MTRDeviceState {

	Unknown = 0,

	Reachable = 1,

	Unreachable = 2
}

declare class MTRDiagnosticLogsClusterRetrieveLogsRequestParams extends NSObject implements NSCopying {

	static alloc(): MTRDiagnosticLogsClusterRetrieveLogsRequestParams; // inherited from NSObject

	static new(): MTRDiagnosticLogsClusterRetrieveLogsRequestParams; // inherited from NSObject

	intent: number;

	requestedProtocol: number;

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	transferFileDesignator: string;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRDiagnosticLogsClusterRetrieveLogsResponseParams extends NSObject implements NSCopying {

	static alloc(): MTRDiagnosticLogsClusterRetrieveLogsResponseParams; // inherited from NSObject

	static new(): MTRDiagnosticLogsClusterRetrieveLogsResponseParams; // inherited from NSObject

	content: NSData;

	logContent: NSData;

	status: number;

	timeSinceBoot: number;

	timeStamp: number;

	timedInvokeTimeoutMs: number;

	utcTimeStamp: number;

	constructor(o: { responseValue: NSDictionary<string, any>; });

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;

	initWithResponseValueError(responseValue: NSDictionary<string, any>): this;
}

declare const enum MTRDiagnosticLogsIntent {

	EndUserSupport = 0,

	NetworkDiag = 1,

	CrashLogs = 2
}

declare const enum MTRDiagnosticLogsLogsIntent {

	EndUserSupport = 0,

	NetworkDiag = 1,

	CrashLogs = 2
}

declare const enum MTRDiagnosticLogsLogsStatus {

	Success = 0,

	Exhausted = 1,

	NoLogs = 2,

	Busy = 3,

	Denied = 4
}

declare const enum MTRDiagnosticLogsLogsTransferProtocol {

	ResponsePayload = 0,

	BDX = 1
}

declare const enum MTRDiagnosticLogsStatus {

	Success = 0,

	Exhausted = 1,

	NoLogs = 2,

	Busy = 3,

	Denied = 4
}

declare const enum MTRDiagnosticLogsTransferProtocol {

	ResponsePayload = 0,

	BDX = 1
}

declare const enum MTRDiscoveryCapabilities {

	Unknown = 0,

	None = 0,

	SoftAP = 1,

	BLE = 2,

	OnNetwork = 4,

	AllMask = 7
}

declare class MTRDistinguishedNameInfo extends NSObject implements NSCopying {

	static alloc(): MTRDistinguishedNameInfo; // inherited from NSObject

	static new(): MTRDistinguishedNameInfo; // inherited from NSObject

	readonly caseAuthenticatedTags: NSSet<number>;

	readonly fabricID: number;

	readonly intermediateCACertificateID: number;

	readonly nodeID: number;

	readonly rootCACertificateID: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare const enum MTRDoorLockAlarmCode {

	LockJammed = 0,

	LockFactoryReset = 1,

	LockRadioPowerCycled = 3,

	WrongCodeEntryLimit = 4,

	FrontEsceutcheonRemoved = 5,

	DoorForcedOpen = 6,

	DoorAjar = 7,

	ForcedUser = 8
}

declare class MTRDoorLockClusterClearCredentialParams extends NSObject implements NSCopying {

	static alloc(): MTRDoorLockClusterClearCredentialParams; // inherited from NSObject

	static new(): MTRDoorLockClusterClearCredentialParams; // inherited from NSObject

	credential: MTRDoorLockClusterCredentialStruct;

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRDoorLockClusterClearHolidayScheduleParams extends NSObject implements NSCopying {

	static alloc(): MTRDoorLockClusterClearHolidayScheduleParams; // inherited from NSObject

	static new(): MTRDoorLockClusterClearHolidayScheduleParams; // inherited from NSObject

	holidayIndex: number;

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRDoorLockClusterClearUserParams extends NSObject implements NSCopying {

	static alloc(): MTRDoorLockClusterClearUserParams; // inherited from NSObject

	static new(): MTRDoorLockClusterClearUserParams; // inherited from NSObject

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	userIndex: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRDoorLockClusterClearWeekDayScheduleParams extends NSObject implements NSCopying {

	static alloc(): MTRDoorLockClusterClearWeekDayScheduleParams; // inherited from NSObject

	static new(): MTRDoorLockClusterClearWeekDayScheduleParams; // inherited from NSObject

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	userIndex: number;

	weekDayIndex: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRDoorLockClusterClearYearDayScheduleParams extends NSObject implements NSCopying {

	static alloc(): MTRDoorLockClusterClearYearDayScheduleParams; // inherited from NSObject

	static new(): MTRDoorLockClusterClearYearDayScheduleParams; // inherited from NSObject

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	userIndex: number;

	yearDayIndex: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRDoorLockClusterCredentialStruct extends NSObject implements NSCopying {

	static alloc(): MTRDoorLockClusterCredentialStruct; // inherited from NSObject

	static new(): MTRDoorLockClusterCredentialStruct; // inherited from NSObject

	credentialIndex: number;

	credentialType: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRDoorLockClusterDlCredential extends MTRDoorLockClusterCredentialStruct {

	static alloc(): MTRDoorLockClusterDlCredential; // inherited from NSObject

	static new(): MTRDoorLockClusterDlCredential; // inherited from NSObject
}

declare class MTRDoorLockClusterDoorLockAlarmEvent extends NSObject implements NSCopying {

	static alloc(): MTRDoorLockClusterDoorLockAlarmEvent; // inherited from NSObject

	static new(): MTRDoorLockClusterDoorLockAlarmEvent; // inherited from NSObject

	alarmCode: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRDoorLockClusterDoorStateChangeEvent extends NSObject implements NSCopying {

	static alloc(): MTRDoorLockClusterDoorStateChangeEvent; // inherited from NSObject

	static new(): MTRDoorLockClusterDoorStateChangeEvent; // inherited from NSObject

	doorState: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRDoorLockClusterGetCredentialStatusParams extends NSObject implements NSCopying {

	static alloc(): MTRDoorLockClusterGetCredentialStatusParams; // inherited from NSObject

	static new(): MTRDoorLockClusterGetCredentialStatusParams; // inherited from NSObject

	credential: MTRDoorLockClusterCredentialStruct;

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRDoorLockClusterGetCredentialStatusResponseParams extends NSObject implements NSCopying {

	static alloc(): MTRDoorLockClusterGetCredentialStatusResponseParams; // inherited from NSObject

	static new(): MTRDoorLockClusterGetCredentialStatusResponseParams; // inherited from NSObject

	creatorFabricIndex: number;

	credentialExists: number;

	lastModifiedFabricIndex: number;

	nextCredentialIndex: number;

	timedInvokeTimeoutMs: number;

	userIndex: number;

	constructor(o: { responseValue: NSDictionary<string, any>; });

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;

	initWithResponseValueError(responseValue: NSDictionary<string, any>): this;
}

declare class MTRDoorLockClusterGetHolidayScheduleParams extends NSObject implements NSCopying {

	static alloc(): MTRDoorLockClusterGetHolidayScheduleParams; // inherited from NSObject

	static new(): MTRDoorLockClusterGetHolidayScheduleParams; // inherited from NSObject

	holidayIndex: number;

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRDoorLockClusterGetHolidayScheduleResponseParams extends NSObject implements NSCopying {

	static alloc(): MTRDoorLockClusterGetHolidayScheduleResponseParams; // inherited from NSObject

	static new(): MTRDoorLockClusterGetHolidayScheduleResponseParams; // inherited from NSObject

	holidayIndex: number;

	localEndTime: number;

	localStartTime: number;

	operatingMode: number;

	status: number;

	timedInvokeTimeoutMs: number;

	constructor(o: { responseValue: NSDictionary<string, any>; });

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;

	initWithResponseValueError(responseValue: NSDictionary<string, any>): this;
}

declare class MTRDoorLockClusterGetUserParams extends NSObject implements NSCopying {

	static alloc(): MTRDoorLockClusterGetUserParams; // inherited from NSObject

	static new(): MTRDoorLockClusterGetUserParams; // inherited from NSObject

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	userIndex: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRDoorLockClusterGetUserResponseParams extends NSObject implements NSCopying {

	static alloc(): MTRDoorLockClusterGetUserResponseParams; // inherited from NSObject

	static new(): MTRDoorLockClusterGetUserResponseParams; // inherited from NSObject

	creatorFabricIndex: number;

	credentialRule: number;

	credentials: NSArray<any>;

	lastModifiedFabricIndex: number;

	nextUserIndex: number;

	timedInvokeTimeoutMs: number;

	userIndex: number;

	userName: string;

	userStatus: number;

	userType: number;

	userUniqueID: number;

	userUniqueId: number;

	constructor(o: { responseValue: NSDictionary<string, any>; });

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;

	initWithResponseValueError(responseValue: NSDictionary<string, any>): this;
}

declare class MTRDoorLockClusterGetWeekDayScheduleParams extends NSObject implements NSCopying {

	static alloc(): MTRDoorLockClusterGetWeekDayScheduleParams; // inherited from NSObject

	static new(): MTRDoorLockClusterGetWeekDayScheduleParams; // inherited from NSObject

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	userIndex: number;

	weekDayIndex: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRDoorLockClusterGetWeekDayScheduleResponseParams extends NSObject implements NSCopying {

	static alloc(): MTRDoorLockClusterGetWeekDayScheduleResponseParams; // inherited from NSObject

	static new(): MTRDoorLockClusterGetWeekDayScheduleResponseParams; // inherited from NSObject

	daysMask: number;

	endHour: number;

	endMinute: number;

	startHour: number;

	startMinute: number;

	status: number;

	timedInvokeTimeoutMs: number;

	userIndex: number;

	weekDayIndex: number;

	constructor(o: { responseValue: NSDictionary<string, any>; });

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;

	initWithResponseValueError(responseValue: NSDictionary<string, any>): this;
}

declare class MTRDoorLockClusterGetYearDayScheduleParams extends NSObject implements NSCopying {

	static alloc(): MTRDoorLockClusterGetYearDayScheduleParams; // inherited from NSObject

	static new(): MTRDoorLockClusterGetYearDayScheduleParams; // inherited from NSObject

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	userIndex: number;

	yearDayIndex: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRDoorLockClusterGetYearDayScheduleResponseParams extends NSObject implements NSCopying {

	static alloc(): MTRDoorLockClusterGetYearDayScheduleResponseParams; // inherited from NSObject

	static new(): MTRDoorLockClusterGetYearDayScheduleResponseParams; // inherited from NSObject

	localEndTime: number;

	localStartTime: number;

	status: number;

	timedInvokeTimeoutMs: number;

	userIndex: number;

	yearDayIndex: number;

	constructor(o: { responseValue: NSDictionary<string, any>; });

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;

	initWithResponseValueError(responseValue: NSDictionary<string, any>): this;
}

declare class MTRDoorLockClusterLockDoorParams extends NSObject implements NSCopying {

	static alloc(): MTRDoorLockClusterLockDoorParams; // inherited from NSObject

	static new(): MTRDoorLockClusterLockDoorParams; // inherited from NSObject

	pinCode: NSData;

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRDoorLockClusterLockOperationErrorEvent extends NSObject implements NSCopying {

	static alloc(): MTRDoorLockClusterLockOperationErrorEvent; // inherited from NSObject

	static new(): MTRDoorLockClusterLockOperationErrorEvent; // inherited from NSObject

	credentials: NSArray<any>;

	fabricIndex: number;

	lockOperationType: number;

	operationError: number;

	operationSource: number;

	sourceNode: number;

	userIndex: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRDoorLockClusterLockOperationEvent extends NSObject implements NSCopying {

	static alloc(): MTRDoorLockClusterLockOperationEvent; // inherited from NSObject

	static new(): MTRDoorLockClusterLockOperationEvent; // inherited from NSObject

	credentials: NSArray<any>;

	fabricIndex: number;

	lockOperationType: number;

	operationSource: number;

	sourceNode: number;

	userIndex: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRDoorLockClusterLockUserChangeEvent extends NSObject implements NSCopying {

	static alloc(): MTRDoorLockClusterLockUserChangeEvent; // inherited from NSObject

	static new(): MTRDoorLockClusterLockUserChangeEvent; // inherited from NSObject

	dataIndex: number;

	dataOperationType: number;

	fabricIndex: number;

	lockDataType: number;

	operationSource: number;

	sourceNode: number;

	userIndex: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRDoorLockClusterSetCredentialParams extends NSObject implements NSCopying {

	static alloc(): MTRDoorLockClusterSetCredentialParams; // inherited from NSObject

	static new(): MTRDoorLockClusterSetCredentialParams; // inherited from NSObject

	credential: MTRDoorLockClusterCredentialStruct;

	credentialData: NSData;

	operationType: number;

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	userIndex: number;

	userStatus: number;

	userType: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRDoorLockClusterSetCredentialResponseParams extends NSObject implements NSCopying {

	static alloc(): MTRDoorLockClusterSetCredentialResponseParams; // inherited from NSObject

	static new(): MTRDoorLockClusterSetCredentialResponseParams; // inherited from NSObject

	nextCredentialIndex: number;

	status: number;

	timedInvokeTimeoutMs: number;

	userIndex: number;

	constructor(o: { responseValue: NSDictionary<string, any>; });

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;

	initWithResponseValueError(responseValue: NSDictionary<string, any>): this;
}

declare class MTRDoorLockClusterSetHolidayScheduleParams extends NSObject implements NSCopying {

	static alloc(): MTRDoorLockClusterSetHolidayScheduleParams; // inherited from NSObject

	static new(): MTRDoorLockClusterSetHolidayScheduleParams; // inherited from NSObject

	holidayIndex: number;

	localEndTime: number;

	localStartTime: number;

	operatingMode: number;

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRDoorLockClusterSetUserParams extends NSObject implements NSCopying {

	static alloc(): MTRDoorLockClusterSetUserParams; // inherited from NSObject

	static new(): MTRDoorLockClusterSetUserParams; // inherited from NSObject

	credentialRule: number;

	operationType: number;

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	userIndex: number;

	userName: string;

	userStatus: number;

	userType: number;

	userUniqueID: number;

	userUniqueId: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRDoorLockClusterSetWeekDayScheduleParams extends NSObject implements NSCopying {

	static alloc(): MTRDoorLockClusterSetWeekDayScheduleParams; // inherited from NSObject

	static new(): MTRDoorLockClusterSetWeekDayScheduleParams; // inherited from NSObject

	daysMask: number;

	endHour: number;

	endMinute: number;

	serverSideProcessingTimeout: number;

	startHour: number;

	startMinute: number;

	timedInvokeTimeoutMs: number;

	userIndex: number;

	weekDayIndex: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRDoorLockClusterSetYearDayScheduleParams extends NSObject implements NSCopying {

	static alloc(): MTRDoorLockClusterSetYearDayScheduleParams; // inherited from NSObject

	static new(): MTRDoorLockClusterSetYearDayScheduleParams; // inherited from NSObject

	localEndTime: number;

	localStartTime: number;

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	userIndex: number;

	yearDayIndex: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRDoorLockClusterUnlockDoorParams extends NSObject implements NSCopying {

	static alloc(): MTRDoorLockClusterUnlockDoorParams; // inherited from NSObject

	static new(): MTRDoorLockClusterUnlockDoorParams; // inherited from NSObject

	pinCode: NSData;

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRDoorLockClusterUnlockWithTimeoutParams extends NSObject implements NSCopying {

	static alloc(): MTRDoorLockClusterUnlockWithTimeoutParams; // inherited from NSObject

	static new(): MTRDoorLockClusterUnlockWithTimeoutParams; // inherited from NSObject

	pinCode: NSData;

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	timeout: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare const enum MTRDoorLockCredentialRule {

	Single = 0,

	Dual = 1,

	Tri = 2
}

declare const enum MTRDoorLockCredentialType {

	ProgrammingPIN = 0,

	PIN = 1,

	RFID = 2,

	Fingerprint = 3,

	FingerVein = 4,

	Face = 5
}

declare const enum MTRDoorLockDataOperationType {

	Add = 0,

	Clear = 1,

	Modify = 2
}

declare const enum MTRDoorLockDayOfWeek {

	Sunday = 1,

	Monday = 2,

	Tuesday = 4,

	Wednesday = 8,

	Thursday = 16,

	Friday = 32,

	Saturday = 64
}

declare const enum MTRDoorLockDaysMaskMap {

	Sunday = 1,

	Monday = 2,

	Tuesday = 4,

	Wednesday = 8,

	Thursday = 16,

	Friday = 32,

	Saturday = 64
}

declare const enum MTRDoorLockDlAlarmCode {

	LockJammed = 0,

	LockFactoryReset = 1,

	LockRadioPowerCycled = 3,

	WrongCodeEntryLimit = 4,

	FrontEsceutcheonRemoved = 5,

	DoorForcedOpen = 6,

	DoorAjar = 7,

	ForcedUser = 8
}

declare const enum MTRDoorLockDlCredentialRule {

	Single = 0,

	Tri = 2
}

declare const enum MTRDoorLockDlCredentialRuleMask {

	Single = 1,

	Dual = 2,

	Tri = 4
}

declare const enum MTRDoorLockDlCredentialRulesSupport {

	Single = 1,

	Dual = 2,

	Tri = 4
}

declare const enum MTRDoorLockDlCredentialType {

	ProgrammingPIN = 0,

	PIN = 1,

	RFID = 2,

	Fingerprint = 3,

	FingerVein = 4,

	Face = 5
}

declare const enum MTRDoorLockDlDataOperationType {

	Add = 0,

	Clear = 1,

	Modify = 2
}

declare const enum MTRDoorLockDlDaysMaskMap {

	Sunday = 1,

	Monday = 2,

	Tuesday = 4,

	Wednesday = 8,

	Thursday = 16,

	Friday = 32,

	Saturday = 64
}

declare const enum MTRDoorLockDlDefaultConfigurationRegister {

	EnableLocalProgrammingEnabled = 1,

	KeypadInterfaceDefaultAccessEnabled = 2,

	RemoteInterfaceDefaultAccessIsEnabled = 4,

	SoundEnabled = 32,

	AutoRelockTimeSet = 64,

	LEDSettingsSet = 128
}

declare const enum MTRDoorLockDlDoorState {

	DoorOpen = 0,

	DoorClosed = 1,

	DoorJammed = 2,

	DoorForcedOpen = 3,

	DoorUnspecifiedError = 4,

	DoorAjar = 5
}

declare const enum MTRDoorLockDlKeypadOperationEventMask {

	Unknown = 1,

	Lock = 2,

	Unlock = 4,

	LockInvalidPIN = 8,

	LockInvalidSchedule = 16,

	UnlockInvalidCode = 32,

	UnlockInvalidSchedule = 64,

	NonAccessUserOpEvent = 128
}

declare const enum MTRDoorLockDlKeypadProgrammingEventMask {

	Unknown = 1,

	ProgrammingPINChanged = 2,

	PINAdded = 4,

	PINCleared = 8,

	PINChanged = 16
}

declare const enum MTRDoorLockDlLocalProgrammingFeatures {

	AddUsersCredentialsSchedulesLocally = 1,

	ModifyUsersCredentialsSchedulesLocally = 2,

	ClearUsersCredentialsSchedulesLocally = 4,

	AdjustLockSettingsLocally = 8
}

declare const enum MTRDoorLockDlLockDataType {

	Unspecified = 0,

	ProgrammingCode = 1,

	UserIndex = 2,

	WeekDaySchedule = 3,

	YearDaySchedule = 4,

	HolidaySchedule = 5,

	PIN = 6,

	RFID = 7,

	Fingerprint = 8
}

declare const enum MTRDoorLockDlLockOperationType {

	Lock = 0,

	Unlock = 1,

	NonAccessUserEvent = 2,

	ForcedUserEvent = 3
}

declare const enum MTRDoorLockDlLockState {

	NotFullyLocked = 0,

	Locked = 1,

	Unlocked = 2,

	Unlatched = 3
}

declare const enum MTRDoorLockDlLockType {

	DeadBolt = 0,

	Magnetic = 1,

	Other = 2,

	Mortise = 3,

	Rim = 4,

	LatchBolt = 5,

	CylindricalLock = 6,

	TubularLock = 7,

	InterconnectedLock = 8,

	DeadLatch = 9,

	DoorFurniture = 10,

	Eurocylinder = 11
}

declare const enum MTRDoorLockDlManualOperationEventMask {

	Unknown = 1,

	ThumbturnLock = 2,

	ThumbturnUnlock = 4,

	OneTouchLock = 8,

	KeyLock = 16,

	KeyUnlock = 32,

	AutoLock = 64,

	ScheduleLock = 128,

	ScheduleUnlock = 256,

	ManualLock = 512,

	ManualUnlock = 1024
}

declare const enum MTRDoorLockDlOperatingMode {

	Normal = 0,

	Vacation = 1,

	Privacy = 2,

	NoRemoteLockUnlock = 3,

	Passage = 4
}

declare const enum MTRDoorLockDlOperationError {

	Unspecified = 0,

	InvalidCredential = 1,

	DisabledUserDenied = 2,

	Restricted = 3,

	InsufficientBattery = 4
}

declare const enum MTRDoorLockDlOperationSource {

	Unspecified = 0,

	Manual = 1,

	ProprietaryRemote = 2,

	Keypad = 3,

	Auto = 4,

	Button = 5,

	Schedule = 6,

	Remote = 7,

	RFID = 8,

	Biometric = 9
}

declare const enum MTRDoorLockDlRFIDOperationEventMask {

	Unknown = 1,

	Lock = 2,

	Unlock = 4,

	LockInvalidRFID = 8,

	LockInvalidSchedule = 16,

	UnlockInvalidRFID = 32,

	UnlockInvalidSchedule = 64
}

declare const enum MTRDoorLockDlRFIDProgrammingEventMask {

	Unknown = 1,

	RFIDCodeAdded = 32,

	RFIDCodeCleared = 64
}

declare const enum MTRDoorLockDlRemoteOperationEventMask {

	Unknown = 1,

	Lock = 2,

	Unlock = 4,

	LockInvalidCode = 8,

	LockInvalidSchedule = 16,

	UnlockInvalidCode = 32,

	UnlockInvalidSchedule = 64
}

declare const enum MTRDoorLockDlRemoteProgrammingEventMask {

	Unknown = 1,

	ProgrammingPINChanged = 2,

	PINAdded = 4,

	PINCleared = 8,

	PINChanged = 16,

	RFIDCodeAdded = 32,

	RFIDCodeCleared = 64
}

declare const enum MTRDoorLockDlStatus {

	Success = 0,

	Failure = 1,

	Duplicate = 2,

	Occupied = 3,

	InvalidField = 133,

	ResourceExhausted = 137,

	NotFound = 139
}

declare const enum MTRDoorLockDlSupportedOperatingModes {

	Normal = 1,

	Vacation = 2,

	Privacy = 4,

	NoRemoteLockUnlock = 8,

	Passage = 16
}

declare const enum MTRDoorLockDlUserStatus {

	Available = 0,

	OccupiedEnabled = 1,

	OccupiedDisabled = 3
}

declare const enum MTRDoorLockDlUserType {

	UnrestrictedUser = 0,

	YearDayScheduleUser = 1,

	WeekDayScheduleUser = 2,

	ProgrammingUser = 3,

	NonAccessUser = 4,

	ForcedUser = 5,

	DisposableUser = 6,

	ExpiringUser = 7,

	ScheduleRestrictedUser = 8,

	RemoteOnlyUser = 9
}

declare const enum MTRDoorLockDoorState {

	DoorOpen = 0,

	DoorClosed = 1,

	DoorJammed = 2,

	DoorForcedOpen = 3,

	DoorUnspecifiedError = 4,

	DoorAjar = 5
}

declare const enum MTRDoorLockFeature {

	PINCredential = 1,

	PINCredentials = 1,

	RFIDCredential = 2,

	RFIDCredentials = 2,

	FingerCredentials = 4,

	Logging = 8,

	WeekDayAccessSchedules = 16,

	WeekDaySchedules = 16,

	DoorPositionSensor = 32,

	FaceCredentials = 64,

	CredentialsOverTheAirAccess = 128,

	CredentialsOTA = 128,

	User = 256,

	UsersManagement = 256,

	Notification = 512,

	Notifications = 512,

	YearDayAccessSchedules = 1024,

	YearDaySchedules = 1024,

	HolidaySchedules = 2048,

	Unbolt = 4096
}

declare const enum MTRDoorLockLockDataType {

	Unspecified = 0,

	ProgrammingCode = 1,

	UserIndex = 2,

	WeekDaySchedule = 3,

	YearDaySchedule = 4,

	HolidaySchedule = 5,

	PIN = 6,

	RFID = 7,

	Fingerprint = 8,

	FingerVein = 9,

	Face = 10
}

declare const enum MTRDoorLockLockOperationType {

	Lock = 0,

	Unlock = 1,

	NonAccessUserEvent = 2,

	ForcedUserEvent = 3,

	Unlatch = 4
}

declare const enum MTRDoorLockOperatingMode {

	Normal = 0,

	Vacation = 1,

	Privacy = 2,

	NoRemoteLockUnlock = 3,

	Passage = 4
}

declare const enum MTRDoorLockOperationError {

	Unspecified = 0,

	InvalidCredential = 1,

	DisabledUserDenied = 2,

	Restricted = 3,

	InsufficientBattery = 4
}

declare const enum MTRDoorLockOperationEventCode {

	UnknownOrMfgSpecific = 0,

	Lock = 1,

	Unlock = 2,

	LockInvalidPinOrId = 3,

	LockInvalidSchedule = 4,

	UnlockInvalidPinOrId = 5,

	UnlockInvalidSchedule = 6,

	OneTouchLock = 7,

	KeyLock = 8,

	KeyUnlock = 9,

	AutoLock = 10,

	ScheduleLock = 11,

	ScheduleUnlock = 12,

	ManualLock = 13,

	ManualUnlock = 14
}

declare const enum MTRDoorLockOperationSource {

	Unspecified = 0,

	Manual = 1,

	ProprietaryRemote = 2,

	Keypad = 3,

	Auto = 4,

	Button = 5,

	Schedule = 6,

	Remote = 7,

	RFID = 8,

	Biometric = 9
}

declare const enum MTRDoorLockProgrammingEventCode {

	UnknownOrMfgSpecific = 0,

	MasterCodeChanged = 1,

	PinAdded = 2,

	PinDeleted = 3,

	PinChanged = 4,

	IdAdded = 5,

	IdDeleted = 6
}

declare const enum MTRDoorLockSetPinOrIdStatus {

	Success = 0,

	GeneralFailure = 1,

	MemoryFull = 2,

	DuplicateCodeError = 3
}

declare const enum MTRDoorLockUserStatus {

	Available = 0,

	OccupiedEnabled = 1,

	OccupiedDisabled = 3,

	NotSupported = 255
}

declare const enum MTRDoorLockUserType {

	UnrestrictedUser = 0,

	Unrestricted = 0,

	YearDayScheduleUser = 1,

	WeekDayScheduleUser = 2,

	ProgrammingUser = 3,

	MasterUser = 3,

	NonAccessUser = 4,

	ForcedUser = 5,

	DisposableUser = 6,

	ExpiringUser = 7,

	ScheduleRestrictedUser = 8,

	RemoteOnlyUser = 9,

	NotSupported = 255
}

declare var MTRDoubleValueType: string;

declare class MTRElectricalMeasurementClusterGetMeasurementProfileCommandParams extends NSObject implements NSCopying {

	static alloc(): MTRElectricalMeasurementClusterGetMeasurementProfileCommandParams; // inherited from NSObject

	static new(): MTRElectricalMeasurementClusterGetMeasurementProfileCommandParams; // inherited from NSObject

	attributeId: number;

	numberOfIntervals: number;

	serverSideProcessingTimeout: number;

	startTime: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRElectricalMeasurementClusterGetMeasurementProfileResponseCommandParams extends NSObject implements NSCopying {

	static alloc(): MTRElectricalMeasurementClusterGetMeasurementProfileResponseCommandParams; // inherited from NSObject

	static new(): MTRElectricalMeasurementClusterGetMeasurementProfileResponseCommandParams; // inherited from NSObject

	attributeId: number;

	intervals: NSArray<any>;

	numberOfIntervalsDelivered: number;

	profileIntervalPeriod: number;

	startTime: number;

	status: number;

	timedInvokeTimeoutMs: number;

	constructor(o: { responseValue: NSDictionary<string, any>; });

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;

	initWithResponseValueError(responseValue: NSDictionary<string, any>): this;
}

declare class MTRElectricalMeasurementClusterGetProfileInfoCommandParams extends NSObject implements NSCopying {

	static alloc(): MTRElectricalMeasurementClusterGetProfileInfoCommandParams; // inherited from NSObject

	static new(): MTRElectricalMeasurementClusterGetProfileInfoCommandParams; // inherited from NSObject

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRElectricalMeasurementClusterGetProfileInfoResponseCommandParams extends NSObject implements NSCopying {

	static alloc(): MTRElectricalMeasurementClusterGetProfileInfoResponseCommandParams; // inherited from NSObject

	static new(): MTRElectricalMeasurementClusterGetProfileInfoResponseCommandParams; // inherited from NSObject

	listOfAttributes: NSArray<any>;

	maxNumberOfIntervals: number;

	profileCount: number;

	profileIntervalPeriod: number;

	timedInvokeTimeoutMs: number;

	constructor(o: { responseValue: NSDictionary<string, any>; });

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;

	initWithResponseValueError(responseValue: NSDictionary<string, any>): this;
}

declare const enum MTRErrorCode {

	GeneralError = 1,

	InvalidStringLength = 2,

	InvalidIntegerValue = 3,

	InvalidArgument = 4,

	InvalidMessageLength = 5,

	InvalidState = 6,

	WrongAddressType = 7,

	IntegrityCheckFailed = 8,

	Timeout = 9,

	BufferTooSmall = 10,

	FabricExists = 11,

	UnknownSchema = 12,

	SchemaMismatch = 13,

	TLVDecodeFailed = 14,

	DNSSDUnauthorized = 15
}

declare var MTRErrorDomain: string;

declare var MTRErrorKey: string;

declare class MTREthernetNetworkDiagnosticsClusterResetCountsParams extends NSObject implements NSCopying {

	static alloc(): MTREthernetNetworkDiagnosticsClusterResetCountsParams; // inherited from NSObject

	static new(): MTREthernetNetworkDiagnosticsClusterResetCountsParams; // inherited from NSObject

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare const enum MTREthernetNetworkDiagnosticsFeature {

	PacketCounts = 1,

	ErrorCounts = 2
}

declare const enum MTREthernetNetworkDiagnosticsPHYRate {

	Rate10M = 0,

	Rate100M = 1,

	Rate1G = 2,

	Rate25G = 3,

	Rate5G = 4,

	Rate10G = 5,

	Rate40G = 6,

	Rate100G = 7,

	Rate200G = 8,

	Rate400G = 9
}

declare const enum MTREthernetNetworkDiagnosticsPHYRateType {

	Type10M = 0,

	Type100M = 1,

	Type1000M = 2,

	Type25G = 3,

	Type5G = 4,

	Type10G = 5,

	Type40G = 6,

	Type100G = 7,

	Type200G = 8,

	Type400G = 9
}

declare const enum MTREventIDType {

	ClusterAccessControlEventAccessControlEntryChangedID = 0,

	ClusterAccessControlEventAccessControlExtensionChangedID = 1,

	EventIDTypeClusterAccessControlEventAccessControlEntryChangedID = 0,

	EventIDTypeClusterAccessControlEventAccessControlExtensionChangedID = 1,

	ClusterActionsEventStateChangedID = 0,

	ClusterActionsEventActionFailedID = 1,

	EventIDTypeClusterActionsEventStateChangedID = 0,

	EventIDTypeClusterActionsEventActionFailedID = 1,

	ClusterBasicEventStartUpID = 0,

	ClusterBasicEventShutDownID = 1,

	ClusterBasicEventLeaveID = 2,

	ClusterBasicEventReachableChangedID = 3,

	EventIDTypeClusterBasicInformationEventStartUpID = 0,

	EventIDTypeClusterBasicInformationEventShutDownID = 1,

	EventIDTypeClusterBasicInformationEventLeaveID = 2,

	EventIDTypeClusterBasicInformationEventReachableChangedID = 3,

	ClusterOtaSoftwareUpdateRequestorEventStateTransitionID = 0,

	ClusterOtaSoftwareUpdateRequestorEventVersionAppliedID = 1,

	ClusterOtaSoftwareUpdateRequestorEventDownloadErrorID = 2,

	EventIDTypeClusterOTASoftwareUpdateRequestorEventStateTransitionID = 0,

	EventIDTypeClusterOTASoftwareUpdateRequestorEventVersionAppliedID = 1,

	EventIDTypeClusterOTASoftwareUpdateRequestorEventDownloadErrorID = 2,

	EventIDTypeClusterPowerSourceEventWiredFaultChangeID = 0,

	EventIDTypeClusterPowerSourceEventBatFaultChangeID = 1,

	EventIDTypeClusterPowerSourceEventBatChargeFaultChangeID = 2,

	ClusterGeneralDiagnosticsEventHardwareFaultChangeID = 0,

	ClusterGeneralDiagnosticsEventRadioFaultChangeID = 1,

	ClusterGeneralDiagnosticsEventNetworkFaultChangeID = 2,

	ClusterGeneralDiagnosticsEventBootReasonID = 3,

	EventIDTypeClusterGeneralDiagnosticsEventHardwareFaultChangeID = 0,

	EventIDTypeClusterGeneralDiagnosticsEventRadioFaultChangeID = 1,

	EventIDTypeClusterGeneralDiagnosticsEventNetworkFaultChangeID = 2,

	EventIDTypeClusterGeneralDiagnosticsEventBootReasonID = 3,

	ClusterSoftwareDiagnosticsEventSoftwareFaultID = 0,

	EventIDTypeClusterSoftwareDiagnosticsEventSoftwareFaultID = 0,

	ClusterThreadNetworkDiagnosticsEventConnectionStatusID = 0,

	ClusterThreadNetworkDiagnosticsEventNetworkFaultChangeID = 1,

	EventIDTypeClusterThreadNetworkDiagnosticsEventConnectionStatusID = 0,

	EventIDTypeClusterThreadNetworkDiagnosticsEventNetworkFaultChangeID = 1,

	ClusterWiFiNetworkDiagnosticsEventDisconnectionID = 0,

	ClusterWiFiNetworkDiagnosticsEventAssociationFailureID = 1,

	ClusterWiFiNetworkDiagnosticsEventConnectionStatusID = 2,

	EventIDTypeClusterWiFiNetworkDiagnosticsEventDisconnectionID = 0,

	EventIDTypeClusterWiFiNetworkDiagnosticsEventAssociationFailureID = 1,

	EventIDTypeClusterWiFiNetworkDiagnosticsEventConnectionStatusID = 2,

	EventIDTypeClusterTimeSynchronizationEventDSTTableEmptyID = 0,

	EventIDTypeClusterTimeSynchronizationEventDSTStatusID = 1,

	EventIDTypeClusterTimeSynchronizationEventTimeZoneStatusID = 2,

	EventIDTypeClusterTimeSynchronizationEventTimeFailureID = 3,

	EventIDTypeClusterTimeSynchronizationEventMissingTrustedTimeSourceID = 4,

	ClusterBridgedDeviceBasicEventStartUpID = 0,

	ClusterBridgedDeviceBasicEventShutDownID = 1,

	ClusterBridgedDeviceBasicEventLeaveID = 2,

	ClusterBridgedDeviceBasicEventReachableChangedID = 3,

	EventIDTypeClusterBridgedDeviceBasicInformationEventStartUpID = 0,

	EventIDTypeClusterBridgedDeviceBasicInformationEventShutDownID = 1,

	EventIDTypeClusterBridgedDeviceBasicInformationEventLeaveID = 2,

	EventIDTypeClusterBridgedDeviceBasicInformationEventReachableChangedID = 3,

	ClusterSwitchEventSwitchLatchedID = 0,

	ClusterSwitchEventInitialPressID = 1,

	ClusterSwitchEventLongPressID = 2,

	ClusterSwitchEventShortReleaseID = 3,

	ClusterSwitchEventLongReleaseID = 4,

	ClusterSwitchEventMultiPressOngoingID = 5,

	ClusterSwitchEventMultiPressCompleteID = 6,

	EventIDTypeClusterSwitchEventSwitchLatchedID = 0,

	EventIDTypeClusterSwitchEventInitialPressID = 1,

	EventIDTypeClusterSwitchEventLongPressID = 2,

	EventIDTypeClusterSwitchEventShortReleaseID = 3,

	EventIDTypeClusterSwitchEventLongReleaseID = 4,

	EventIDTypeClusterSwitchEventMultiPressOngoingID = 5,

	EventIDTypeClusterSwitchEventMultiPressCompleteID = 6,

	ClusterBooleanStateEventStateChangeID = 0,

	EventIDTypeClusterBooleanStateEventStateChangeID = 0,

	EventIDTypeClusterOvenCavityOperationalStateEventOperationalErrorID = 0,

	EventIDTypeClusterOvenCavityOperationalStateEventOperationCompletionID = 1,

	EventIDTypeClusterRefrigeratorAlarmEventNotifyID = 0,

	EventIDTypeClusterSmokeCOAlarmEventSmokeAlarmID = 0,

	EventIDTypeClusterSmokeCOAlarmEventCOAlarmID = 1,

	EventIDTypeClusterSmokeCOAlarmEventLowBatteryID = 2,

	EventIDTypeClusterSmokeCOAlarmEventHardwareFaultID = 3,

	EventIDTypeClusterSmokeCOAlarmEventEndOfServiceID = 4,

	EventIDTypeClusterSmokeCOAlarmEventSelfTestCompleteID = 5,

	EventIDTypeClusterSmokeCOAlarmEventAlarmMutedID = 6,

	EventIDTypeClusterSmokeCOAlarmEventMuteEndedID = 7,

	EventIDTypeClusterSmokeCOAlarmEventInterconnectSmokeAlarmID = 8,

	EventIDTypeClusterSmokeCOAlarmEventInterconnectCOAlarmID = 9,

	EventIDTypeClusterSmokeCOAlarmEventAllClearID = 10,

	EventIDTypeClusterDishwasherAlarmEventNotifyID = 0,

	EventIDTypeClusterOperationalStateEventOperationalErrorID = 0,

	EventIDTypeClusterOperationalStateEventOperationCompletionID = 1,

	EventIDTypeClusterRVCOperationalStateEventOperationalErrorID = 0,

	EventIDTypeClusterRVCOperationalStateEventOperationCompletionID = 1,

	EventIDTypeClusterBooleanStateConfigurationEventAlarmsStateChangedID = 0,

	EventIDTypeClusterBooleanStateConfigurationEventSensorFaultID = 1,

	EventIDTypeClusterValveConfigurationAndControlEventValveStateChangedID = 0,

	EventIDTypeClusterValveConfigurationAndControlEventValveFaultID = 1,

	EventIDTypeClusterElectricalEnergyMeasurementEventCumulativeEnergyMeasuredID = 0,

	EventIDTypeClusterElectricalEnergyMeasurementEventPeriodicEnergyMeasuredID = 1,

	EventIDTypeClusterDemandResponseLoadControlEventLoadControlEventStatusChangeID = 0,

	EventIDTypeClusterDeviceEnergyManagementEventPowerAdjustStartID = 0,

	EventIDTypeClusterDeviceEnergyManagementEventPowerAdjustEndID = 1,

	EventIDTypeClusterDeviceEnergyManagementEventPausedID = 2,

	EventIDTypeClusterDeviceEnergyManagementEventResumedID = 3,

	EventIDTypeClusterEnergyEVSEEventEVConnectedID = 0,

	EventIDTypeClusterEnergyEVSEEventEVNotDetectedID = 1,

	EventIDTypeClusterEnergyEVSEEventEnergyTransferStartedID = 2,

	EventIDTypeClusterEnergyEVSEEventEnergyTransferStoppedID = 3,

	EventIDTypeClusterEnergyEVSEEventFaultID = 4,

	EventIDTypeClusterEnergyEVSEEventRFIDID = 5,

	ClusterDoorLockEventDoorLockAlarmID = 0,

	ClusterDoorLockEventDoorStateChangeID = 1,

	ClusterDoorLockEventLockOperationID = 2,

	ClusterDoorLockEventLockOperationErrorID = 3,

	ClusterDoorLockEventLockUserChangeID = 4,

	EventIDTypeClusterDoorLockEventDoorLockAlarmID = 0,

	EventIDTypeClusterDoorLockEventDoorStateChangeID = 1,

	EventIDTypeClusterDoorLockEventLockOperationID = 2,

	EventIDTypeClusterDoorLockEventLockOperationErrorID = 3,

	EventIDTypeClusterDoorLockEventLockUserChangeID = 4,

	ClusterPumpConfigurationAndControlEventSupplyVoltageLowID = 0,

	ClusterPumpConfigurationAndControlEventSupplyVoltageHighID = 1,

	ClusterPumpConfigurationAndControlEventPowerMissingPhaseID = 2,

	ClusterPumpConfigurationAndControlEventSystemPressureLowID = 3,

	ClusterPumpConfigurationAndControlEventSystemPressureHighID = 4,

	ClusterPumpConfigurationAndControlEventDryRunningID = 5,

	ClusterPumpConfigurationAndControlEventMotorTemperatureHighID = 6,

	ClusterPumpConfigurationAndControlEventPumpMotorFatalFailureID = 7,

	ClusterPumpConfigurationAndControlEventElectronicTemperatureHighID = 8,

	ClusterPumpConfigurationAndControlEventPumpBlockedID = 9,

	ClusterPumpConfigurationAndControlEventSensorFailureID = 10,

	ClusterPumpConfigurationAndControlEventElectronicNonFatalFailureID = 11,

	ClusterPumpConfigurationAndControlEventElectronicFatalFailureID = 12,

	ClusterPumpConfigurationAndControlEventGeneralFaultID = 13,

	ClusterPumpConfigurationAndControlEventLeakageID = 14,

	ClusterPumpConfigurationAndControlEventAirDetectionID = 15,

	ClusterPumpConfigurationAndControlEventTurbineOperationID = 16,

	EventIDTypeClusterPumpConfigurationAndControlEventSupplyVoltageLowID = 0,

	EventIDTypeClusterPumpConfigurationAndControlEventSupplyVoltageHighID = 1,

	EventIDTypeClusterPumpConfigurationAndControlEventPowerMissingPhaseID = 2,

	EventIDTypeClusterPumpConfigurationAndControlEventSystemPressureLowID = 3,

	EventIDTypeClusterPumpConfigurationAndControlEventSystemPressureHighID = 4,

	EventIDTypeClusterPumpConfigurationAndControlEventDryRunningID = 5,

	EventIDTypeClusterPumpConfigurationAndControlEventMotorTemperatureHighID = 6,

	EventIDTypeClusterPumpConfigurationAndControlEventPumpMotorFatalFailureID = 7,

	EventIDTypeClusterPumpConfigurationAndControlEventElectronicTemperatureHighID = 8,

	EventIDTypeClusterPumpConfigurationAndControlEventPumpBlockedID = 9,

	EventIDTypeClusterPumpConfigurationAndControlEventSensorFailureID = 10,

	EventIDTypeClusterPumpConfigurationAndControlEventElectronicNonFatalFailureID = 11,

	EventIDTypeClusterPumpConfigurationAndControlEventElectronicFatalFailureID = 12,

	EventIDTypeClusterPumpConfigurationAndControlEventGeneralFaultID = 13,

	EventIDTypeClusterPumpConfigurationAndControlEventLeakageID = 14,

	EventIDTypeClusterPumpConfigurationAndControlEventAirDetectionID = 15,

	EventIDTypeClusterPumpConfigurationAndControlEventTurbineOperationID = 16,

	EventIDTypeClusterTargetNavigatorEventTargetUpdatedID = 0,

	EventIDTypeClusterMediaPlaybackEventStateChangedID = 0,

	EventIDTypeClusterAccountLoginEventLoggedOutID = 0,

	EventIDTypeClusterContentControlEventRemainingScreenTimeExpiredID = 0,

	ClusterTestClusterEventTestEventID = 1,

	ClusterTestClusterEventTestFabricScopedEventID = 2,

	EventIDTypeClusterUnitTestingEventTestEventID = 1,

	EventIDTypeClusterUnitTestingEventTestFabricScopedEventID = 2,

	EventIDTypeClusterSampleMEIEventPingCountEventID = 0
}

declare var MTREventIsHistoricalKey: string;

declare var MTREventNumberKey: string;

declare class MTREventPath extends MTRClusterPath {

	static alloc(): MTREventPath; // inherited from NSObject

	static eventPathWithEndpointIDClusterIDEventID(endpointID: number, clusterID: number, eventID: number): MTREventPath;

	static eventPathWithEndpointIdClusterIdEventId(endpointId: number, clusterId: number, eventId: number): MTREventPath;

	static new(): MTREventPath; // inherited from NSObject

	readonly event: number;
}

declare var MTREventPathKey: string;

declare const enum MTREventPriority {

	Debug = 0,

	Info = 1,

	Critical = 2
}

declare var MTREventPriorityKey: string;

declare class MTREventReport extends NSObject {

	static alloc(): MTREventReport; // inherited from NSObject

	static new(): MTREventReport; // inherited from NSObject

	readonly error: NSError;

	readonly eventNumber: number;

	readonly eventTimeType: MTREventTimeType;

	readonly path: MTREventPath;

	readonly priority: number;

	readonly systemUpTime: number;

	readonly timestamp: number;

	readonly timestampDate: Date;

	readonly value: any;

	constructor(o: { responseValue: NSDictionary<string, any>; });

	initWithResponseValueError(responseValue: NSDictionary<string, any>): this;
}

declare class MTREventRequestPath extends NSObject implements NSCopying {

	static alloc(): MTREventRequestPath; // inherited from NSObject

	static new(): MTREventRequestPath; // inherited from NSObject

	static requestPathWithEndpointIDClusterIDEventID(endpointID: number, clusterID: number, eventID: number): MTREventRequestPath;

	readonly cluster: number;

	readonly endpoint: number;

	readonly event: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare var MTREventSystemUpTimeKey: string;

declare const enum MTREventTimeType {

	SystemUpTime = 0,

	TimestampDate = 1
}

declare var MTREventTimeTypeKey: string;

declare var MTREventTimestampDateKey: string;

declare class MTRFabricInfo extends NSObject {

	static alloc(): MTRFabricInfo; // inherited from NSObject

	static new(): MTRFabricInfo; // inherited from NSObject

	readonly fabricID: number;

	readonly fabricIndex: number;

	readonly intermediateCertificate: NSData;

	readonly intermediateCertificateTLV: NSData;

	readonly label: string;

	readonly nodeID: number;

	readonly operationalCertificate: NSData;

	readonly operationalCertificateTLV: NSData;

	readonly rootCertificate: NSData;

	readonly rootCertificateTLV: NSData;

	readonly rootPublicKey: NSData;

	readonly vendorID: number;
}

declare const enum MTRFanControlFanMode {

	Off = 0,

	Low = 1,

	Medium = 2,

	High = 3,

	On = 4,

	Auto = 5,

	Smart = 6
}

declare const enum MTRFanControlFanModeSequence {

	OffLowMedHigh = 0,

	OffLowHigh = 1,

	OffLowMedHighAuto = 2,

	OffLowHighAuto = 3,

	OffHighAuto = 4,

	OffOnAuto = 4,

	OffHigh = 5,

	OffOn = 5
}

declare const enum MTRFanControlFanModeSequenceType {

	OffLowMedHigh = 0,

	OffLowHigh = 1,

	OffLowMedHighAuto = 2,

	OffLowHighAuto = 3,

	OffOnAuto = 4,

	OffOn = 5
}

declare const enum MTRFanControlFanModeType {

	Off = 0,

	Low = 1,

	Medium = 2,

	High = 3,

	On = 4,

	Auto = 5,

	Smart = 6
}

declare const enum MTRFanControlFeature {

	MultiSpeed = 1,

	Auto = 2,

	Rocking = 4,

	Wind = 8,

	Step = 16,

	AirflowDirection = 32
}

declare const enum MTRFanControlRockBitmap {

	RockLeftRight = 1,

	RockUpDown = 2,

	RockRound = 4
}

declare const enum MTRFanControlRockSupportMask {

	RockLeftRight = 1,

	RockUpDown = 2,

	RockRound = 4
}

declare const enum MTRFanControlWindBitmap {

	SleepWind = 1,

	NaturalWind = 2
}

declare const enum MTRFanControlWindSettingMask {

	SleepWind = 1,

	NaturalWind = 2
}

declare const enum MTRFanControlWindSupportMask {

	SleepWind = 1,

	NaturalWind = 2
}

declare class MTRFixedLabelClusterLabelStruct extends NSObject implements NSCopying {

	static alloc(): MTRFixedLabelClusterLabelStruct; // inherited from NSObject

	static new(): MTRFixedLabelClusterLabelStruct; // inherited from NSObject

	label: string;

	value: string;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare var MTRFloatValueType: string;

declare class MTRGeneralCommissioningClusterArmFailSafeParams extends NSObject implements NSCopying {

	static alloc(): MTRGeneralCommissioningClusterArmFailSafeParams; // inherited from NSObject

	static new(): MTRGeneralCommissioningClusterArmFailSafeParams; // inherited from NSObject

	breadcrumb: number;

	expiryLengthSeconds: number;

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRGeneralCommissioningClusterArmFailSafeResponseParams extends NSObject implements NSCopying {

	static alloc(): MTRGeneralCommissioningClusterArmFailSafeResponseParams; // inherited from NSObject

	static new(): MTRGeneralCommissioningClusterArmFailSafeResponseParams; // inherited from NSObject

	debugText: string;

	errorCode: number;

	timedInvokeTimeoutMs: number;

	constructor(o: { responseValue: NSDictionary<string, any>; });

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;

	initWithResponseValueError(responseValue: NSDictionary<string, any>): this;
}

declare class MTRGeneralCommissioningClusterBasicCommissioningInfo extends NSObject implements NSCopying {

	static alloc(): MTRGeneralCommissioningClusterBasicCommissioningInfo; // inherited from NSObject

	static new(): MTRGeneralCommissioningClusterBasicCommissioningInfo; // inherited from NSObject

	failSafeExpiryLengthSeconds: number;

	maxCumulativeFailsafeSeconds: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRGeneralCommissioningClusterCommissioningCompleteParams extends NSObject implements NSCopying {

	static alloc(): MTRGeneralCommissioningClusterCommissioningCompleteParams; // inherited from NSObject

	static new(): MTRGeneralCommissioningClusterCommissioningCompleteParams; // inherited from NSObject

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRGeneralCommissioningClusterCommissioningCompleteResponseParams extends NSObject implements NSCopying {

	static alloc(): MTRGeneralCommissioningClusterCommissioningCompleteResponseParams; // inherited from NSObject

	static new(): MTRGeneralCommissioningClusterCommissioningCompleteResponseParams; // inherited from NSObject

	debugText: string;

	errorCode: number;

	timedInvokeTimeoutMs: number;

	constructor(o: { responseValue: NSDictionary<string, any>; });

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;

	initWithResponseValueError(responseValue: NSDictionary<string, any>): this;
}

declare class MTRGeneralCommissioningClusterSetRegulatoryConfigParams extends NSObject implements NSCopying {

	static alloc(): MTRGeneralCommissioningClusterSetRegulatoryConfigParams; // inherited from NSObject

	static new(): MTRGeneralCommissioningClusterSetRegulatoryConfigParams; // inherited from NSObject

	breadcrumb: number;

	countryCode: string;

	newRegulatoryConfig: number;

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRGeneralCommissioningClusterSetRegulatoryConfigResponseParams extends NSObject implements NSCopying {

	static alloc(): MTRGeneralCommissioningClusterSetRegulatoryConfigResponseParams; // inherited from NSObject

	static new(): MTRGeneralCommissioningClusterSetRegulatoryConfigResponseParams; // inherited from NSObject

	debugText: string;

	errorCode: number;

	timedInvokeTimeoutMs: number;

	constructor(o: { responseValue: NSDictionary<string, any>; });

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;

	initWithResponseValueError(responseValue: NSDictionary<string, any>): this;
}

declare const enum MTRGeneralCommissioningCommissioningError {

	OK = 0,

	Ok = 0,

	ValueOutsideRange = 1,

	InvalidAuthentication = 2,

	NoFailSafe = 3,

	BusyWithOtherAdmin = 4
}

declare const enum MTRGeneralCommissioningRegulatoryLocationType {

	Indoor = 0,

	Outdoor = 1,

	IndoorOutdoor = 2
}

declare const enum MTRGeneralDiagnosticsBootReason {

	Unspecified = 0,

	PowerOnReboot = 1,

	BrownOutReset = 2,

	SoftwareWatchdogReset = 3,

	HardwareWatchdogReset = 4,

	SoftwareUpdateCompleted = 5,

	SoftwareReset = 6
}

declare const enum MTRGeneralDiagnosticsBootReasonType {

	Unspecified = 0,

	PowerOnReboot = 1,

	BrownOutReset = 2,

	SoftwareWatchdogReset = 3,

	HardwareWatchdogReset = 4,

	SoftwareUpdateCompleted = 5,

	SoftwareReset = 6
}

declare class MTRGeneralDiagnosticsClusterBootReasonEvent extends NSObject implements NSCopying {

	static alloc(): MTRGeneralDiagnosticsClusterBootReasonEvent; // inherited from NSObject

	static new(): MTRGeneralDiagnosticsClusterBootReasonEvent; // inherited from NSObject

	bootReason: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRGeneralDiagnosticsClusterHardwareFaultChangeEvent extends NSObject implements NSCopying {

	static alloc(): MTRGeneralDiagnosticsClusterHardwareFaultChangeEvent; // inherited from NSObject

	static new(): MTRGeneralDiagnosticsClusterHardwareFaultChangeEvent; // inherited from NSObject

	current: NSArray<any>;

	previous: NSArray<any>;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRGeneralDiagnosticsClusterNetworkFaultChangeEvent extends NSObject implements NSCopying {

	static alloc(): MTRGeneralDiagnosticsClusterNetworkFaultChangeEvent; // inherited from NSObject

	static new(): MTRGeneralDiagnosticsClusterNetworkFaultChangeEvent; // inherited from NSObject

	current: NSArray<any>;

	previous: NSArray<any>;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRGeneralDiagnosticsClusterNetworkInterface extends NSObject implements NSCopying {

	static alloc(): MTRGeneralDiagnosticsClusterNetworkInterface; // inherited from NSObject

	static new(): MTRGeneralDiagnosticsClusterNetworkInterface; // inherited from NSObject

	hardwareAddress: NSData;

	iPv4Addresses: NSArray<any>;

	iPv6Addresses: NSArray<any>;

	isOperational: number;

	name: string;

	offPremiseServicesReachableIPv4: number;

	offPremiseServicesReachableIPv6: number;

	type: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRGeneralDiagnosticsClusterNetworkInterfaceType extends MTRGeneralDiagnosticsClusterNetworkInterface {

	static alloc(): MTRGeneralDiagnosticsClusterNetworkInterfaceType; // inherited from NSObject

	static new(): MTRGeneralDiagnosticsClusterNetworkInterfaceType; // inherited from NSObject
}

declare class MTRGeneralDiagnosticsClusterRadioFaultChangeEvent extends NSObject implements NSCopying {

	static alloc(): MTRGeneralDiagnosticsClusterRadioFaultChangeEvent; // inherited from NSObject

	static new(): MTRGeneralDiagnosticsClusterRadioFaultChangeEvent; // inherited from NSObject

	current: NSArray<any>;

	previous: NSArray<any>;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRGeneralDiagnosticsClusterTestEventTriggerParams extends NSObject implements NSCopying {

	static alloc(): MTRGeneralDiagnosticsClusterTestEventTriggerParams; // inherited from NSObject

	static new(): MTRGeneralDiagnosticsClusterTestEventTriggerParams; // inherited from NSObject

	enableKey: NSData;

	eventTrigger: number;

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare const enum MTRGeneralDiagnosticsHardwareFault {

	Unspecified = 0,

	Radio = 1,

	Sensor = 2,

	ResettableOverTemp = 3,

	NonResettableOverTemp = 4,

	PowerSource = 5,

	VisualDisplayFault = 6,

	AudioOutputFault = 7,

	UserInterfaceFault = 8,

	NonVolatileMemoryError = 9,

	TamperDetected = 10
}

declare const enum MTRGeneralDiagnosticsHardwareFaultType {

	Unspecified = 0,

	Radio = 1,

	Sensor = 2,

	ResettableOverTemp = 3,

	NonResettableOverTemp = 4,

	PowerSource = 5,

	VisualDisplayFault = 6,

	AudioOutputFault = 7,

	UserInterfaceFault = 8,

	NonVolatileMemoryError = 9,

	TamperDetected = 10
}

declare const enum MTRGeneralDiagnosticsInterfaceType {

	Unspecified = 0,

	WiFi = 1,

	Ethernet = 2,

	Cellular = 3,

	Thread = 4
}

declare const enum MTRGeneralDiagnosticsNetworkFault {

	Unspecified = 0,

	HardwareFailure = 1,

	NetworkJammed = 2,

	ConnectionFailed = 3
}

declare const enum MTRGeneralDiagnosticsNetworkFaultType {

	Unspecified = 0,

	HardwareFailure = 1,

	NetworkJammed = 2,

	ConnectionFailed = 3
}

declare const enum MTRGeneralDiagnosticsRadioFault {

	Unspecified = 0,

	WiFiFault = 1,

	CellularFault = 2,

	ThreadFault = 3,

	NFCFault = 4,

	BLEFault = 5,

	EthernetFault = 6
}

declare const enum MTRGeneralDiagnosticsRadioFaultType {

	Unspecified = 0,

	WiFiFault = 1,

	CellularFault = 2,

	ThreadFault = 3,

	NFCFault = 4,

	BLEFault = 5,

	EthernetFault = 6
}

declare class MTRGenericBaseCluster extends MTRCluster {

	static alloc(): MTRGenericBaseCluster; // inherited from NSObject

	static new(): MTRGenericBaseCluster; // inherited from NSObject
}

declare class MTRGenericCluster extends MTRCluster {

	static alloc(): MTRGenericCluster; // inherited from NSObject

	static new(): MTRGenericCluster; // inherited from NSObject

	readonly device: MTRDevice;
}

declare class MTRGroupKeyManagementClusterGroupInfoMapStruct extends NSObject implements NSCopying {

	static alloc(): MTRGroupKeyManagementClusterGroupInfoMapStruct; // inherited from NSObject

	static new(): MTRGroupKeyManagementClusterGroupInfoMapStruct; // inherited from NSObject

	endpoints: NSArray<any>;

	fabricIndex: number;

	groupId: number;

	groupName: string;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRGroupKeyManagementClusterGroupKeyMapStruct extends NSObject implements NSCopying {

	static alloc(): MTRGroupKeyManagementClusterGroupKeyMapStruct; // inherited from NSObject

	static new(): MTRGroupKeyManagementClusterGroupKeyMapStruct; // inherited from NSObject

	fabricIndex: number;

	groupId: number;

	groupKeySetID: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRGroupKeyManagementClusterGroupKeySetStruct extends NSObject implements NSCopying {

	static alloc(): MTRGroupKeyManagementClusterGroupKeySetStruct; // inherited from NSObject

	static new(): MTRGroupKeyManagementClusterGroupKeySetStruct; // inherited from NSObject

	epochKey0: NSData;

	epochKey1: NSData;

	epochKey2: NSData;

	epochStartTime0: number;

	epochStartTime1: number;

	epochStartTime2: number;

	groupKeySecurityPolicy: number;

	groupKeySetID: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRGroupKeyManagementClusterKeySetReadAllIndicesParams extends NSObject implements NSCopying {

	static alloc(): MTRGroupKeyManagementClusterKeySetReadAllIndicesParams; // inherited from NSObject

	static new(): MTRGroupKeyManagementClusterKeySetReadAllIndicesParams; // inherited from NSObject

	groupKeySetIDs: NSArray<any>;

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRGroupKeyManagementClusterKeySetReadAllIndicesResponseParams extends NSObject implements NSCopying {

	static alloc(): MTRGroupKeyManagementClusterKeySetReadAllIndicesResponseParams; // inherited from NSObject

	static new(): MTRGroupKeyManagementClusterKeySetReadAllIndicesResponseParams; // inherited from NSObject

	groupKeySetIDs: NSArray<any>;

	timedInvokeTimeoutMs: number;

	constructor(o: { responseValue: NSDictionary<string, any>; });

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;

	initWithResponseValueError(responseValue: NSDictionary<string, any>): this;
}

declare class MTRGroupKeyManagementClusterKeySetReadParams extends NSObject implements NSCopying {

	static alloc(): MTRGroupKeyManagementClusterKeySetReadParams; // inherited from NSObject

	static new(): MTRGroupKeyManagementClusterKeySetReadParams; // inherited from NSObject

	groupKeySetID: number;

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRGroupKeyManagementClusterKeySetReadResponseParams extends NSObject implements NSCopying {

	static alloc(): MTRGroupKeyManagementClusterKeySetReadResponseParams; // inherited from NSObject

	static new(): MTRGroupKeyManagementClusterKeySetReadResponseParams; // inherited from NSObject

	groupKeySet: MTRGroupKeyManagementClusterGroupKeySetStruct;

	timedInvokeTimeoutMs: number;

	constructor(o: { responseValue: NSDictionary<string, any>; });

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;

	initWithResponseValueError(responseValue: NSDictionary<string, any>): this;
}

declare class MTRGroupKeyManagementClusterKeySetRemoveParams extends NSObject implements NSCopying {

	static alloc(): MTRGroupKeyManagementClusterKeySetRemoveParams; // inherited from NSObject

	static new(): MTRGroupKeyManagementClusterKeySetRemoveParams; // inherited from NSObject

	groupKeySetID: number;

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRGroupKeyManagementClusterKeySetWriteParams extends NSObject implements NSCopying {

	static alloc(): MTRGroupKeyManagementClusterKeySetWriteParams; // inherited from NSObject

	static new(): MTRGroupKeyManagementClusterKeySetWriteParams; // inherited from NSObject

	groupKeySet: MTRGroupKeyManagementClusterGroupKeySetStruct;

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare const enum MTRGroupKeyManagementGroupKeySecurityPolicy {

	TrustFirst = 0,

	CacheAndSync = 1
}

declare class MTRGroupsClusterAddGroupIfIdentifyingParams extends NSObject implements NSCopying {

	static alloc(): MTRGroupsClusterAddGroupIfIdentifyingParams; // inherited from NSObject

	static new(): MTRGroupsClusterAddGroupIfIdentifyingParams; // inherited from NSObject

	groupID: number;

	groupId: number;

	groupName: string;

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRGroupsClusterAddGroupParams extends NSObject implements NSCopying {

	static alloc(): MTRGroupsClusterAddGroupParams; // inherited from NSObject

	static new(): MTRGroupsClusterAddGroupParams; // inherited from NSObject

	groupID: number;

	groupId: number;

	groupName: string;

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRGroupsClusterAddGroupResponseParams extends NSObject implements NSCopying {

	static alloc(): MTRGroupsClusterAddGroupResponseParams; // inherited from NSObject

	static new(): MTRGroupsClusterAddGroupResponseParams; // inherited from NSObject

	groupID: number;

	groupId: number;

	status: number;

	timedInvokeTimeoutMs: number;

	constructor(o: { responseValue: NSDictionary<string, any>; });

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;

	initWithResponseValueError(responseValue: NSDictionary<string, any>): this;
}

declare class MTRGroupsClusterGetGroupMembershipParams extends NSObject implements NSCopying {

	static alloc(): MTRGroupsClusterGetGroupMembershipParams; // inherited from NSObject

	static new(): MTRGroupsClusterGetGroupMembershipParams; // inherited from NSObject

	groupList: NSArray<any>;

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRGroupsClusterGetGroupMembershipResponseParams extends NSObject implements NSCopying {

	static alloc(): MTRGroupsClusterGetGroupMembershipResponseParams; // inherited from NSObject

	static new(): MTRGroupsClusterGetGroupMembershipResponseParams; // inherited from NSObject

	capacity: number;

	groupList: NSArray<any>;

	timedInvokeTimeoutMs: number;

	constructor(o: { responseValue: NSDictionary<string, any>; });

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;

	initWithResponseValueError(responseValue: NSDictionary<string, any>): this;
}

declare class MTRGroupsClusterRemoveAllGroupsParams extends NSObject implements NSCopying {

	static alloc(): MTRGroupsClusterRemoveAllGroupsParams; // inherited from NSObject

	static new(): MTRGroupsClusterRemoveAllGroupsParams; // inherited from NSObject

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRGroupsClusterRemoveGroupParams extends NSObject implements NSCopying {

	static alloc(): MTRGroupsClusterRemoveGroupParams; // inherited from NSObject

	static new(): MTRGroupsClusterRemoveGroupParams; // inherited from NSObject

	groupID: number;

	groupId: number;

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRGroupsClusterRemoveGroupResponseParams extends NSObject implements NSCopying {

	static alloc(): MTRGroupsClusterRemoveGroupResponseParams; // inherited from NSObject

	static new(): MTRGroupsClusterRemoveGroupResponseParams; // inherited from NSObject

	groupID: number;

	groupId: number;

	status: number;

	timedInvokeTimeoutMs: number;

	constructor(o: { responseValue: NSDictionary<string, any>; });

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;

	initWithResponseValueError(responseValue: NSDictionary<string, any>): this;
}

declare class MTRGroupsClusterViewGroupParams extends NSObject implements NSCopying {

	static alloc(): MTRGroupsClusterViewGroupParams; // inherited from NSObject

	static new(): MTRGroupsClusterViewGroupParams; // inherited from NSObject

	groupID: number;

	groupId: number;

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRGroupsClusterViewGroupResponseParams extends NSObject implements NSCopying {

	static alloc(): MTRGroupsClusterViewGroupResponseParams; // inherited from NSObject

	static new(): MTRGroupsClusterViewGroupResponseParams; // inherited from NSObject

	groupID: number;

	groupId: number;

	groupName: string;

	status: number;

	timedInvokeTimeoutMs: number;

	constructor(o: { responseValue: NSDictionary<string, any>; });

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;

	initWithResponseValueError(responseValue: NSDictionary<string, any>): this;
}

declare const enum MTRGroupsFeature {

	GroupNames = 1
}

declare const enum MTRGroupsGroupClusterFeature {

	GroupNames = 1
}

declare const enum MTRGroupsNameSupportBitmap {

	GroupNames = 128
}

declare class MTRIdentifyClusterIdentifyParams extends NSObject implements NSCopying {

	static alloc(): MTRIdentifyClusterIdentifyParams; // inherited from NSObject

	static new(): MTRIdentifyClusterIdentifyParams; // inherited from NSObject

	identifyTime: number;

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRIdentifyClusterTriggerEffectParams extends NSObject implements NSCopying {

	static alloc(): MTRIdentifyClusterTriggerEffectParams; // inherited from NSObject

	static new(): MTRIdentifyClusterTriggerEffectParams; // inherited from NSObject

	effectIdentifier: number;

	effectVariant: number;

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare const enum MTRIdentifyEffectIdentifier {

	Blink = 0,

	Breathe = 1,

	Okay = 2,

	ChannelChange = 11,

	FinishEffect = 254,

	StopEffect = 255
}

declare const enum MTRIdentifyEffectVariant {

	Default = 0
}

declare const enum MTRIdentifyType {

	None = 0,

	LightOutput = 1,

	VisibleLight = 1,

	VisibleIndicator = 2,

	VisibleLED = 2,

	AudibleBeep = 3,

	Display = 4,

	Actuator = 5
}

declare const enum MTRIlluminanceMeasurementLightSensorType {

	Photodiode = 0,

	CMOS = 1
}

declare const enum MTRInteractionErrorCode {

	Failure = 1,

	InvalidSubscription = 125,

	UnsupportedAccess = 126,

	UnsupportedEndpoint = 127,

	InvalidAction = 128,

	UnsupportedCommand = 129,

	InvalidCommand = 133,

	UnsupportedAttribute = 134,

	ConstraintError = 135,

	UnsupportedWrite = 136,

	ResourceExhausted = 137,

	NotFound = 139,

	UnreportableAttribute = 140,

	InvalidDataType = 141,

	UnsupportedRead = 143,

	DataVersionMismatch = 146,

	Timeout = 148,

	Busy = 156,

	UnsupportedCluster = 195,

	NoUpstreamSubscription = 197,

	NeedsTimedInteraction = 198,

	UnsupportedEvent = 199,

	PathsExhausted = 200,

	TimedRequestMismatch = 201,

	FailsafeRequired = 202
}

declare var MTRInteractionErrorDomain: string;

declare const enum MTRKeypadInputCECKeyCode {

	Select = 0,

	Up = 1,

	Down = 2,

	Left = 3,

	Right = 4,

	RightUp = 5,

	RightDown = 6,

	LeftUp = 7,

	LeftDown = 8,

	RootMenu = 9,

	SetupMenu = 10,

	ContentsMenu = 11,

	FavoriteMenu = 12,

	Exit = 13,

	MediaTopMenu = 16,

	MediaContextSensitiveMenu = 17,

	NumberEntryMode = 29,

	Number11 = 30,

	Number12 = 31,

	Number0OrNumber10 = 32,

	Numbers1 = 33,

	Numbers2 = 34,

	Numbers3 = 35,

	Numbers4 = 36,

	Numbers5 = 37,

	Numbers6 = 38,

	Numbers7 = 39,

	Numbers8 = 40,

	Numbers9 = 41,

	Dot = 42,

	Enter = 43,

	Clear = 44,

	NextFavorite = 47,

	ChannelUp = 48,

	ChannelDown = 49,

	PreviousChannel = 50,

	SoundSelect = 51,

	InputSelect = 52,

	DisplayInformation = 53,

	Help = 54,

	PageUp = 55,

	PageDown = 56,

	Power = 64,

	VolumeUp = 65,

	VolumeDown = 66,

	Mute = 67,

	Play = 68,

	Stop = 69,

	Pause = 70,

	Record = 71,

	Rewind = 72,

	FastForward = 73,

	Eject = 74,

	Forward = 75,

	Backward = 76,

	StopRecord = 77,

	PauseRecord = 78,

	Reserved = 79,

	Angle = 80,

	SubPicture = 81,

	VideoOnDemand = 82,

	ElectronicProgramGuide = 83,

	TimerProgramming = 84,

	InitialConfiguration = 85,

	SelectBroadcastType = 86,

	SelectSoundPresentation = 87,

	PlayFunction = 96,

	PausePlayFunction = 97,

	RecordFunction = 98,

	PauseRecordFunction = 99,

	StopFunction = 100,

	MuteFunction = 101,

	RestoreVolumeFunction = 102,

	TuneFunction = 103,

	SelectMediaFunction = 104,

	SelectAvInputFunction = 105,

	SelectAudioInputFunction = 106,

	PowerToggleFunction = 107,

	PowerOffFunction = 108,

	PowerOnFunction = 109,

	F1Blue = 113,

	F2Red = 114,

	F3Green = 115,

	F4Yellow = 116,

	F5 = 117,

	Data = 118
}

declare const enum MTRKeypadInputCecKeyCode {

	Select = 0,

	Up = 1,

	Down = 2,

	Left = 3,

	Right = 4,

	RightUp = 5,

	RightDown = 6,

	LeftUp = 7,

	LeftDown = 8,

	RootMenu = 9,

	SetupMenu = 10,

	ContentsMenu = 11,

	FavoriteMenu = 12,

	Exit = 13,

	MediaTopMenu = 16,

	MediaContextSensitiveMenu = 17,

	NumberEntryMode = 29,

	Number11 = 30,

	Number12 = 31,

	Number0OrNumber10 = 32,

	Numbers1 = 33,

	Numbers2 = 34,

	Numbers3 = 35,

	Numbers4 = 36,

	Numbers5 = 37,

	Numbers6 = 38,

	Numbers7 = 39,

	Numbers8 = 40,

	Numbers9 = 41,

	Dot = 42,

	Enter = 43,

	Clear = 44,

	NextFavorite = 47,

	ChannelUp = 48,

	ChannelDown = 49,

	PreviousChannel = 50,

	SoundSelect = 51,

	InputSelect = 52,

	DisplayInformation = 53,

	Help = 54,

	PageUp = 55,

	PageDown = 56,

	Power = 64,

	VolumeUp = 65,

	VolumeDown = 66,

	Mute = 67,

	Play = 68,

	Stop = 69,

	Pause = 70,

	Record = 71,

	Rewind = 72,

	FastForward = 73,

	Eject = 74,

	Forward = 75,

	Backward = 76,

	StopRecord = 77,

	PauseRecord = 78,

	Reserved = 79,

	Angle = 80,

	SubPicture = 81,

	VideoOnDemand = 82,

	ElectronicProgramGuide = 83,

	TimerProgramming = 84,

	InitialConfiguration = 85,

	SelectBroadcastType = 86,

	SelectSoundPresentation = 87,

	PlayFunction = 96,

	PausePlayFunction = 97,

	RecordFunction = 98,

	PauseRecordFunction = 99,

	StopFunction = 100,

	MuteFunction = 101,

	RestoreVolumeFunction = 102,

	TuneFunction = 103,

	SelectMediaFunction = 104,

	SelectAvInputFunction = 105,

	SelectAudioInputFunction = 106,

	PowerToggleFunction = 107,

	PowerOffFunction = 108,

	PowerOnFunction = 109,

	F1Blue = 113,

	F2Red = 114,

	F3Green = 115,

	F4Yellow = 116,

	F5 = 117,

	Data = 118
}

declare class MTRKeypadInputClusterSendKeyParams extends NSObject implements NSCopying {

	static alloc(): MTRKeypadInputClusterSendKeyParams; // inherited from NSObject

	static new(): MTRKeypadInputClusterSendKeyParams; // inherited from NSObject

	keyCode: number;

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRKeypadInputClusterSendKeyResponseParams extends NSObject implements NSCopying {

	static alloc(): MTRKeypadInputClusterSendKeyResponseParams; // inherited from NSObject

	static new(): MTRKeypadInputClusterSendKeyResponseParams; // inherited from NSObject

	status: number;

	timedInvokeTimeoutMs: number;

	constructor(o: { responseValue: NSDictionary<string, any>; });

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;

	initWithResponseValueError(responseValue: NSDictionary<string, any>): this;
}

declare const enum MTRKeypadInputFeature {

	NavigationKeyCodes = 1,

	LocationKeys = 2,

	NumberKeys = 4
}

declare const enum MTRKeypadInputStatus {

	Success = 0,

	UnsupportedKey = 1,

	InvalidKeyInCurrentState = 2
}

interface MTRKeypair extends NSObjectProtocol {

	publicKey(): any;

	signMessageECDSA_DER?(message: NSData): NSData;

	signMessageECDSA_RAW?(message: NSData): NSData;
}
declare var MTRKeypair: {

	prototype: MTRKeypair;
};

declare class MTRLevelControlClusterMoveParams extends NSObject implements NSCopying {

	static alloc(): MTRLevelControlClusterMoveParams; // inherited from NSObject

	static new(): MTRLevelControlClusterMoveParams; // inherited from NSObject

	moveMode: number;

	optionsMask: number;

	optionsOverride: number;

	rate: number;

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRLevelControlClusterMoveToClosestFrequencyParams extends NSObject implements NSCopying {

	static alloc(): MTRLevelControlClusterMoveToClosestFrequencyParams; // inherited from NSObject

	static new(): MTRLevelControlClusterMoveToClosestFrequencyParams; // inherited from NSObject

	frequency: number;

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRLevelControlClusterMoveToLevelParams extends NSObject implements NSCopying {

	static alloc(): MTRLevelControlClusterMoveToLevelParams; // inherited from NSObject

	static new(): MTRLevelControlClusterMoveToLevelParams; // inherited from NSObject

	level: number;

	optionsMask: number;

	optionsOverride: number;

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	transitionTime: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRLevelControlClusterMoveToLevelWithOnOffParams extends NSObject implements NSCopying {

	static alloc(): MTRLevelControlClusterMoveToLevelWithOnOffParams; // inherited from NSObject

	static new(): MTRLevelControlClusterMoveToLevelWithOnOffParams; // inherited from NSObject

	level: number;

	optionsMask: number;

	optionsOverride: number;

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	transitionTime: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRLevelControlClusterMoveWithOnOffParams extends NSObject implements NSCopying {

	static alloc(): MTRLevelControlClusterMoveWithOnOffParams; // inherited from NSObject

	static new(): MTRLevelControlClusterMoveWithOnOffParams; // inherited from NSObject

	moveMode: number;

	optionsMask: number;

	optionsOverride: number;

	rate: number;

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRLevelControlClusterStepParams extends NSObject implements NSCopying {

	static alloc(): MTRLevelControlClusterStepParams; // inherited from NSObject

	static new(): MTRLevelControlClusterStepParams; // inherited from NSObject

	optionsMask: number;

	optionsOverride: number;

	serverSideProcessingTimeout: number;

	stepMode: number;

	stepSize: number;

	timedInvokeTimeoutMs: number;

	transitionTime: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRLevelControlClusterStepWithOnOffParams extends NSObject implements NSCopying {

	static alloc(): MTRLevelControlClusterStepWithOnOffParams; // inherited from NSObject

	static new(): MTRLevelControlClusterStepWithOnOffParams; // inherited from NSObject

	optionsMask: number;

	optionsOverride: number;

	serverSideProcessingTimeout: number;

	stepMode: number;

	stepSize: number;

	timedInvokeTimeoutMs: number;

	transitionTime: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRLevelControlClusterStopParams extends NSObject implements NSCopying {

	static alloc(): MTRLevelControlClusterStopParams; // inherited from NSObject

	static new(): MTRLevelControlClusterStopParams; // inherited from NSObject

	optionsMask: number;

	optionsOverride: number;

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRLevelControlClusterStopWithOnOffParams extends NSObject implements NSCopying {

	static alloc(): MTRLevelControlClusterStopWithOnOffParams; // inherited from NSObject

	static new(): MTRLevelControlClusterStopWithOnOffParams; // inherited from NSObject

	optionsMask: number;

	optionsOverride: number;

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare const enum MTRLevelControlFeature {

	OnOff = 1,

	Lighting = 2,

	Frequency = 4
}

declare const enum MTRLevelControlMoveMode {

	Up = 0,

	Down = 1
}

declare const enum MTRLevelControlOptions {

	ExecuteIfOff = 1,

	CoupleColorTempToLevel = 2
}

declare const enum MTRLevelControlOptionsBitmap {

	ExecuteIfOff = 1,

	CoupleColorTempToLevel = 2
}

declare const enum MTRLevelControlStepMode {

	Up = 0,

	Down = 1
}

declare const enum MTRLogType {

	Error = 1,

	Progress = 2,

	Detail = 3
}

declare class MTRLowPowerClusterSleepParams extends NSObject implements NSCopying {

	static alloc(): MTRLowPowerClusterSleepParams; // inherited from NSObject

	static new(): MTRLowPowerClusterSleepParams; // inherited from NSObject

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRManualSetupPayloadParser extends NSObject {

	static alloc(): MTRManualSetupPayloadParser; // inherited from NSObject

	static new(): MTRManualSetupPayloadParser; // inherited from NSObject

	constructor(o: { decimalStringRepresentation: string; });

	initWithDecimalStringRepresentation(decimalStringRepresentation: string): this;

	populatePayload(): MTRSetupPayload;
}

declare class MTRMediaInputClusterHideInputStatusParams extends NSObject implements NSCopying {

	static alloc(): MTRMediaInputClusterHideInputStatusParams; // inherited from NSObject

	static new(): MTRMediaInputClusterHideInputStatusParams; // inherited from NSObject

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRMediaInputClusterInputInfo extends MTRMediaInputClusterInputInfoStruct {

	static alloc(): MTRMediaInputClusterInputInfo; // inherited from NSObject

	static new(): MTRMediaInputClusterInputInfo; // inherited from NSObject
}

declare class MTRMediaInputClusterInputInfoStruct extends NSObject implements NSCopying {

	static alloc(): MTRMediaInputClusterInputInfoStruct; // inherited from NSObject

	static new(): MTRMediaInputClusterInputInfoStruct; // inherited from NSObject

	descriptionString: string;

	index: number;

	inputType: number;

	name: string;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRMediaInputClusterRenameInputParams extends NSObject implements NSCopying {

	static alloc(): MTRMediaInputClusterRenameInputParams; // inherited from NSObject

	static new(): MTRMediaInputClusterRenameInputParams; // inherited from NSObject

	index: number;

	name: string;

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRMediaInputClusterSelectInputParams extends NSObject implements NSCopying {

	static alloc(): MTRMediaInputClusterSelectInputParams; // inherited from NSObject

	static new(): MTRMediaInputClusterSelectInputParams; // inherited from NSObject

	index: number;

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRMediaInputClusterShowInputStatusParams extends NSObject implements NSCopying {

	static alloc(): MTRMediaInputClusterShowInputStatusParams; // inherited from NSObject

	static new(): MTRMediaInputClusterShowInputStatusParams; // inherited from NSObject

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare const enum MTRMediaInputFeature {

	NameUpdates = 1
}

declare const enum MTRMediaInputInputType {

	Internal = 0,

	Aux = 1,

	Coax = 2,

	Composite = 3,

	HDMI = 4,

	Hdmi = 4,

	Input = 5,

	Line = 6,

	Optical = 7,

	Video = 8,

	SCART = 9,

	Scart = 9,

	USB = 10,

	Usb = 10,

	Other = 11
}

declare class MTRMediaPlaybackClusterFastForwardParams extends NSObject implements NSCopying {

	static alloc(): MTRMediaPlaybackClusterFastForwardParams; // inherited from NSObject

	static new(): MTRMediaPlaybackClusterFastForwardParams; // inherited from NSObject

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRMediaPlaybackClusterNextParams extends NSObject implements NSCopying {

	static alloc(): MTRMediaPlaybackClusterNextParams; // inherited from NSObject

	static new(): MTRMediaPlaybackClusterNextParams; // inherited from NSObject

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRMediaPlaybackClusterPauseParams extends NSObject implements NSCopying {

	static alloc(): MTRMediaPlaybackClusterPauseParams; // inherited from NSObject

	static new(): MTRMediaPlaybackClusterPauseParams; // inherited from NSObject

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRMediaPlaybackClusterPlayParams extends NSObject implements NSCopying {

	static alloc(): MTRMediaPlaybackClusterPlayParams; // inherited from NSObject

	static new(): MTRMediaPlaybackClusterPlayParams; // inherited from NSObject

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRMediaPlaybackClusterPlaybackPosition extends MTRMediaPlaybackClusterPlaybackPositionStruct {

	static alloc(): MTRMediaPlaybackClusterPlaybackPosition; // inherited from NSObject

	static new(): MTRMediaPlaybackClusterPlaybackPosition; // inherited from NSObject
}

declare class MTRMediaPlaybackClusterPlaybackPositionStruct extends NSObject implements NSCopying {

	static alloc(): MTRMediaPlaybackClusterPlaybackPositionStruct; // inherited from NSObject

	static new(): MTRMediaPlaybackClusterPlaybackPositionStruct; // inherited from NSObject

	position: number;

	updatedAt: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRMediaPlaybackClusterPlaybackResponseParams extends NSObject implements NSCopying {

	static alloc(): MTRMediaPlaybackClusterPlaybackResponseParams; // inherited from NSObject

	static new(): MTRMediaPlaybackClusterPlaybackResponseParams; // inherited from NSObject

	data: string;

	status: number;

	timedInvokeTimeoutMs: number;

	constructor(o: { responseValue: NSDictionary<string, any>; });

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;

	initWithResponseValueError(responseValue: NSDictionary<string, any>): this;
}

declare class MTRMediaPlaybackClusterPreviousParams extends NSObject implements NSCopying {

	static alloc(): MTRMediaPlaybackClusterPreviousParams; // inherited from NSObject

	static new(): MTRMediaPlaybackClusterPreviousParams; // inherited from NSObject

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRMediaPlaybackClusterRewindParams extends NSObject implements NSCopying {

	static alloc(): MTRMediaPlaybackClusterRewindParams; // inherited from NSObject

	static new(): MTRMediaPlaybackClusterRewindParams; // inherited from NSObject

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRMediaPlaybackClusterSeekParams extends NSObject implements NSCopying {

	static alloc(): MTRMediaPlaybackClusterSeekParams; // inherited from NSObject

	static new(): MTRMediaPlaybackClusterSeekParams; // inherited from NSObject

	position: number;

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRMediaPlaybackClusterSkipBackwardParams extends NSObject implements NSCopying {

	static alloc(): MTRMediaPlaybackClusterSkipBackwardParams; // inherited from NSObject

	static new(): MTRMediaPlaybackClusterSkipBackwardParams; // inherited from NSObject

	deltaPositionMilliseconds: number;

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRMediaPlaybackClusterSkipForwardParams extends NSObject implements NSCopying {

	static alloc(): MTRMediaPlaybackClusterSkipForwardParams; // inherited from NSObject

	static new(): MTRMediaPlaybackClusterSkipForwardParams; // inherited from NSObject

	deltaPositionMilliseconds: number;

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRMediaPlaybackClusterStartOverParams extends NSObject implements NSCopying {

	static alloc(): MTRMediaPlaybackClusterStartOverParams; // inherited from NSObject

	static new(): MTRMediaPlaybackClusterStartOverParams; // inherited from NSObject

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRMediaPlaybackClusterStopParams extends NSObject implements NSCopying {

	static alloc(): MTRMediaPlaybackClusterStopParams; // inherited from NSObject

	static new(): MTRMediaPlaybackClusterStopParams; // inherited from NSObject

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRMediaPlaybackClusterStopPlaybackParams extends MTRMediaPlaybackClusterStopParams {

	static alloc(): MTRMediaPlaybackClusterStopPlaybackParams; // inherited from NSObject

	static new(): MTRMediaPlaybackClusterStopPlaybackParams; // inherited from NSObject
}

declare const enum MTRMediaPlaybackFeature {

	AdvancedSeek = 1,

	VariableSpeed = 2,

	TextTracks = 3,

	AudioTracks = 4,

	AudioAdvance = 5
}

declare const enum MTRMediaPlaybackPlaybackState {

	Playing = 0,

	Paused = 1,

	NotPlaying = 2,

	Buffering = 3
}

declare const enum MTRMediaPlaybackStatus {

	Success = 0,

	InvalidStateForCommand = 1,

	NotAllowed = 2,

	NotActive = 3,

	SpeedOutOfRange = 4,

	SeekOutOfRange = 5
}

declare class MTRModeSelectClusterChangeToModeParams extends NSObject implements NSCopying {

	static alloc(): MTRModeSelectClusterChangeToModeParams; // inherited from NSObject

	static new(): MTRModeSelectClusterChangeToModeParams; // inherited from NSObject

	newMode: number;

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRModeSelectClusterModeOptionStruct extends NSObject implements NSCopying {

	static alloc(): MTRModeSelectClusterModeOptionStruct; // inherited from NSObject

	static new(): MTRModeSelectClusterModeOptionStruct; // inherited from NSObject

	label: string;

	mode: number;

	semanticTags: NSArray<any>;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRModeSelectClusterSemanticTag extends MTRModeSelectClusterSemanticTagStruct {

	static alloc(): MTRModeSelectClusterSemanticTag; // inherited from NSObject

	static new(): MTRModeSelectClusterSemanticTag; // inherited from NSObject
}

declare class MTRModeSelectClusterSemanticTagStruct extends NSObject implements NSCopying {

	static alloc(): MTRModeSelectClusterSemanticTagStruct; // inherited from NSObject

	static new(): MTRModeSelectClusterSemanticTagStruct; // inherited from NSObject

	mfgCode: number;

	value: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare const enum MTRModeSelectFeature {

	OnOff = 1,

	DEPONOFF = 1
}

interface MTRNOCChainIssuer extends NSObjectProtocol {

	onNOCChainGenerationNeededAttestationInfoOnNOCChainGenerationComplete(csrInfo: CSRInfo, attestationInfo: AttestationInfo, onNOCChainGenerationComplete: (p1: NSData, p2: NSData, p3: NSData, p4: NSData, p5: number, p6: interop.Pointer | interop.Reference<NSError>) => void): void;
}
declare var MTRNOCChainIssuer: {

	prototype: MTRNOCChainIssuer;
};

declare class MTRNetworkCommissioningClusterAddOrUpdateThreadNetworkParams extends NSObject implements NSCopying {

	static alloc(): MTRNetworkCommissioningClusterAddOrUpdateThreadNetworkParams; // inherited from NSObject

	static new(): MTRNetworkCommissioningClusterAddOrUpdateThreadNetworkParams; // inherited from NSObject

	breadcrumb: number;

	operationalDataset: NSData;

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRNetworkCommissioningClusterAddOrUpdateWiFiNetworkParams extends NSObject implements NSCopying {

	static alloc(): MTRNetworkCommissioningClusterAddOrUpdateWiFiNetworkParams; // inherited from NSObject

	static new(): MTRNetworkCommissioningClusterAddOrUpdateWiFiNetworkParams; // inherited from NSObject

	breadcrumb: number;

	credentials: NSData;

	serverSideProcessingTimeout: number;

	ssid: NSData;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRNetworkCommissioningClusterConnectNetworkParams extends NSObject implements NSCopying {

	static alloc(): MTRNetworkCommissioningClusterConnectNetworkParams; // inherited from NSObject

	static new(): MTRNetworkCommissioningClusterConnectNetworkParams; // inherited from NSObject

	breadcrumb: number;

	networkID: NSData;

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRNetworkCommissioningClusterConnectNetworkResponseParams extends NSObject implements NSCopying {

	static alloc(): MTRNetworkCommissioningClusterConnectNetworkResponseParams; // inherited from NSObject

	static new(): MTRNetworkCommissioningClusterConnectNetworkResponseParams; // inherited from NSObject

	debugText: string;

	errorValue: number;

	networkingStatus: number;

	timedInvokeTimeoutMs: number;

	constructor(o: { responseValue: NSDictionary<string, any>; });

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;

	initWithResponseValueError(responseValue: NSDictionary<string, any>): this;
}

declare class MTRNetworkCommissioningClusterNetworkConfigResponseParams extends NSObject implements NSCopying {

	static alloc(): MTRNetworkCommissioningClusterNetworkConfigResponseParams; // inherited from NSObject

	static new(): MTRNetworkCommissioningClusterNetworkConfigResponseParams; // inherited from NSObject

	debugText: string;

	networkIndex: number;

	networkingStatus: number;

	timedInvokeTimeoutMs: number;

	constructor(o: { responseValue: NSDictionary<string, any>; });

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;

	initWithResponseValueError(responseValue: NSDictionary<string, any>): this;
}

declare class MTRNetworkCommissioningClusterNetworkInfo extends MTRNetworkCommissioningClusterNetworkInfoStruct {

	static alloc(): MTRNetworkCommissioningClusterNetworkInfo; // inherited from NSObject

	static new(): MTRNetworkCommissioningClusterNetworkInfo; // inherited from NSObject
}

declare class MTRNetworkCommissioningClusterNetworkInfoStruct extends NSObject implements NSCopying {

	static alloc(): MTRNetworkCommissioningClusterNetworkInfoStruct; // inherited from NSObject

	static new(): MTRNetworkCommissioningClusterNetworkInfoStruct; // inherited from NSObject

	connected: number;

	networkID: NSData;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRNetworkCommissioningClusterRemoveNetworkParams extends NSObject implements NSCopying {

	static alloc(): MTRNetworkCommissioningClusterRemoveNetworkParams; // inherited from NSObject

	static new(): MTRNetworkCommissioningClusterRemoveNetworkParams; // inherited from NSObject

	breadcrumb: number;

	networkID: NSData;

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRNetworkCommissioningClusterReorderNetworkParams extends NSObject implements NSCopying {

	static alloc(): MTRNetworkCommissioningClusterReorderNetworkParams; // inherited from NSObject

	static new(): MTRNetworkCommissioningClusterReorderNetworkParams; // inherited from NSObject

	breadcrumb: number;

	networkID: NSData;

	networkIndex: number;

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRNetworkCommissioningClusterScanNetworksParams extends NSObject implements NSCopying {

	static alloc(): MTRNetworkCommissioningClusterScanNetworksParams; // inherited from NSObject

	static new(): MTRNetworkCommissioningClusterScanNetworksParams; // inherited from NSObject

	breadcrumb: number;

	serverSideProcessingTimeout: number;

	ssid: NSData;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRNetworkCommissioningClusterScanNetworksResponseParams extends NSObject implements NSCopying {

	static alloc(): MTRNetworkCommissioningClusterScanNetworksResponseParams; // inherited from NSObject

	static new(): MTRNetworkCommissioningClusterScanNetworksResponseParams; // inherited from NSObject

	debugText: string;

	networkingStatus: number;

	threadScanResults: NSArray<any>;

	timedInvokeTimeoutMs: number;

	wiFiScanResults: NSArray<any>;

	constructor(o: { responseValue: NSDictionary<string, any>; });

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;

	initWithResponseValueError(responseValue: NSDictionary<string, any>): this;
}

declare class MTRNetworkCommissioningClusterThreadInterfaceScanResult extends MTRNetworkCommissioningClusterThreadInterfaceScanResultStruct {

	static alloc(): MTRNetworkCommissioningClusterThreadInterfaceScanResult; // inherited from NSObject

	static new(): MTRNetworkCommissioningClusterThreadInterfaceScanResult; // inherited from NSObject
}

declare class MTRNetworkCommissioningClusterThreadInterfaceScanResultStruct extends NSObject implements NSCopying {

	static alloc(): MTRNetworkCommissioningClusterThreadInterfaceScanResultStruct; // inherited from NSObject

	static new(): MTRNetworkCommissioningClusterThreadInterfaceScanResultStruct; // inherited from NSObject

	channel: number;

	extendedAddress: NSData;

	extendedPanId: number;

	lqi: number;

	networkName: string;

	panId: number;

	rssi: number;

	version: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRNetworkCommissioningClusterWiFiInterfaceScanResult extends MTRNetworkCommissioningClusterWiFiInterfaceScanResultStruct {

	static alloc(): MTRNetworkCommissioningClusterWiFiInterfaceScanResult; // inherited from NSObject

	static new(): MTRNetworkCommissioningClusterWiFiInterfaceScanResult; // inherited from NSObject
}

declare class MTRNetworkCommissioningClusterWiFiInterfaceScanResultStruct extends NSObject implements NSCopying {

	static alloc(): MTRNetworkCommissioningClusterWiFiInterfaceScanResultStruct; // inherited from NSObject

	static new(): MTRNetworkCommissioningClusterWiFiInterfaceScanResultStruct; // inherited from NSObject

	bssid: NSData;

	channel: number;

	rssi: number;

	security: number;

	ssid: NSData;

	wiFiBand: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare const enum MTRNetworkCommissioningFeature {

	WiFiNetworkInterface = 1,

	ThreadNetworkInterface = 2,

	EthernetNetworkInterface = 4,

	PerDeviceCredentials = 8
}

declare const enum MTRNetworkCommissioningStatus {

	Success = 0,

	OutOfRange = 1,

	BoundsExceeded = 2,

	NetworkIDNotFound = 3,

	DuplicateNetworkID = 4,

	NetworkNotFound = 5,

	RegulatoryError = 6,

	AuthFailure = 7,

	UnsupportedSecurity = 8,

	OtherConnectionFailure = 9,

	IPV6Failed = 10,

	IPBindFailed = 11,

	UnknownError = 12
}

declare const enum MTRNetworkCommissioningWiFiBand {

	Band2G4 = 0,

	Band3G65 = 1,

	Band5G = 2,

	Band6G = 3,

	Band60G = 4,

	Band1G = 5
}

declare const enum MTRNetworkCommissioningWiFiSecurity {

	Unencrypted = 1,

	WEP = 2,

	WepPersonal = 2,

	WPAPersonal = 4,

	WpaPersonal = 4,

	WPA2Personal = 8,

	Wpa2Personal = 8,

	WPA3Personal = 16,

	Wpa3Personal = 16
}

declare const enum MTRNetworkCommissioningWiFiSecurityBitmap {

	Unencrypted = 1,

	WEP = 2,

	WPAPersonal = 4,

	WPA2Personal = 8,

	WPA3Personal = 16,

	WPA3MatterPDC = 32
}

declare var MTRNullValueType: string;

declare class MTROTAHeader extends NSObject {

	static alloc(): MTROTAHeader; // inherited from NSObject

	static new(): MTROTAHeader; // inherited from NSObject

	imageDigest: NSData;

	imageDigestType: MTROTAImageDigestType;

	maxApplicableVersion: number;

	minApplicableVersion: number;

	payloadSize: number;

	productID: number;

	releaseNotesURL: string;

	softwareVersion: number;

	softwareVersionString: string;

	vendorID: number;

	constructor(o: { data: NSData; });

	initWithData(data: NSData): this;
}

declare class MTROTAHeaderParser extends NSObject {

	static alloc(): MTROTAHeaderParser; // inherited from NSObject

	static headerFromDataError(data: NSData): MTROTAHeader;

	static new(): MTROTAHeaderParser; // inherited from NSObject
}

declare const enum MTROTAImageDigestType {

	Sha256 = 1,

	Sha256_128 = 2,

	Sha256_120 = 3,

	Sha256_96 = 4,

	Sha256_64 = 5,

	Sha256_32 = 6,

	Sha384 = 7,

	Sha512 = 8,

	Sha3_224 = 9,

	Sha3_256 = 10,

	Sha3_384 = 11,

	Sha3_512 = 12
}

interface MTROTAProviderDelegate extends NSObjectProtocol {

	handleApplyUpdateRequestForNodeIDControllerParamsCompletion?(nodeID: number, controller: MTRDeviceController, params: MTROTASoftwareUpdateProviderClusterApplyUpdateRequestParams, completion: (p1: MTROTASoftwareUpdateProviderClusterApplyUpdateResponseParams, p2: NSError) => void): void;

	handleApplyUpdateRequestForNodeIDControllerParamsCompletionHandler?(nodeID: number, controller: MTRDeviceController, params: MTROtaSoftwareUpdateProviderClusterApplyUpdateRequestParams, completionHandler: (p1: MTROtaSoftwareUpdateProviderClusterApplyUpdateResponseParams, p2: NSError) => void): void;

	handleBDXQueryForNodeIDControllerBlockSizeBlockIndexBytesToSkipCompletion?(nodeID: number, controller: MTRDeviceController, blockSize: number, blockIndex: number, bytesToSkip: number, completion: (p1: NSData, p2: boolean) => void): void;

	handleBDXQueryForNodeIDControllerBlockSizeBlockIndexBytesToSkipCompletionHandler?(nodeID: number, controller: MTRDeviceController, blockSize: number, blockIndex: number, bytesToSkip: number, completionHandler: (p1: NSData, p2: boolean) => void): void;

	handleBDXTransferSessionBeginForNodeIDControllerFileDesignatorOffsetCompletion?(nodeID: number, controller: MTRDeviceController, fileDesignator: string, offset: number, completion: (p1: NSError) => void): void;

	handleBDXTransferSessionBeginForNodeIDControllerFileDesignatorOffsetCompletionHandler?(nodeID: number, controller: MTRDeviceController, fileDesignator: string, offset: number, completionHandler: (p1: NSError) => void): void;

	handleBDXTransferSessionEndForNodeIDControllerError?(nodeID: number, controller: MTRDeviceController, error: NSError): void;

	handleNotifyUpdateAppliedForNodeIDControllerParamsCompletion?(nodeID: number, controller: MTRDeviceController, params: MTROTASoftwareUpdateProviderClusterNotifyUpdateAppliedParams, completion: (p1: NSError) => void): void;

	handleNotifyUpdateAppliedForNodeIDControllerParamsCompletionHandler?(nodeID: number, controller: MTRDeviceController, params: MTROtaSoftwareUpdateProviderClusterNotifyUpdateAppliedParams, completionHandler: (p1: NSError) => void): void;

	handleQueryImageForNodeIDControllerParamsCompletion?(nodeID: number, controller: MTRDeviceController, params: MTROTASoftwareUpdateProviderClusterQueryImageParams, completion: (p1: MTROTASoftwareUpdateProviderClusterQueryImageResponseParams, p2: NSError) => void): void;

	handleQueryImageForNodeIDControllerParamsCompletionHandler?(nodeID: number, controller: MTRDeviceController, params: MTROtaSoftwareUpdateProviderClusterQueryImageParams, completionHandler: (p1: MTROtaSoftwareUpdateProviderClusterQueryImageResponseParams, p2: NSError) => void): void;
}
declare var MTROTAProviderDelegate: {

	prototype: MTROTAProviderDelegate;
};

declare const enum MTROTASoftwareUpdateProviderApplyUpdateAction {

	Proceed = 0,

	AwaitNextAction = 1,

	Discontinue = 2
}

declare class MTROTASoftwareUpdateProviderClusterApplyUpdateRequestParams extends NSObject implements NSCopying {

	static alloc(): MTROTASoftwareUpdateProviderClusterApplyUpdateRequestParams; // inherited from NSObject

	static new(): MTROTASoftwareUpdateProviderClusterApplyUpdateRequestParams; // inherited from NSObject

	newVersion: number;

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	updateToken: NSData;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTROTASoftwareUpdateProviderClusterApplyUpdateResponseParams extends NSObject implements NSCopying {

	static alloc(): MTROTASoftwareUpdateProviderClusterApplyUpdateResponseParams; // inherited from NSObject

	static new(): MTROTASoftwareUpdateProviderClusterApplyUpdateResponseParams; // inherited from NSObject

	action: number;

	delayedActionTime: number;

	timedInvokeTimeoutMs: number;

	constructor(o: { responseValue: NSDictionary<string, any>; });

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;

	initWithResponseValueError(responseValue: NSDictionary<string, any>): this;
}

declare class MTROTASoftwareUpdateProviderClusterNotifyUpdateAppliedParams extends NSObject implements NSCopying {

	static alloc(): MTROTASoftwareUpdateProviderClusterNotifyUpdateAppliedParams; // inherited from NSObject

	static new(): MTROTASoftwareUpdateProviderClusterNotifyUpdateAppliedParams; // inherited from NSObject

	serverSideProcessingTimeout: number;

	softwareVersion: number;

	timedInvokeTimeoutMs: number;

	updateToken: NSData;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTROTASoftwareUpdateProviderClusterQueryImageParams extends NSObject implements NSCopying {

	static alloc(): MTROTASoftwareUpdateProviderClusterQueryImageParams; // inherited from NSObject

	static new(): MTROTASoftwareUpdateProviderClusterQueryImageParams; // inherited from NSObject

	hardwareVersion: number;

	location: string;

	metadataForProvider: NSData;

	productID: number;

	productId: number;

	protocolsSupported: NSArray<any>;

	requestorCanConsent: number;

	serverSideProcessingTimeout: number;

	softwareVersion: number;

	timedInvokeTimeoutMs: number;

	vendorID: number;

	vendorId: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTROTASoftwareUpdateProviderClusterQueryImageResponseParams extends NSObject implements NSCopying {

	static alloc(): MTROTASoftwareUpdateProviderClusterQueryImageResponseParams; // inherited from NSObject

	static new(): MTROTASoftwareUpdateProviderClusterQueryImageResponseParams; // inherited from NSObject

	delayedActionTime: number;

	imageURI: string;

	metadataForRequestor: NSData;

	softwareVersion: number;

	softwareVersionString: string;

	status: number;

	timedInvokeTimeoutMs: number;

	updateToken: NSData;

	userConsentNeeded: number;

	constructor(o: { responseValue: NSDictionary<string, any>; });

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;

	initWithResponseValueError(responseValue: NSDictionary<string, any>): this;
}

declare const enum MTROTASoftwareUpdateProviderDownloadProtocol {

	BDXSynchronous = 0,

	BDXAsynchronous = 1,

	HTTPS = 2,

	VendorSpecific = 3
}

declare const enum MTROTASoftwareUpdateProviderOTAApplyUpdateAction {

	Proceed = 0,

	AwaitNextAction = 1,

	Discontinue = 2
}

declare const enum MTROTASoftwareUpdateProviderOTADownloadProtocol {

	BDXSynchronous = 0,

	BDXAsynchronous = 1,

	HTTPS = 2,

	VendorSpecific = 3
}

declare const enum MTROTASoftwareUpdateProviderOTAQueryStatus {

	UpdateAvailable = 0,

	Busy = 1,

	NotAvailable = 2,

	DownloadProtocolNotSupported = 3
}

declare const enum MTROTASoftwareUpdateProviderStatus {

	UpdateAvailable = 0,

	Busy = 1,

	NotAvailable = 2,

	DownloadProtocolNotSupported = 3
}

declare const enum MTROTASoftwareUpdateRequestorAnnouncementReason {

	SimpleAnnouncement = 0,

	UpdateAvailable = 1,

	UrgentUpdateAvailable = 2
}

declare const enum MTROTASoftwareUpdateRequestorChangeReason {

	Unknown = 0,

	Success = 1,

	Failure = 2,

	TimeOut = 3,

	DelayByProvider = 4
}

declare class MTROTASoftwareUpdateRequestorClusterAnnounceOTAProviderParams extends NSObject implements NSCopying {

	static alloc(): MTROTASoftwareUpdateRequestorClusterAnnounceOTAProviderParams; // inherited from NSObject

	static new(): MTROTASoftwareUpdateRequestorClusterAnnounceOTAProviderParams; // inherited from NSObject

	announcementReason: number;

	endpoint: number;

	metadataForNode: NSData;

	providerNodeID: number;

	providerNodeId: number;

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	vendorID: number;

	vendorId: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTROTASoftwareUpdateRequestorClusterDownloadErrorEvent extends NSObject implements NSCopying {

	static alloc(): MTROTASoftwareUpdateRequestorClusterDownloadErrorEvent; // inherited from NSObject

	static new(): MTROTASoftwareUpdateRequestorClusterDownloadErrorEvent; // inherited from NSObject

	bytesDownloaded: number;

	platformCode: number;

	progressPercent: number;

	softwareVersion: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTROTASoftwareUpdateRequestorClusterProviderLocation extends NSObject implements NSCopying {

	static alloc(): MTROTASoftwareUpdateRequestorClusterProviderLocation; // inherited from NSObject

	static new(): MTROTASoftwareUpdateRequestorClusterProviderLocation; // inherited from NSObject

	endpoint: number;

	fabricIndex: number;

	providerNodeID: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTROTASoftwareUpdateRequestorClusterStateTransitionEvent extends NSObject implements NSCopying {

	static alloc(): MTROTASoftwareUpdateRequestorClusterStateTransitionEvent; // inherited from NSObject

	static new(): MTROTASoftwareUpdateRequestorClusterStateTransitionEvent; // inherited from NSObject

	newState: number;

	previousState: number;

	reason: number;

	targetSoftwareVersion: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTROTASoftwareUpdateRequestorClusterVersionAppliedEvent extends NSObject implements NSCopying {

	static alloc(): MTROTASoftwareUpdateRequestorClusterVersionAppliedEvent; // inherited from NSObject

	static new(): MTROTASoftwareUpdateRequestorClusterVersionAppliedEvent; // inherited from NSObject

	productID: number;

	softwareVersion: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare const enum MTROTASoftwareUpdateRequestorOTAAnnouncementReason {

	SimpleAnnouncement = 0,

	UpdateAvailable = 1,

	UrgentUpdateAvailable = 2
}

declare const enum MTROTASoftwareUpdateRequestorOTAChangeReason {

	Unknown = 0,

	Success = 1,

	Failure = 2,

	TimeOut = 3,

	DelayByProvider = 4
}

declare const enum MTROTASoftwareUpdateRequestorOTAUpdateState {

	Unknown = 0,

	Idle = 1,

	Querying = 2,

	DelayedOnQuery = 3,

	Downloading = 4,

	Applying = 5,

	DelayedOnApply = 6,

	RollingBack = 7,

	DelayedOnUserConsent = 8
}

declare const enum MTROTASoftwareUpdateRequestorUpdateState {

	Unknown = 0,

	Idle = 1,

	Querying = 2,

	DelayedOnQuery = 3,

	Downloading = 4,

	Applying = 5,

	DelayedOnApply = 6,

	RollingBack = 7,

	DelayedOnUserConsent = 8
}

declare const enum MTROccupancySensingOccupancyBitmap {

	Occupied = 1
}

declare const enum MTROccupancySensingOccupancySensorType {

	PIR = 0,

	Ultrasonic = 1,

	PIRAndUltrasonic = 2,

	PhysicalContact = 3
}

declare const enum MTROccupancySensingOccupancySensorTypeBitmap {

	PIR = 1,

	Ultrasonic = 2,

	PhysicalContact = 4
}

declare var MTROctetStringValueType: string;

declare class MTROnOffClusterOffParams extends NSObject implements NSCopying {

	static alloc(): MTROnOffClusterOffParams; // inherited from NSObject

	static new(): MTROnOffClusterOffParams; // inherited from NSObject

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTROnOffClusterOffWithEffectParams extends NSObject implements NSCopying {

	static alloc(): MTROnOffClusterOffWithEffectParams; // inherited from NSObject

	static new(): MTROnOffClusterOffWithEffectParams; // inherited from NSObject

	effectId: number;

	effectIdentifier: number;

	effectVariant: number;

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTROnOffClusterOnParams extends NSObject implements NSCopying {

	static alloc(): MTROnOffClusterOnParams; // inherited from NSObject

	static new(): MTROnOffClusterOnParams; // inherited from NSObject

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTROnOffClusterOnWithRecallGlobalSceneParams extends NSObject implements NSCopying {

	static alloc(): MTROnOffClusterOnWithRecallGlobalSceneParams; // inherited from NSObject

	static new(): MTROnOffClusterOnWithRecallGlobalSceneParams; // inherited from NSObject

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTROnOffClusterOnWithTimedOffParams extends NSObject implements NSCopying {

	static alloc(): MTROnOffClusterOnWithTimedOffParams; // inherited from NSObject

	static new(): MTROnOffClusterOnWithTimedOffParams; // inherited from NSObject

	offWaitTime: number;

	onOffControl: number;

	onTime: number;

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTROnOffClusterToggleParams extends NSObject implements NSCopying {

	static alloc(): MTROnOffClusterToggleParams; // inherited from NSObject

	static new(): MTROnOffClusterToggleParams; // inherited from NSObject

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare const enum MTROnOffControl {

	AcceptOnlyWhenOn = 1
}

declare const enum MTROnOffControlBitmap {

	AcceptOnlyWhenOn = 1
}

declare const enum MTROnOffDelayedAllOffEffectVariant {

	VariantDelayedOffFastFade = 0,

	VariantFadeToOffIn0p8Seconds = 0,

	VariantNoFade = 1,

	VariantDelayedOffSlowFade = 2,

	Variant50PercentDimDownIn0p8SecondsThenFadeToOffIn12Seconds = 2
}

declare const enum MTROnOffDyingLightEffectVariant {

	VariantDyingLightFadeOff = 0,

	Variant20PercenterDimUpIn0p5SecondsThenFadeToOffIn1Second = 0
}

declare const enum MTROnOffEffectIdentifier {

	DelayedAllOff = 0,

	DyingLight = 1
}

declare const enum MTROnOffFeature {

	Lighting = 1,

	DeadFrontBehavior = 2,

	DeadFront = 2,

	OffOnly = 4
}

declare const enum MTROnOffStartUpOnOff {

	Off = 0,

	On = 1,

	Toggle = 2,

	TogglePreviousOnOff = 2
}

declare class MTROnboardingPayloadParser extends NSObject {

	static alloc(): MTROnboardingPayloadParser; // inherited from NSObject

	static new(): MTROnboardingPayloadParser; // inherited from NSObject

	static setupPayloadForOnboardingPayloadError(onboardingPayload: string): MTRSetupPayload;
}

declare const enum MTROnboardingPayloadType {

	QRCode = 0,

	ManualCode = 1,

	NFC = 2
}

declare class MTROperationalCSRInfo extends NSObject {

	static alloc(): MTROperationalCSRInfo; // inherited from NSObject

	static new(): MTROperationalCSRInfo; // inherited from NSObject

	readonly attestationSignature: NSData;

	readonly csr: NSData;

	readonly csrElementsTLV: NSData;

	readonly csrNonce: NSData;

	constructor(o: { CSR: NSData; csrNonce: NSData; csrElementsTLV: NSData; attestationSignature: NSData; });

	constructor(o: { CSRElementsTLV: NSData; attestationSignature: NSData; });

	constructor(o: { CSRNonce: NSData; csrElementsTLV: NSData; attestationSignature: NSData; });

	constructor(o: { CSRResponseParams: MTROperationalCredentialsClusterCSRResponseParams; });

	initWithCSRCsrNonceCsrElementsTLVAttestationSignature(csr: NSData, csrNonce: NSData, csrElementsTLV: NSData, attestationSignature: NSData): this;

	initWithCSRElementsTLVAttestationSignature(csrElementsTLV: NSData, attestationSignature: NSData): this;

	initWithCSRNonceCsrElementsTLVAttestationSignature(csrNonce: NSData, csrElementsTLV: NSData, attestationSignature: NSData): this;

	initWithCSRResponseParams(responseParams: MTROperationalCredentialsClusterCSRResponseParams): this;
}

declare class MTROperationalCertificateChain extends NSObject {

	static alloc(): MTROperationalCertificateChain; // inherited from NSObject

	static new(): MTROperationalCertificateChain; // inherited from NSObject

	adminSubject: number;

	intermediateCertificate: NSData;

	operationalCertificate: NSData;

	rootCertificate: NSData;

	constructor(o: { operationalCertificate: NSData; intermediateCertificate: NSData; rootCertificate: NSData; adminSubject: number; });

	initWithOperationalCertificateIntermediateCertificateRootCertificateAdminSubject(operationalCertificate: NSData, intermediateCertificate: NSData, rootCertificate: NSData, adminSubject: number): this;
}

interface MTROperationalCertificateIssuer {

	shouldSkipAttestationCertificateValidation: boolean;

	issueOperationalCertificateForRequestAttestationInfoControllerCompletion(csrInfo: MTROperationalCSRInfo, attestationInfo: MTRDeviceAttestationInfo, controller: MTRDeviceController, completion: (p1: MTROperationalCertificateChain, p2: NSError) => void): void;
}
declare var MTROperationalCertificateIssuer: {

	prototype: MTROperationalCertificateIssuer;
};

declare const enum MTROperationalCredentialsCertificateChainType {

	DACCertificate = 1,

	PAICertificate = 2
}

declare class MTROperationalCredentialsClusterAddNOCParams extends NSObject implements NSCopying {

	static alloc(): MTROperationalCredentialsClusterAddNOCParams; // inherited from NSObject

	static new(): MTROperationalCredentialsClusterAddNOCParams; // inherited from NSObject

	adminVendorId: number;

	caseAdminSubject: number;

	icacValue: NSData;

	ipkValue: NSData;

	nocValue: NSData;

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTROperationalCredentialsClusterAddTrustedRootCertificateParams extends NSObject implements NSCopying {

	static alloc(): MTROperationalCredentialsClusterAddTrustedRootCertificateParams; // inherited from NSObject

	static new(): MTROperationalCredentialsClusterAddTrustedRootCertificateParams; // inherited from NSObject

	rootCACertificate: NSData;

	rootCertificate: NSData;

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTROperationalCredentialsClusterAttestationRequestParams extends NSObject implements NSCopying {

	static alloc(): MTROperationalCredentialsClusterAttestationRequestParams; // inherited from NSObject

	static new(): MTROperationalCredentialsClusterAttestationRequestParams; // inherited from NSObject

	attestationNonce: NSData;

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTROperationalCredentialsClusterAttestationResponseParams extends NSObject implements NSCopying {

	static alloc(): MTROperationalCredentialsClusterAttestationResponseParams; // inherited from NSObject

	static new(): MTROperationalCredentialsClusterAttestationResponseParams; // inherited from NSObject

	attestationElements: NSData;

	attestationSignature: NSData;

	signature: NSData;

	timedInvokeTimeoutMs: number;

	constructor(o: { responseValue: NSDictionary<string, any>; });

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;

	initWithResponseValueError(responseValue: NSDictionary<string, any>): this;
}

declare class MTROperationalCredentialsClusterCSRRequestParams extends NSObject implements NSCopying {

	static alloc(): MTROperationalCredentialsClusterCSRRequestParams; // inherited from NSObject

	static new(): MTROperationalCredentialsClusterCSRRequestParams; // inherited from NSObject

	csrNonce: NSData;

	isForUpdateNOC: number;

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTROperationalCredentialsClusterCSRResponseParams extends NSObject implements NSCopying {

	static alloc(): MTROperationalCredentialsClusterCSRResponseParams; // inherited from NSObject

	static new(): MTROperationalCredentialsClusterCSRResponseParams; // inherited from NSObject

	attestationSignature: NSData;

	nocsrElements: NSData;

	timedInvokeTimeoutMs: number;

	constructor(o: { responseValue: NSDictionary<string, any>; });

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;

	initWithResponseValueError(responseValue: NSDictionary<string, any>): this;
}

declare class MTROperationalCredentialsClusterCertificateChainRequestParams extends NSObject implements NSCopying {

	static alloc(): MTROperationalCredentialsClusterCertificateChainRequestParams; // inherited from NSObject

	static new(): MTROperationalCredentialsClusterCertificateChainRequestParams; // inherited from NSObject

	certificateType: number;

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTROperationalCredentialsClusterCertificateChainResponseParams extends NSObject implements NSCopying {

	static alloc(): MTROperationalCredentialsClusterCertificateChainResponseParams; // inherited from NSObject

	static new(): MTROperationalCredentialsClusterCertificateChainResponseParams; // inherited from NSObject

	certificate: NSData;

	timedInvokeTimeoutMs: number;

	constructor(o: { responseValue: NSDictionary<string, any>; });

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;

	initWithResponseValueError(responseValue: NSDictionary<string, any>): this;
}

declare class MTROperationalCredentialsClusterFabricDescriptor extends MTROperationalCredentialsClusterFabricDescriptorStruct {

	static alloc(): MTROperationalCredentialsClusterFabricDescriptor; // inherited from NSObject

	static new(): MTROperationalCredentialsClusterFabricDescriptor; // inherited from NSObject
}

declare class MTROperationalCredentialsClusterFabricDescriptorStruct extends NSObject implements NSCopying {

	static alloc(): MTROperationalCredentialsClusterFabricDescriptorStruct; // inherited from NSObject

	static new(): MTROperationalCredentialsClusterFabricDescriptorStruct; // inherited from NSObject

	fabricID: number;

	fabricId: number;

	fabricIndex: number;

	label: string;

	nodeID: number;

	nodeId: number;

	rootPublicKey: NSData;

	vendorID: number;

	vendorId: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTROperationalCredentialsClusterNOCResponseParams extends NSObject implements NSCopying {

	static alloc(): MTROperationalCredentialsClusterNOCResponseParams; // inherited from NSObject

	static new(): MTROperationalCredentialsClusterNOCResponseParams; // inherited from NSObject

	debugText: string;

	fabricIndex: number;

	statusCode: number;

	timedInvokeTimeoutMs: number;

	constructor(o: { responseValue: NSDictionary<string, any>; });

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;

	initWithResponseValueError(responseValue: NSDictionary<string, any>): this;
}

declare class MTROperationalCredentialsClusterNOCStruct extends NSObject implements NSCopying {

	static alloc(): MTROperationalCredentialsClusterNOCStruct; // inherited from NSObject

	static new(): MTROperationalCredentialsClusterNOCStruct; // inherited from NSObject

	fabricIndex: number;

	icac: NSData;

	noc: NSData;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTROperationalCredentialsClusterRemoveFabricParams extends NSObject implements NSCopying {

	static alloc(): MTROperationalCredentialsClusterRemoveFabricParams; // inherited from NSObject

	static new(): MTROperationalCredentialsClusterRemoveFabricParams; // inherited from NSObject

	fabricIndex: number;

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTROperationalCredentialsClusterUpdateFabricLabelParams extends NSObject implements NSCopying {

	static alloc(): MTROperationalCredentialsClusterUpdateFabricLabelParams; // inherited from NSObject

	static new(): MTROperationalCredentialsClusterUpdateFabricLabelParams; // inherited from NSObject

	label: string;

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTROperationalCredentialsClusterUpdateNOCParams extends NSObject implements NSCopying {

	static alloc(): MTROperationalCredentialsClusterUpdateNOCParams; // inherited from NSObject

	static new(): MTROperationalCredentialsClusterUpdateNOCParams; // inherited from NSObject

	icacValue: NSData;

	nocValue: NSData;

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare const enum MTROperationalCredentialsNodeOperationalCertStatus {

	OK = 0,

	InvalidPublicKey = 1,

	InvalidNodeOpId = 2,

	InvalidNOC = 3,

	MissingCsr = 4,

	TableFull = 5,

	InvalidAdminSubject = 6,

	FabricConflict = 9,

	LabelConflict = 10,

	InvalidFabricIndex = 11
}

declare const enum MTROperationalCredentialsOperationalCertStatus {

	SUCCESS = 0,

	InvalidPublicKey = 1,

	InvalidNodeOpId = 2,

	InvalidNOC = 3,

	MissingCsr = 4,

	TableFull = 5,

	InvalidAdminSubject = 6,

	FabricConflict = 9,

	LabelConflict = 10,

	InvalidFabricIndex = 11
}

declare const enum MTROperationalState {

	Stopped = 0,

	Running = 1,

	Paused = 2,

	Error = 3
}

declare class MTROperationalStateClusterErrorStateStruct extends NSObject implements NSCopying {

	static alloc(): MTROperationalStateClusterErrorStateStruct; // inherited from NSObject

	static new(): MTROperationalStateClusterErrorStateStruct; // inherited from NSObject

	errorStateDetails: string;

	errorStateID: number;

	errorStateLabel: string;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTROperationalStateClusterOperationCompletionEvent extends NSObject implements NSCopying {

	static alloc(): MTROperationalStateClusterOperationCompletionEvent; // inherited from NSObject

	static new(): MTROperationalStateClusterOperationCompletionEvent; // inherited from NSObject

	completionErrorCode: number;

	pausedTime: number;

	totalOperationalTime: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTROperationalStateClusterOperationalCommandResponseParams extends NSObject implements NSCopying {

	static alloc(): MTROperationalStateClusterOperationalCommandResponseParams; // inherited from NSObject

	static new(): MTROperationalStateClusterOperationalCommandResponseParams; // inherited from NSObject

	commandResponseState: MTROperationalStateClusterErrorStateStruct;

	constructor(o: { responseValue: NSDictionary<string, any>; });

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;

	initWithResponseValueError(responseValue: NSDictionary<string, any>): this;
}

declare class MTROperationalStateClusterOperationalErrorEvent extends NSObject implements NSCopying {

	static alloc(): MTROperationalStateClusterOperationalErrorEvent; // inherited from NSObject

	static new(): MTROperationalStateClusterOperationalErrorEvent; // inherited from NSObject

	errorState: MTROperationalStateClusterErrorStateStruct;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTROperationalStateClusterOperationalStateStruct extends NSObject implements NSCopying {

	static alloc(): MTROperationalStateClusterOperationalStateStruct; // inherited from NSObject

	static new(): MTROperationalStateClusterOperationalStateStruct; // inherited from NSObject

	operationalStateID: number;

	operationalStateLabel: string;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTROperationalStateClusterPauseParams extends NSObject implements NSCopying {

	static alloc(): MTROperationalStateClusterPauseParams; // inherited from NSObject

	static new(): MTROperationalStateClusterPauseParams; // inherited from NSObject

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTROperationalStateClusterResumeParams extends NSObject implements NSCopying {

	static alloc(): MTROperationalStateClusterResumeParams; // inherited from NSObject

	static new(): MTROperationalStateClusterResumeParams; // inherited from NSObject

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTROperationalStateClusterStartParams extends NSObject implements NSCopying {

	static alloc(): MTROperationalStateClusterStartParams; // inherited from NSObject

	static new(): MTROperationalStateClusterStartParams; // inherited from NSObject

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTROperationalStateClusterStopParams extends NSObject implements NSCopying {

	static alloc(): MTROperationalStateClusterStopParams; // inherited from NSObject

	static new(): MTROperationalStateClusterStopParams; // inherited from NSObject

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare const enum MTROperationalStateErrorState {

	NoError = 0,

	UnableToStartOrResume = 1,

	UnableToCompleteOperation = 2,

	CommandInvalidInState = 3
}

declare class MTROptionalQRCodeInfo extends NSObject {

	static alloc(): MTROptionalQRCodeInfo; // inherited from NSObject

	static new(): MTROptionalQRCodeInfo; // inherited from NSObject

	infoType: number;

	integerValue: number;

	stringValue: string;

	tag: number;

	type: MTROptionalQRCodeInfoType;
}

declare const enum MTROptionalQRCodeInfoType {

	Unknown = 0,

	String = 1,

	Int32 = 2
}

declare class MTROtaSoftwareUpdateProviderClusterApplyUpdateRequestParams extends MTROTASoftwareUpdateProviderClusterApplyUpdateRequestParams {

	static alloc(): MTROtaSoftwareUpdateProviderClusterApplyUpdateRequestParams; // inherited from NSObject

	static new(): MTROtaSoftwareUpdateProviderClusterApplyUpdateRequestParams; // inherited from NSObject
}

declare class MTROtaSoftwareUpdateProviderClusterApplyUpdateResponseParams extends MTROTASoftwareUpdateProviderClusterApplyUpdateResponseParams {

	static alloc(): MTROtaSoftwareUpdateProviderClusterApplyUpdateResponseParams; // inherited from NSObject

	static new(): MTROtaSoftwareUpdateProviderClusterApplyUpdateResponseParams; // inherited from NSObject
}

declare class MTROtaSoftwareUpdateProviderClusterNotifyUpdateAppliedParams extends MTROTASoftwareUpdateProviderClusterNotifyUpdateAppliedParams {

	static alloc(): MTROtaSoftwareUpdateProviderClusterNotifyUpdateAppliedParams; // inherited from NSObject

	static new(): MTROtaSoftwareUpdateProviderClusterNotifyUpdateAppliedParams; // inherited from NSObject
}

declare class MTROtaSoftwareUpdateProviderClusterQueryImageParams extends MTROTASoftwareUpdateProviderClusterQueryImageParams {

	static alloc(): MTROtaSoftwareUpdateProviderClusterQueryImageParams; // inherited from NSObject

	static new(): MTROtaSoftwareUpdateProviderClusterQueryImageParams; // inherited from NSObject
}

declare class MTROtaSoftwareUpdateProviderClusterQueryImageResponseParams extends MTROTASoftwareUpdateProviderClusterQueryImageResponseParams {

	static alloc(): MTROtaSoftwareUpdateProviderClusterQueryImageResponseParams; // inherited from NSObject

	static new(): MTROtaSoftwareUpdateProviderClusterQueryImageResponseParams; // inherited from NSObject
}

declare const enum MTROtaSoftwareUpdateProviderOTAApplyUpdateAction {

	Proceed = 0,

	AwaitNextAction = 1,

	Discontinue = 2
}

declare const enum MTROtaSoftwareUpdateProviderOTADownloadProtocol {

	BDXSynchronous = 0,

	BDXAsynchronous = 1,

	HTTPS = 2,

	VendorSpecific = 3
}

declare const enum MTROtaSoftwareUpdateProviderOTAQueryStatus {

	UpdateAvailable = 0,

	Busy = 1,

	NotAvailable = 2,

	DownloadProtocolNotSupported = 3
}

declare class MTROtaSoftwareUpdateRequestorClusterAnnounceOtaProviderParams extends MTROTASoftwareUpdateRequestorClusterAnnounceOTAProviderParams {

	static alloc(): MTROtaSoftwareUpdateRequestorClusterAnnounceOtaProviderParams; // inherited from NSObject

	static new(): MTROtaSoftwareUpdateRequestorClusterAnnounceOtaProviderParams; // inherited from NSObject
}

declare class MTROtaSoftwareUpdateRequestorClusterDownloadErrorEvent extends MTROTASoftwareUpdateRequestorClusterDownloadErrorEvent {

	static alloc(): MTROtaSoftwareUpdateRequestorClusterDownloadErrorEvent; // inherited from NSObject

	static new(): MTROtaSoftwareUpdateRequestorClusterDownloadErrorEvent; // inherited from NSObject
}

declare class MTROtaSoftwareUpdateRequestorClusterProviderLocation extends MTROTASoftwareUpdateRequestorClusterProviderLocation {

	static alloc(): MTROtaSoftwareUpdateRequestorClusterProviderLocation; // inherited from NSObject

	static new(): MTROtaSoftwareUpdateRequestorClusterProviderLocation; // inherited from NSObject
}

declare class MTROtaSoftwareUpdateRequestorClusterStateTransitionEvent extends MTROTASoftwareUpdateRequestorClusterStateTransitionEvent {

	static alloc(): MTROtaSoftwareUpdateRequestorClusterStateTransitionEvent; // inherited from NSObject

	static new(): MTROtaSoftwareUpdateRequestorClusterStateTransitionEvent; // inherited from NSObject
}

declare class MTROtaSoftwareUpdateRequestorClusterVersionAppliedEvent extends MTROTASoftwareUpdateRequestorClusterVersionAppliedEvent {

	static alloc(): MTROtaSoftwareUpdateRequestorClusterVersionAppliedEvent; // inherited from NSObject

	static new(): MTROtaSoftwareUpdateRequestorClusterVersionAppliedEvent; // inherited from NSObject
}

declare const enum MTROtaSoftwareUpdateRequestorOTAAnnouncementReason {

	SimpleAnnouncement = 0,

	UpdateAvailable = 1,

	UrgentUpdateAvailable = 2
}

declare const enum MTROtaSoftwareUpdateRequestorOTAChangeReason {

	Unknown = 0,

	Success = 1,

	Failure = 2,

	TimeOut = 3,

	DelayByProvider = 4
}

declare const enum MTROtaSoftwareUpdateRequestorOTAUpdateState {

	Unknown = 0,

	Idle = 1,

	Querying = 2,

	DelayedOnQuery = 3,

	Downloading = 4,

	Applying = 5,

	DelayedOnApply = 6,

	RollingBack = 7,

	DelayedOnUserConsent = 8
}

declare const enum MTRPairingStatus {

	Unknown = 0,

	Success = 1,

	Failed = 2,

	DiscoveringMoreDevices = 3
}

interface MTRPersistentStorageDelegate extends MTRStorage {
}
declare var MTRPersistentStorageDelegate: {

	prototype: MTRPersistentStorageDelegate;
};

declare const enum MTRPowerSourceBatApprovedChemistry {

	Unspecified = 0,

	Alkaline = 1,

	LithiumCarbonFluoride = 2,

	LithiumChromiumOxide = 3,

	LithiumCopperOxide = 4,

	LithiumIronDisulfide = 5,

	LithiumManganeseDioxide = 6,

	LithiumThionylChloride = 7,

	Magnesium = 8,

	MercuryOxide = 9,

	NickelOxyhydride = 10,

	SilverOxide = 11,

	ZincAir = 12,

	ZincCarbon = 13,

	ZincChloride = 14,

	ZincManganeseDioxide = 15,

	LeadAcid = 16,

	LithiumCobaltOxide = 17,

	LithiumIon = 18,

	LithiumIonPolymer = 19,

	LithiumIronPhosphate = 20,

	LithiumSulfur = 21,

	LithiumTitanate = 22,

	NickelCadmium = 23,

	NickelHydrogen = 24,

	NickelIron = 25,

	NickelMetalHydride = 26,

	NickelZinc = 27,

	SilverZinc = 28,

	SodiumIon = 29,

	SodiumSulfur = 30,

	ZincBromide = 31,

	ZincCerium = 32
}

declare const enum MTRPowerSourceBatChargeFault {

	Unspecified = 0,

	Unspecfied = 0,

	AmbientTooHot = 1,

	AmbientTooCold = 2,

	BatteryTooHot = 3,

	BatteryTooCold = 4,

	BatteryAbsent = 5,

	BatteryOverVoltage = 6,

	BatteryUnderVoltage = 7,

	ChargerOverVoltage = 8,

	ChargerUnderVoltage = 9,

	SafetyTimeout = 10
}

declare const enum MTRPowerSourceBatChargeLevel {

	OK = 0,

	Ok = 0,

	Warning = 1,

	Critical = 2
}

declare const enum MTRPowerSourceBatChargeState {

	Unknown = 0,

	IsCharging = 1,

	IsAtFullCharge = 2,

	IsNotCharging = 3
}

declare const enum MTRPowerSourceBatCommonDesignation {

	DesignationUnspecified = 0,

	DesignationAAA = 1,

	DesignationAA = 2,

	DesignationC = 3,

	DesignationD = 4,

	Designation4v5 = 5,

	Designation6v0 = 6,

	Designation9v0 = 7,

	Designation12AA = 8,

	DesignationAAAA = 9,

	DesignationA = 10,

	DesignationB = 11,

	DesignationF = 12,

	DesignationN = 13,

	DesignationNo6 = 14,

	DesignationSubC = 15,

	DesignationA23 = 16,

	DesignationA27 = 17,

	DesignationBA5800 = 18,

	DesignationDuplex = 19,

	Designation4SR44 = 20,

	Designation523 = 21,

	Designation531 = 22,

	Designation15v0 = 23,

	Designation22v5 = 24,

	Designation30v0 = 25,

	Designation45v0 = 26,

	Designation67v5 = 27,

	DesignationJ = 28,

	DesignationCR123A = 29,

	DesignationCR2 = 30,

	Designation2CR5 = 31,

	DesignationCRP2 = 32,

	DesignationCRV3 = 33,

	DesignationSR41 = 34,

	DesignationSR43 = 35,

	DesignationSR44 = 36,

	DesignationSR45 = 37,

	DesignationSR48 = 38,

	DesignationSR54 = 39,

	DesignationSR55 = 40,

	DesignationSR57 = 41,

	DesignationSR58 = 42,

	DesignationSR59 = 43,

	DesignationSR60 = 44,

	DesignationSR63 = 45,

	DesignationSR64 = 46,

	DesignationSR65 = 47,

	DesignationSR66 = 48,

	DesignationSR67 = 49,

	DesignationSR68 = 50,

	DesignationSR69 = 51,

	DesignationSR516 = 52,

	DesignationSR731 = 53,

	DesignationSR712 = 54,

	DesignationLR932 = 55,

	DesignationA5 = 56,

	DesignationA10 = 57,

	DesignationA13 = 58,

	DesignationA312 = 59,

	DesignationA675 = 60,

	DesignationAC41E = 61,

	Designation10180 = 62,

	Designation10280 = 63,

	Designation10440 = 64,

	Designation14250 = 65,

	Designation14430 = 66,

	Designation14500 = 67,

	Designation14650 = 68,

	Designation15270 = 69,

	Designation16340 = 70,

	DesignationRCR123A = 71,

	Designation17500 = 72,

	Designation17670 = 73,

	Designation18350 = 74,

	Designation18500 = 75,

	Designation18650 = 76,

	Designation19670 = 77,

	Designation25500 = 78,

	Designation26650 = 79,

	Designation32600 = 80
}

declare const enum MTRPowerSourceBatFault {

	Unspecified = 0,

	Unspecfied = 0,

	OverTemp = 1,

	UnderTemp = 2
}

declare const enum MTRPowerSourceBatReplaceability {

	Unspecified = 0,

	NotReplaceable = 1,

	UserReplaceable = 2,

	FactoryReplaceable = 3
}

declare class MTRPowerSourceClusterBatChargeFaultChangeEvent extends NSObject implements NSCopying {

	static alloc(): MTRPowerSourceClusterBatChargeFaultChangeEvent; // inherited from NSObject

	static new(): MTRPowerSourceClusterBatChargeFaultChangeEvent; // inherited from NSObject

	current: NSArray<any>;

	previous: NSArray<any>;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRPowerSourceClusterBatChargeFaultChangeType extends NSObject implements NSCopying {

	static alloc(): MTRPowerSourceClusterBatChargeFaultChangeType; // inherited from NSObject

	static new(): MTRPowerSourceClusterBatChargeFaultChangeType; // inherited from NSObject

	current: NSArray<any>;

	previous: NSArray<any>;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRPowerSourceClusterBatFaultChangeEvent extends NSObject implements NSCopying {

	static alloc(): MTRPowerSourceClusterBatFaultChangeEvent; // inherited from NSObject

	static new(): MTRPowerSourceClusterBatFaultChangeEvent; // inherited from NSObject

	current: NSArray<any>;

	previous: NSArray<any>;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRPowerSourceClusterBatFaultChangeType extends NSObject implements NSCopying {

	static alloc(): MTRPowerSourceClusterBatFaultChangeType; // inherited from NSObject

	static new(): MTRPowerSourceClusterBatFaultChangeType; // inherited from NSObject

	current: NSArray<any>;

	previous: NSArray<any>;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRPowerSourceClusterWiredFaultChangeEvent extends NSObject implements NSCopying {

	static alloc(): MTRPowerSourceClusterWiredFaultChangeEvent; // inherited from NSObject

	static new(): MTRPowerSourceClusterWiredFaultChangeEvent; // inherited from NSObject

	current: NSArray<any>;

	previous: NSArray<any>;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRPowerSourceClusterWiredFaultChangeType extends NSObject implements NSCopying {

	static alloc(): MTRPowerSourceClusterWiredFaultChangeType; // inherited from NSObject

	static new(): MTRPowerSourceClusterWiredFaultChangeType; // inherited from NSObject

	current: NSArray<any>;

	previous: NSArray<any>;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare const enum MTRPowerSourceFeature {

	Wired = 1,

	Battery = 2,

	Rechargeable = 4,

	Replaceable = 8
}

declare const enum MTRPowerSourceStatus {

	Unspecified = 0,

	Unspecfied = 0,

	Active = 1,

	Standby = 2,

	Unavailable = 3
}

declare const enum MTRPowerSourceWiredCurrentType {

	AC = 0,

	DC = 1
}

declare const enum MTRPowerSourceWiredFault {

	Unspecified = 0,

	Unspecfied = 0,

	OverVoltage = 1,

	UnderVoltage = 2
}

declare const enum MTRPressureMeasurementFeature {

	Extended = 1
}

declare const enum MTRPressureMeasurementPressureFeature {

	Extended = 1,

	EXT = 1
}

declare class MTRProductIdentity extends NSObject {

	static alloc(): MTRProductIdentity; // inherited from NSObject

	static new(): MTRProductIdentity; // inherited from NSObject

	readonly productID: number;

	readonly vendorID: number;

	constructor(o: { vendorID: number; productID: number; });

	initWithVendorIDProductID(vendorID: number, productID: number): this;
}

declare class MTRPumpConfigurationAndControlClusterAirDetectionEvent extends NSObject implements NSCopying {

	static alloc(): MTRPumpConfigurationAndControlClusterAirDetectionEvent; // inherited from NSObject

	static new(): MTRPumpConfigurationAndControlClusterAirDetectionEvent; // inherited from NSObject

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRPumpConfigurationAndControlClusterDryRunningEvent extends NSObject implements NSCopying {

	static alloc(): MTRPumpConfigurationAndControlClusterDryRunningEvent; // inherited from NSObject

	static new(): MTRPumpConfigurationAndControlClusterDryRunningEvent; // inherited from NSObject

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRPumpConfigurationAndControlClusterElectronicFatalFailureEvent extends NSObject implements NSCopying {

	static alloc(): MTRPumpConfigurationAndControlClusterElectronicFatalFailureEvent; // inherited from NSObject

	static new(): MTRPumpConfigurationAndControlClusterElectronicFatalFailureEvent; // inherited from NSObject

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRPumpConfigurationAndControlClusterElectronicNonFatalFailureEvent extends NSObject implements NSCopying {

	static alloc(): MTRPumpConfigurationAndControlClusterElectronicNonFatalFailureEvent; // inherited from NSObject

	static new(): MTRPumpConfigurationAndControlClusterElectronicNonFatalFailureEvent; // inherited from NSObject

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRPumpConfigurationAndControlClusterElectronicTemperatureHighEvent extends NSObject implements NSCopying {

	static alloc(): MTRPumpConfigurationAndControlClusterElectronicTemperatureHighEvent; // inherited from NSObject

	static new(): MTRPumpConfigurationAndControlClusterElectronicTemperatureHighEvent; // inherited from NSObject

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRPumpConfigurationAndControlClusterGeneralFaultEvent extends NSObject implements NSCopying {

	static alloc(): MTRPumpConfigurationAndControlClusterGeneralFaultEvent; // inherited from NSObject

	static new(): MTRPumpConfigurationAndControlClusterGeneralFaultEvent; // inherited from NSObject

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRPumpConfigurationAndControlClusterLeakageEvent extends NSObject implements NSCopying {

	static alloc(): MTRPumpConfigurationAndControlClusterLeakageEvent; // inherited from NSObject

	static new(): MTRPumpConfigurationAndControlClusterLeakageEvent; // inherited from NSObject

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRPumpConfigurationAndControlClusterMotorTemperatureHighEvent extends NSObject implements NSCopying {

	static alloc(): MTRPumpConfigurationAndControlClusterMotorTemperatureHighEvent; // inherited from NSObject

	static new(): MTRPumpConfigurationAndControlClusterMotorTemperatureHighEvent; // inherited from NSObject

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRPumpConfigurationAndControlClusterPowerMissingPhaseEvent extends NSObject implements NSCopying {

	static alloc(): MTRPumpConfigurationAndControlClusterPowerMissingPhaseEvent; // inherited from NSObject

	static new(): MTRPumpConfigurationAndControlClusterPowerMissingPhaseEvent; // inherited from NSObject

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRPumpConfigurationAndControlClusterPumpBlockedEvent extends NSObject implements NSCopying {

	static alloc(): MTRPumpConfigurationAndControlClusterPumpBlockedEvent; // inherited from NSObject

	static new(): MTRPumpConfigurationAndControlClusterPumpBlockedEvent; // inherited from NSObject

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRPumpConfigurationAndControlClusterPumpMotorFatalFailureEvent extends NSObject implements NSCopying {

	static alloc(): MTRPumpConfigurationAndControlClusterPumpMotorFatalFailureEvent; // inherited from NSObject

	static new(): MTRPumpConfigurationAndControlClusterPumpMotorFatalFailureEvent; // inherited from NSObject

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRPumpConfigurationAndControlClusterSensorFailureEvent extends NSObject implements NSCopying {

	static alloc(): MTRPumpConfigurationAndControlClusterSensorFailureEvent; // inherited from NSObject

	static new(): MTRPumpConfigurationAndControlClusterSensorFailureEvent; // inherited from NSObject

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRPumpConfigurationAndControlClusterSupplyVoltageHighEvent extends NSObject implements NSCopying {

	static alloc(): MTRPumpConfigurationAndControlClusterSupplyVoltageHighEvent; // inherited from NSObject

	static new(): MTRPumpConfigurationAndControlClusterSupplyVoltageHighEvent; // inherited from NSObject

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRPumpConfigurationAndControlClusterSupplyVoltageLowEvent extends NSObject implements NSCopying {

	static alloc(): MTRPumpConfigurationAndControlClusterSupplyVoltageLowEvent; // inherited from NSObject

	static new(): MTRPumpConfigurationAndControlClusterSupplyVoltageLowEvent; // inherited from NSObject

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRPumpConfigurationAndControlClusterSystemPressureHighEvent extends NSObject implements NSCopying {

	static alloc(): MTRPumpConfigurationAndControlClusterSystemPressureHighEvent; // inherited from NSObject

	static new(): MTRPumpConfigurationAndControlClusterSystemPressureHighEvent; // inherited from NSObject

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRPumpConfigurationAndControlClusterSystemPressureLowEvent extends NSObject implements NSCopying {

	static alloc(): MTRPumpConfigurationAndControlClusterSystemPressureLowEvent; // inherited from NSObject

	static new(): MTRPumpConfigurationAndControlClusterSystemPressureLowEvent; // inherited from NSObject

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRPumpConfigurationAndControlClusterTurbineOperationEvent extends NSObject implements NSCopying {

	static alloc(): MTRPumpConfigurationAndControlClusterTurbineOperationEvent; // inherited from NSObject

	static new(): MTRPumpConfigurationAndControlClusterTurbineOperationEvent; // inherited from NSObject

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare const enum MTRPumpConfigurationAndControlControlMode {

	ConstantSpeed = 0,

	ConstantPressure = 1,

	ProportionalPressure = 2,

	ConstantFlow = 3,

	ConstantTemperature = 5,

	Automatic = 7
}

declare const enum MTRPumpConfigurationAndControlFeature {

	ConstantPressure = 1,

	CompensatedPressure = 2,

	ConstantFlow = 4,

	ConstantSpeed = 8,

	ConstantTemperature = 16,

	Automatic = 32,

	LocalOperation = 64
}

declare const enum MTRPumpConfigurationAndControlOperationMode {

	Normal = 0,

	Minimum = 1,

	Maximum = 2,

	Local = 3
}

declare const enum MTRPumpConfigurationAndControlPumpControlMode {

	ConstantSpeed = 0,

	ConstantPressure = 1,

	ProportionalPressure = 2,

	ConstantFlow = 3,

	ConstantTemperature = 5,

	Automatic = 7
}

declare const enum MTRPumpConfigurationAndControlPumpFeature {

	ConstantPressure = 1,

	CompensatedPressure = 2,

	ConstantFlow = 4,

	ConstantSpeed = 8,

	ConstantTemperature = 16,

	Automatic = 32,

	LocalOperation = 64,

	Local = 64
}

declare const enum MTRPumpConfigurationAndControlPumpOperationMode {

	Normal = 0,

	Minimum = 1,

	Maximum = 2,

	Local = 3
}

declare const enum MTRPumpConfigurationAndControlPumpStatus {

	DeviceFault = 1,

	Supplyfault = 2,

	SpeedLow = 4,

	SpeedHigh = 8,

	LocalOverride = 16,

	Running = 32,

	RemotePressure = 64,

	RemoteFlow = 128,

	RemoteTemperature = 256
}

declare const enum MTRPumpConfigurationAndControlPumpStatusBitmap {

	DeviceFault = 1,

	SupplyFault = 2,

	Supplyfault = 2,

	SpeedLow = 4,

	SpeedHigh = 8,

	LocalOverride = 16,

	Running = 32,

	RemotePressure = 64,

	RemoteFlow = 128,

	RemoteTemperature = 256
}

declare class MTRQRCodeSetupPayloadParser extends NSObject {

	static alloc(): MTRQRCodeSetupPayloadParser; // inherited from NSObject

	static new(): MTRQRCodeSetupPayloadParser; // inherited from NSObject

	constructor(o: { base38Representation: string; });

	initWithBase38Representation(base38Representation: string): this;

	populatePayload(): MTRSetupPayload;
}

declare class MTRRVCCleanModeClusterChangeToModeParams extends NSObject implements NSCopying {

	static alloc(): MTRRVCCleanModeClusterChangeToModeParams; // inherited from NSObject

	static new(): MTRRVCCleanModeClusterChangeToModeParams; // inherited from NSObject

	newMode: number;

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRRVCCleanModeClusterChangeToModeResponseParams extends NSObject implements NSCopying {

	static alloc(): MTRRVCCleanModeClusterChangeToModeResponseParams; // inherited from NSObject

	static new(): MTRRVCCleanModeClusterChangeToModeResponseParams; // inherited from NSObject

	status: number;

	statusText: string;

	constructor(o: { responseValue: NSDictionary<string, any>; });

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;

	initWithResponseValueError(responseValue: NSDictionary<string, any>): this;
}

declare class MTRRVCCleanModeClusterModeOptionStruct extends NSObject implements NSCopying {

	static alloc(): MTRRVCCleanModeClusterModeOptionStruct; // inherited from NSObject

	static new(): MTRRVCCleanModeClusterModeOptionStruct; // inherited from NSObject

	label: string;

	mode: number;

	modeTags: NSArray<any>;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRRVCCleanModeClusterModeTagStruct extends NSObject implements NSCopying {

	static alloc(): MTRRVCCleanModeClusterModeTagStruct; // inherited from NSObject

	static new(): MTRRVCCleanModeClusterModeTagStruct; // inherited from NSObject

	mfgCode: number;

	value: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare const enum MTRRVCCleanModeFeature {

	OnOff = 1
}

declare const enum MTRRVCCleanModeModeTag {

	DeepClean = 16384,

	Vacuum = 16385,

	Mop = 16386
}

declare const enum MTRRVCCleanModeStatusCode {

	CleaningInProgress = 64
}

declare class MTRRVCOperationalStateClusterErrorStateStruct extends NSObject implements NSCopying {

	static alloc(): MTRRVCOperationalStateClusterErrorStateStruct; // inherited from NSObject

	static new(): MTRRVCOperationalStateClusterErrorStateStruct; // inherited from NSObject

	errorStateDetails: string;

	errorStateID: number;

	errorStateLabel: string;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRRVCOperationalStateClusterOperationCompletionEvent extends NSObject implements NSCopying {

	static alloc(): MTRRVCOperationalStateClusterOperationCompletionEvent; // inherited from NSObject

	static new(): MTRRVCOperationalStateClusterOperationCompletionEvent; // inherited from NSObject

	completionErrorCode: number;

	pausedTime: number;

	totalOperationalTime: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRRVCOperationalStateClusterOperationalCommandResponseParams extends NSObject implements NSCopying {

	static alloc(): MTRRVCOperationalStateClusterOperationalCommandResponseParams; // inherited from NSObject

	static new(): MTRRVCOperationalStateClusterOperationalCommandResponseParams; // inherited from NSObject

	commandResponseState: MTRRVCOperationalStateClusterErrorStateStruct;

	constructor(o: { responseValue: NSDictionary<string, any>; });

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;

	initWithResponseValueError(responseValue: NSDictionary<string, any>): this;
}

declare class MTRRVCOperationalStateClusterOperationalErrorEvent extends NSObject implements NSCopying {

	static alloc(): MTRRVCOperationalStateClusterOperationalErrorEvent; // inherited from NSObject

	static new(): MTRRVCOperationalStateClusterOperationalErrorEvent; // inherited from NSObject

	errorState: MTRRVCOperationalStateClusterErrorStateStruct;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRRVCOperationalStateClusterOperationalStateStruct extends NSObject implements NSCopying {

	static alloc(): MTRRVCOperationalStateClusterOperationalStateStruct; // inherited from NSObject

	static new(): MTRRVCOperationalStateClusterOperationalStateStruct; // inherited from NSObject

	operationalStateID: number;

	operationalStateLabel: string;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRRVCOperationalStateClusterPauseParams extends NSObject implements NSCopying {

	static alloc(): MTRRVCOperationalStateClusterPauseParams; // inherited from NSObject

	static new(): MTRRVCOperationalStateClusterPauseParams; // inherited from NSObject

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRRVCOperationalStateClusterResumeParams extends NSObject implements NSCopying {

	static alloc(): MTRRVCOperationalStateClusterResumeParams; // inherited from NSObject

	static new(): MTRRVCOperationalStateClusterResumeParams; // inherited from NSObject

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare const enum MTRRVCOperationalStateErrorState {

	FailedToFindChargingDock = 64,

	Stuck = 65,

	DustBinMissing = 66,

	DustBinFull = 67,

	WaterTankEmpty = 68,

	WaterTankMissing = 69,

	WaterTankLidOpen = 70,

	MopCleaningPadMissing = 71
}

declare const enum MTRRVCOperationalStateOperationalState {

	SeekingCharger = 64,

	Charging = 65,

	Docked = 66
}

declare class MTRRVCRunModeClusterChangeToModeParams extends NSObject implements NSCopying {

	static alloc(): MTRRVCRunModeClusterChangeToModeParams; // inherited from NSObject

	static new(): MTRRVCRunModeClusterChangeToModeParams; // inherited from NSObject

	newMode: number;

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRRVCRunModeClusterChangeToModeResponseParams extends NSObject implements NSCopying {

	static alloc(): MTRRVCRunModeClusterChangeToModeResponseParams; // inherited from NSObject

	static new(): MTRRVCRunModeClusterChangeToModeResponseParams; // inherited from NSObject

	status: number;

	statusText: string;

	constructor(o: { responseValue: NSDictionary<string, any>; });

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;

	initWithResponseValueError(responseValue: NSDictionary<string, any>): this;
}

declare class MTRRVCRunModeClusterModeOptionStruct extends NSObject implements NSCopying {

	static alloc(): MTRRVCRunModeClusterModeOptionStruct; // inherited from NSObject

	static new(): MTRRVCRunModeClusterModeOptionStruct; // inherited from NSObject

	label: string;

	mode: number;

	modeTags: NSArray<any>;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRRVCRunModeClusterModeTagStruct extends NSObject implements NSCopying {

	static alloc(): MTRRVCRunModeClusterModeTagStruct; // inherited from NSObject

	static new(): MTRRVCRunModeClusterModeTagStruct; // inherited from NSObject

	mfgCode: number;

	value: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare const enum MTRRVCRunModeFeature {

	OnOff = 1
}

declare const enum MTRRVCRunModeModeTag {

	Idle = 16384,

	Cleaning = 16385
}

declare const enum MTRRVCRunModeStatusCode {

	Stuck = 65,

	DustBinMissing = 66,

	DustBinFull = 67,

	WaterTankEmpty = 68,

	WaterTankMissing = 69,

	WaterTankLidOpen = 70,

	MopCleaningPadMissing = 71,

	BatteryLow = 72
}

declare class MTRReadParams extends NSObject implements NSCopying {

	static alloc(): MTRReadParams; // inherited from NSObject

	static new(): MTRReadParams; // inherited from NSObject

	fabricFiltered: number;

	filterByFabric: boolean;

	minEventNumber: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRScenesClusterAddSceneParams extends NSObject implements NSCopying {

	static alloc(): MTRScenesClusterAddSceneParams; // inherited from NSObject

	static new(): MTRScenesClusterAddSceneParams; // inherited from NSObject

	extensionFieldSets: NSArray<any>;

	groupID: number;

	groupId: number;

	sceneID: number;

	sceneId: number;

	sceneName: string;

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	transitionTime: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRScenesClusterAddSceneResponseParams extends NSObject implements NSCopying {

	static alloc(): MTRScenesClusterAddSceneResponseParams; // inherited from NSObject

	static new(): MTRScenesClusterAddSceneResponseParams; // inherited from NSObject

	groupID: number;

	groupId: number;

	sceneID: number;

	sceneId: number;

	status: number;

	timedInvokeTimeoutMs: number;

	constructor(o: { responseValue: NSDictionary<string, any>; });

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;

	initWithResponseValueError(responseValue: NSDictionary<string, any>): this;
}

declare class MTRScenesClusterAttributeValuePair extends NSObject implements NSCopying {

	static alloc(): MTRScenesClusterAttributeValuePair; // inherited from NSObject

	static new(): MTRScenesClusterAttributeValuePair; // inherited from NSObject

	attributeID: number;

	attributeId: number;

	attributeValue: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRScenesClusterCopySceneParams extends NSObject implements NSCopying {

	static alloc(): MTRScenesClusterCopySceneParams; // inherited from NSObject

	static new(): MTRScenesClusterCopySceneParams; // inherited from NSObject

	groupIdFrom: number;

	groupIdTo: number;

	groupIdentifierFrom: number;

	groupIdentifierTo: number;

	mode: number;

	sceneIdFrom: number;

	sceneIdTo: number;

	sceneIdentifierFrom: number;

	sceneIdentifierTo: number;

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRScenesClusterCopySceneResponseParams extends NSObject implements NSCopying {

	static alloc(): MTRScenesClusterCopySceneResponseParams; // inherited from NSObject

	static new(): MTRScenesClusterCopySceneResponseParams; // inherited from NSObject

	groupIdFrom: number;

	groupIdentifierFrom: number;

	sceneIdFrom: number;

	sceneIdentifierFrom: number;

	status: number;

	timedInvokeTimeoutMs: number;

	constructor(o: { responseValue: NSDictionary<string, any>; });

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;

	initWithResponseValueError(responseValue: NSDictionary<string, any>): this;
}

declare class MTRScenesClusterEnhancedAddSceneParams extends NSObject implements NSCopying {

	static alloc(): MTRScenesClusterEnhancedAddSceneParams; // inherited from NSObject

	static new(): MTRScenesClusterEnhancedAddSceneParams; // inherited from NSObject

	extensionFieldSets: NSArray<any>;

	groupID: number;

	groupId: number;

	sceneID: number;

	sceneId: number;

	sceneName: string;

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	transitionTime: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRScenesClusterEnhancedAddSceneResponseParams extends NSObject implements NSCopying {

	static alloc(): MTRScenesClusterEnhancedAddSceneResponseParams; // inherited from NSObject

	static new(): MTRScenesClusterEnhancedAddSceneResponseParams; // inherited from NSObject

	groupID: number;

	groupId: number;

	sceneID: number;

	sceneId: number;

	status: number;

	timedInvokeTimeoutMs: number;

	constructor(o: { responseValue: NSDictionary<string, any>; });

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;

	initWithResponseValueError(responseValue: NSDictionary<string, any>): this;
}

declare class MTRScenesClusterEnhancedViewSceneParams extends NSObject implements NSCopying {

	static alloc(): MTRScenesClusterEnhancedViewSceneParams; // inherited from NSObject

	static new(): MTRScenesClusterEnhancedViewSceneParams; // inherited from NSObject

	groupID: number;

	groupId: number;

	sceneID: number;

	sceneId: number;

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRScenesClusterEnhancedViewSceneResponseParams extends NSObject implements NSCopying {

	static alloc(): MTRScenesClusterEnhancedViewSceneResponseParams; // inherited from NSObject

	static new(): MTRScenesClusterEnhancedViewSceneResponseParams; // inherited from NSObject

	extensionFieldSets: NSArray<any>;

	groupID: number;

	groupId: number;

	sceneID: number;

	sceneId: number;

	sceneName: string;

	status: number;

	timedInvokeTimeoutMs: number;

	transitionTime: number;

	constructor(o: { responseValue: NSDictionary<string, any>; });

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;

	initWithResponseValueError(responseValue: NSDictionary<string, any>): this;
}

declare class MTRScenesClusterExtensionFieldSet extends NSObject implements NSCopying {

	static alloc(): MTRScenesClusterExtensionFieldSet; // inherited from NSObject

	static new(): MTRScenesClusterExtensionFieldSet; // inherited from NSObject

	attributeValueList: NSArray<any>;

	clusterID: number;

	clusterId: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRScenesClusterGetSceneMembershipParams extends NSObject implements NSCopying {

	static alloc(): MTRScenesClusterGetSceneMembershipParams; // inherited from NSObject

	static new(): MTRScenesClusterGetSceneMembershipParams; // inherited from NSObject

	groupID: number;

	groupId: number;

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRScenesClusterGetSceneMembershipResponseParams extends NSObject implements NSCopying {

	static alloc(): MTRScenesClusterGetSceneMembershipResponseParams; // inherited from NSObject

	static new(): MTRScenesClusterGetSceneMembershipResponseParams; // inherited from NSObject

	capacity: number;

	groupID: number;

	groupId: number;

	sceneList: NSArray<any>;

	status: number;

	timedInvokeTimeoutMs: number;

	constructor(o: { responseValue: NSDictionary<string, any>; });

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;

	initWithResponseValueError(responseValue: NSDictionary<string, any>): this;
}

declare class MTRScenesClusterRecallSceneParams extends NSObject implements NSCopying {

	static alloc(): MTRScenesClusterRecallSceneParams; // inherited from NSObject

	static new(): MTRScenesClusterRecallSceneParams; // inherited from NSObject

	groupID: number;

	groupId: number;

	sceneID: number;

	sceneId: number;

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	transitionTime: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRScenesClusterRemoveAllScenesParams extends NSObject implements NSCopying {

	static alloc(): MTRScenesClusterRemoveAllScenesParams; // inherited from NSObject

	static new(): MTRScenesClusterRemoveAllScenesParams; // inherited from NSObject

	groupID: number;

	groupId: number;

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRScenesClusterRemoveAllScenesResponseParams extends NSObject implements NSCopying {

	static alloc(): MTRScenesClusterRemoveAllScenesResponseParams; // inherited from NSObject

	static new(): MTRScenesClusterRemoveAllScenesResponseParams; // inherited from NSObject

	groupID: number;

	groupId: number;

	status: number;

	timedInvokeTimeoutMs: number;

	constructor(o: { responseValue: NSDictionary<string, any>; });

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;

	initWithResponseValueError(responseValue: NSDictionary<string, any>): this;
}

declare class MTRScenesClusterRemoveSceneParams extends NSObject implements NSCopying {

	static alloc(): MTRScenesClusterRemoveSceneParams; // inherited from NSObject

	static new(): MTRScenesClusterRemoveSceneParams; // inherited from NSObject

	groupID: number;

	groupId: number;

	sceneID: number;

	sceneId: number;

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRScenesClusterRemoveSceneResponseParams extends NSObject implements NSCopying {

	static alloc(): MTRScenesClusterRemoveSceneResponseParams; // inherited from NSObject

	static new(): MTRScenesClusterRemoveSceneResponseParams; // inherited from NSObject

	groupID: number;

	groupId: number;

	sceneID: number;

	sceneId: number;

	status: number;

	timedInvokeTimeoutMs: number;

	constructor(o: { responseValue: NSDictionary<string, any>; });

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;

	initWithResponseValueError(responseValue: NSDictionary<string, any>): this;
}

declare class MTRScenesClusterStoreSceneParams extends NSObject implements NSCopying {

	static alloc(): MTRScenesClusterStoreSceneParams; // inherited from NSObject

	static new(): MTRScenesClusterStoreSceneParams; // inherited from NSObject

	groupID: number;

	groupId: number;

	sceneID: number;

	sceneId: number;

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRScenesClusterStoreSceneResponseParams extends NSObject implements NSCopying {

	static alloc(): MTRScenesClusterStoreSceneResponseParams; // inherited from NSObject

	static new(): MTRScenesClusterStoreSceneResponseParams; // inherited from NSObject

	groupID: number;

	groupId: number;

	sceneID: number;

	sceneId: number;

	status: number;

	timedInvokeTimeoutMs: number;

	constructor(o: { responseValue: NSDictionary<string, any>; });

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;

	initWithResponseValueError(responseValue: NSDictionary<string, any>): this;
}

declare class MTRScenesClusterViewSceneParams extends NSObject implements NSCopying {

	static alloc(): MTRScenesClusterViewSceneParams; // inherited from NSObject

	static new(): MTRScenesClusterViewSceneParams; // inherited from NSObject

	groupID: number;

	groupId: number;

	sceneID: number;

	sceneId: number;

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRScenesClusterViewSceneResponseParams extends NSObject implements NSCopying {

	static alloc(): MTRScenesClusterViewSceneResponseParams; // inherited from NSObject

	static new(): MTRScenesClusterViewSceneResponseParams; // inherited from NSObject

	extensionFieldSets: NSArray<any>;

	groupID: number;

	groupId: number;

	sceneID: number;

	sceneId: number;

	sceneName: string;

	status: number;

	timedInvokeTimeoutMs: number;

	transitionTime: number;

	constructor(o: { responseValue: NSDictionary<string, any>; });

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;

	initWithResponseValueError(responseValue: NSDictionary<string, any>): this;
}

declare const enum MTRScenesCopyMode {

	CopyAllScenes = 1
}

declare const enum MTRScenesCopyModeBitmap {

	CopyAllScenes = 1
}

declare const enum MTRScenesFeature {

	SceneNames = 1,

	Explicit = 2,

	TableSize = 4,

	FabricScenes = 8
}

declare function MTRSetLogCallback(logTypeThreshold: MTRLogType, callback: (p1: MTRLogType, p2: string, p3: string) => void): void;

declare class MTRSetupPayload extends NSObject implements NSSecureCoding {

	static alloc(): MTRSetupPayload; // inherited from NSObject

	static generateRandomPIN(): number;

	static generateRandomSetupPasscode(): number;

	static new(): MTRSetupPayload; // inherited from NSObject

	static setupPayloadWithOnboardingPayloadError(onboardingPayload: string): MTRSetupPayload;

	commissioningFlow: MTRCommissioningFlow;

	discoveryCapabilities: MTRDiscoveryCapabilities;

	discriminator: number;

	hasShortDiscriminator: boolean;

	productID: number;

	rendezvousInformation: number;

	serialNumber: string;

	setUpPINCode: number;

	setupPasscode: number;

	vendorID: number;

	version: number;

	static readonly supportsSecureCoding: boolean; // inherited from NSSecureCoding

	constructor(o: { coder: NSCoder; }); // inherited from NSCoding

	constructor(o: { setupPasscode: number; discriminator: number; });

	encodeWithCoder(coder: NSCoder): void;

	getAllOptionalVendorData(): NSArray<MTROptionalQRCodeInfo>;

	initWithCoder(coder: NSCoder): this;

	initWithSetupPasscodeDiscriminator(setupPasscode: number, discriminator: number): this;

	manualEntryCode(): string;

	qrCodeString(): string;
}

declare var MTRSignedIntegerValueType: string;

declare var MTRSizeThreadExtendedPANID: number;

declare var MTRSizeThreadExtendedPanId: number;

declare var MTRSizeThreadMasterKey: number;

declare var MTRSizeThreadNetworkName: number;

declare var MTRSizeThreadPANID: number;

declare var MTRSizeThreadPSKc: number;

declare class MTRSoftwareDiagnosticsClusterResetWatermarksParams extends NSObject implements NSCopying {

	static alloc(): MTRSoftwareDiagnosticsClusterResetWatermarksParams; // inherited from NSObject

	static new(): MTRSoftwareDiagnosticsClusterResetWatermarksParams; // inherited from NSObject

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRSoftwareDiagnosticsClusterSoftwareFaultEvent extends NSObject implements NSCopying {

	static alloc(): MTRSoftwareDiagnosticsClusterSoftwareFaultEvent; // inherited from NSObject

	static new(): MTRSoftwareDiagnosticsClusterSoftwareFaultEvent; // inherited from NSObject

	faultRecording: NSData;

	id: number;

	name: string;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRSoftwareDiagnosticsClusterThreadMetrics extends MTRSoftwareDiagnosticsClusterThreadMetricsStruct {

	static alloc(): MTRSoftwareDiagnosticsClusterThreadMetrics; // inherited from NSObject

	static new(): MTRSoftwareDiagnosticsClusterThreadMetrics; // inherited from NSObject
}

declare class MTRSoftwareDiagnosticsClusterThreadMetricsStruct extends NSObject implements NSCopying {

	static alloc(): MTRSoftwareDiagnosticsClusterThreadMetricsStruct; // inherited from NSObject

	static new(): MTRSoftwareDiagnosticsClusterThreadMetricsStruct; // inherited from NSObject

	id: number;

	name: string;

	stackFreeCurrent: number;

	stackFreeMinimum: number;

	stackSize: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare const enum MTRSoftwareDiagnosticsFeature {

	Watermarks = 1,

	WaterMarks = 1
}

interface MTRStorage extends NSObjectProtocol {

	removeStorageDataForKey(key: string): boolean;

	setStorageDataForKey(value: NSData, key: string): boolean;

	storageDataForKey(key: string): NSData;
}
declare var MTRStorage: {

	prototype: MTRStorage;
};

declare var MTRStructureValueType: string;

declare class MTRSubscribeParams extends MTRReadParams {

	static alloc(): MTRSubscribeParams; // inherited from NSObject

	static new(): MTRSubscribeParams; // inherited from NSObject

	autoResubscribe: number;

	keepPreviousSubscriptions: number;

	maxInterval: number;

	minInterval: number;

	replaceExistingSubscriptions: boolean;

	reportEventsUrgently: boolean;

	resubscribeAutomatically: boolean;

	constructor(o: { minInterval: number; maxInterval: number; });

	initWithMinIntervalMaxInterval(minInterval: number, maxInterval: number): this;
}

declare class MTRSwitchClusterInitialPressEvent extends NSObject implements NSCopying {

	static alloc(): MTRSwitchClusterInitialPressEvent; // inherited from NSObject

	static new(): MTRSwitchClusterInitialPressEvent; // inherited from NSObject

	newPosition: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRSwitchClusterLongPressEvent extends NSObject implements NSCopying {

	static alloc(): MTRSwitchClusterLongPressEvent; // inherited from NSObject

	static new(): MTRSwitchClusterLongPressEvent; // inherited from NSObject

	newPosition: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRSwitchClusterLongReleaseEvent extends NSObject implements NSCopying {

	static alloc(): MTRSwitchClusterLongReleaseEvent; // inherited from NSObject

	static new(): MTRSwitchClusterLongReleaseEvent; // inherited from NSObject

	previousPosition: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRSwitchClusterMultiPressCompleteEvent extends NSObject implements NSCopying {

	static alloc(): MTRSwitchClusterMultiPressCompleteEvent; // inherited from NSObject

	static new(): MTRSwitchClusterMultiPressCompleteEvent; // inherited from NSObject

	newPosition: number;

	previousPosition: number;

	totalNumberOfPressesCounted: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRSwitchClusterMultiPressOngoingEvent extends NSObject implements NSCopying {

	static alloc(): MTRSwitchClusterMultiPressOngoingEvent; // inherited from NSObject

	static new(): MTRSwitchClusterMultiPressOngoingEvent; // inherited from NSObject

	currentNumberOfPressesCounted: number;

	newPosition: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRSwitchClusterShortReleaseEvent extends NSObject implements NSCopying {

	static alloc(): MTRSwitchClusterShortReleaseEvent; // inherited from NSObject

	static new(): MTRSwitchClusterShortReleaseEvent; // inherited from NSObject

	previousPosition: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRSwitchClusterSwitchLatchedEvent extends NSObject implements NSCopying {

	static alloc(): MTRSwitchClusterSwitchLatchedEvent; // inherited from NSObject

	static new(): MTRSwitchClusterSwitchLatchedEvent; // inherited from NSObject

	newPosition: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare const enum MTRSwitchFeature {

	LatchingSwitch = 1,

	MomentarySwitch = 2,

	MomentarySwitchRelease = 4,

	MomentarySwitchLongPress = 8,

	MomentarySwitchMultiPress = 16
}

declare class MTRTargetNavigatorClusterNavigateTargetParams extends NSObject implements NSCopying {

	static alloc(): MTRTargetNavigatorClusterNavigateTargetParams; // inherited from NSObject

	static new(): MTRTargetNavigatorClusterNavigateTargetParams; // inherited from NSObject

	data: string;

	serverSideProcessingTimeout: number;

	target: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRTargetNavigatorClusterNavigateTargetResponseParams extends NSObject implements NSCopying {

	static alloc(): MTRTargetNavigatorClusterNavigateTargetResponseParams; // inherited from NSObject

	static new(): MTRTargetNavigatorClusterNavigateTargetResponseParams; // inherited from NSObject

	data: string;

	status: number;

	timedInvokeTimeoutMs: number;

	constructor(o: { responseValue: NSDictionary<string, any>; });

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;

	initWithResponseValueError(responseValue: NSDictionary<string, any>): this;
}

declare class MTRTargetNavigatorClusterTargetInfo extends MTRTargetNavigatorClusterTargetInfoStruct {

	static alloc(): MTRTargetNavigatorClusterTargetInfo; // inherited from NSObject

	static new(): MTRTargetNavigatorClusterTargetInfo; // inherited from NSObject
}

declare class MTRTargetNavigatorClusterTargetInfoStruct extends NSObject implements NSCopying {

	static alloc(): MTRTargetNavigatorClusterTargetInfoStruct; // inherited from NSObject

	static new(): MTRTargetNavigatorClusterTargetInfoStruct; // inherited from NSObject

	identifier: number;

	name: string;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare const enum MTRTargetNavigatorStatus {

	Success = 0,

	TargetNotFound = 1,

	NotAllowed = 2
}

declare const enum MTRTestClusterBitmap16MaskMap {

	MaskVal1 = 1,

	MaskVal2 = 2,

	MaskVal3 = 4,

	MaskVal4 = 16384
}

declare const enum MTRTestClusterBitmap32MaskMap {

	MaskVal1 = 1,

	MaskVal2 = 2,

	MaskVal3 = 4,

	MaskVal4 = 1073741824
}

declare const enum MTRTestClusterBitmap64MaskMap {

	MaskVal1 = 1,

	MaskVal2 = 2,

	MaskVal3 = 4,

	MaskVal4 = 4611686018427387904
}

declare const enum MTRTestClusterBitmap8MaskMap {

	MaskVal1 = 1,

	MaskVal2 = 2,

	MaskVal3 = 4,

	MaskVal4 = 64
}

declare class MTRTestClusterClusterBooleanResponseParams extends MTRUnitTestingClusterBooleanResponseParams {

	static alloc(): MTRTestClusterClusterBooleanResponseParams; // inherited from NSObject

	static new(): MTRTestClusterClusterBooleanResponseParams; // inherited from NSObject
}

declare class MTRTestClusterClusterDoubleNestedStructList extends MTRUnitTestingClusterDoubleNestedStructList {

	static alloc(): MTRTestClusterClusterDoubleNestedStructList; // inherited from NSObject

	static new(): MTRTestClusterClusterDoubleNestedStructList; // inherited from NSObject
}

declare class MTRTestClusterClusterNestedStruct extends MTRUnitTestingClusterNestedStruct {

	static alloc(): MTRTestClusterClusterNestedStruct; // inherited from NSObject

	static new(): MTRTestClusterClusterNestedStruct; // inherited from NSObject

	c: MTRTestClusterClusterSimpleStruct;
}

declare class MTRTestClusterClusterNestedStructList extends MTRUnitTestingClusterNestedStructList {

	static alloc(): MTRTestClusterClusterNestedStructList; // inherited from NSObject

	static new(): MTRTestClusterClusterNestedStructList; // inherited from NSObject

	c: MTRTestClusterClusterSimpleStruct;
}

declare class MTRTestClusterClusterNullablesAndOptionalsStruct extends MTRUnitTestingClusterNullablesAndOptionalsStruct {

	static alloc(): MTRTestClusterClusterNullablesAndOptionalsStruct; // inherited from NSObject

	static new(): MTRTestClusterClusterNullablesAndOptionalsStruct; // inherited from NSObject

	nullableOptionalStruct: MTRTestClusterClusterSimpleStruct;

	nullableStruct: MTRTestClusterClusterSimpleStruct;

	optionalStruct: MTRTestClusterClusterSimpleStruct;
}

declare class MTRTestClusterClusterSimpleStruct extends MTRUnitTestingClusterSimpleStruct {

	static alloc(): MTRTestClusterClusterSimpleStruct; // inherited from NSObject

	static new(): MTRTestClusterClusterSimpleStruct; // inherited from NSObject
}

declare class MTRTestClusterClusterSimpleStructEchoRequestParams extends MTRUnitTestingClusterSimpleStructEchoRequestParams {

	static alloc(): MTRTestClusterClusterSimpleStructEchoRequestParams; // inherited from NSObject

	static new(): MTRTestClusterClusterSimpleStructEchoRequestParams; // inherited from NSObject
}

declare class MTRTestClusterClusterSimpleStructResponseParams extends MTRUnitTestingClusterSimpleStructResponseParams {

	static alloc(): MTRTestClusterClusterSimpleStructResponseParams; // inherited from NSObject

	static new(): MTRTestClusterClusterSimpleStructResponseParams; // inherited from NSObject
}

declare class MTRTestClusterClusterTestAddArgumentsParams extends MTRUnitTestingClusterTestAddArgumentsParams {

	static alloc(): MTRTestClusterClusterTestAddArgumentsParams; // inherited from NSObject

	static new(): MTRTestClusterClusterTestAddArgumentsParams; // inherited from NSObject
}

declare class MTRTestClusterClusterTestAddArgumentsResponseParams extends MTRUnitTestingClusterTestAddArgumentsResponseParams {

	static alloc(): MTRTestClusterClusterTestAddArgumentsResponseParams; // inherited from NSObject

	static new(): MTRTestClusterClusterTestAddArgumentsResponseParams; // inherited from NSObject
}

declare class MTRTestClusterClusterTestComplexNullableOptionalRequestParams extends MTRUnitTestingClusterTestComplexNullableOptionalRequestParams {

	static alloc(): MTRTestClusterClusterTestComplexNullableOptionalRequestParams; // inherited from NSObject

	static new(): MTRTestClusterClusterTestComplexNullableOptionalRequestParams; // inherited from NSObject
}

declare class MTRTestClusterClusterTestComplexNullableOptionalResponseParams extends MTRUnitTestingClusterTestComplexNullableOptionalResponseParams {

	static alloc(): MTRTestClusterClusterTestComplexNullableOptionalResponseParams; // inherited from NSObject

	static new(): MTRTestClusterClusterTestComplexNullableOptionalResponseParams; // inherited from NSObject
}

declare class MTRTestClusterClusterTestEmitTestEventRequestParams extends MTRUnitTestingClusterTestEmitTestEventRequestParams {

	static alloc(): MTRTestClusterClusterTestEmitTestEventRequestParams; // inherited from NSObject

	static new(): MTRTestClusterClusterTestEmitTestEventRequestParams; // inherited from NSObject
}

declare class MTRTestClusterClusterTestEmitTestEventResponseParams extends MTRUnitTestingClusterTestEmitTestEventResponseParams {

	static alloc(): MTRTestClusterClusterTestEmitTestEventResponseParams; // inherited from NSObject

	static new(): MTRTestClusterClusterTestEmitTestEventResponseParams; // inherited from NSObject
}

declare class MTRTestClusterClusterTestEmitTestFabricScopedEventRequestParams extends MTRUnitTestingClusterTestEmitTestFabricScopedEventRequestParams {

	static alloc(): MTRTestClusterClusterTestEmitTestFabricScopedEventRequestParams; // inherited from NSObject

	static new(): MTRTestClusterClusterTestEmitTestFabricScopedEventRequestParams; // inherited from NSObject
}

declare class MTRTestClusterClusterTestEmitTestFabricScopedEventResponseParams extends MTRUnitTestingClusterTestEmitTestFabricScopedEventResponseParams {

	static alloc(): MTRTestClusterClusterTestEmitTestFabricScopedEventResponseParams; // inherited from NSObject

	static new(): MTRTestClusterClusterTestEmitTestFabricScopedEventResponseParams; // inherited from NSObject
}

declare class MTRTestClusterClusterTestEnumsRequestParams extends MTRUnitTestingClusterTestEnumsRequestParams {

	static alloc(): MTRTestClusterClusterTestEnumsRequestParams; // inherited from NSObject

	static new(): MTRTestClusterClusterTestEnumsRequestParams; // inherited from NSObject
}

declare class MTRTestClusterClusterTestEnumsResponseParams extends MTRUnitTestingClusterTestEnumsResponseParams {

	static alloc(): MTRTestClusterClusterTestEnumsResponseParams; // inherited from NSObject

	static new(): MTRTestClusterClusterTestEnumsResponseParams; // inherited from NSObject
}

declare class MTRTestClusterClusterTestEventEvent extends MTRUnitTestingClusterTestEventEvent {

	static alloc(): MTRTestClusterClusterTestEventEvent; // inherited from NSObject

	static new(): MTRTestClusterClusterTestEventEvent; // inherited from NSObject

	arg4: MTRTestClusterClusterSimpleStruct;
}

declare class MTRTestClusterClusterTestFabricScoped extends MTRUnitTestingClusterTestFabricScoped {

	static alloc(): MTRTestClusterClusterTestFabricScoped; // inherited from NSObject

	static new(): MTRTestClusterClusterTestFabricScoped; // inherited from NSObject

	fabricSensitiveStruct: MTRTestClusterClusterSimpleStruct;
}

declare class MTRTestClusterClusterTestFabricScopedEventEvent extends MTRUnitTestingClusterTestFabricScopedEventEvent {

	static alloc(): MTRTestClusterClusterTestFabricScopedEventEvent; // inherited from NSObject

	static new(): MTRTestClusterClusterTestFabricScopedEventEvent; // inherited from NSObject
}

declare class MTRTestClusterClusterTestListInt8UArgumentRequestParams extends MTRUnitTestingClusterTestListInt8UArgumentRequestParams {

	static alloc(): MTRTestClusterClusterTestListInt8UArgumentRequestParams; // inherited from NSObject

	static new(): MTRTestClusterClusterTestListInt8UArgumentRequestParams; // inherited from NSObject
}

declare class MTRTestClusterClusterTestListInt8UReverseRequestParams extends MTRUnitTestingClusterTestListInt8UReverseRequestParams {

	static alloc(): MTRTestClusterClusterTestListInt8UReverseRequestParams; // inherited from NSObject

	static new(): MTRTestClusterClusterTestListInt8UReverseRequestParams; // inherited from NSObject
}

declare class MTRTestClusterClusterTestListInt8UReverseResponseParams extends MTRUnitTestingClusterTestListInt8UReverseResponseParams {

	static alloc(): MTRTestClusterClusterTestListInt8UReverseResponseParams; // inherited from NSObject

	static new(): MTRTestClusterClusterTestListInt8UReverseResponseParams; // inherited from NSObject
}

declare class MTRTestClusterClusterTestListNestedStructListArgumentRequestParams extends MTRUnitTestingClusterTestListNestedStructListArgumentRequestParams {

	static alloc(): MTRTestClusterClusterTestListNestedStructListArgumentRequestParams; // inherited from NSObject

	static new(): MTRTestClusterClusterTestListNestedStructListArgumentRequestParams; // inherited from NSObject
}

declare class MTRTestClusterClusterTestListStructArgumentRequestParams extends MTRUnitTestingClusterTestListStructArgumentRequestParams {

	static alloc(): MTRTestClusterClusterTestListStructArgumentRequestParams; // inherited from NSObject

	static new(): MTRTestClusterClusterTestListStructArgumentRequestParams; // inherited from NSObject
}

declare class MTRTestClusterClusterTestListStructOctet extends MTRUnitTestingClusterTestListStructOctet {

	static alloc(): MTRTestClusterClusterTestListStructOctet; // inherited from NSObject

	static new(): MTRTestClusterClusterTestListStructOctet; // inherited from NSObject
}

declare class MTRTestClusterClusterTestNestedStructArgumentRequestParams extends MTRUnitTestingClusterTestNestedStructArgumentRequestParams {

	static alloc(): MTRTestClusterClusterTestNestedStructArgumentRequestParams; // inherited from NSObject

	static new(): MTRTestClusterClusterTestNestedStructArgumentRequestParams; // inherited from NSObject
}

declare class MTRTestClusterClusterTestNestedStructListArgumentRequestParams extends MTRUnitTestingClusterTestNestedStructListArgumentRequestParams {

	static alloc(): MTRTestClusterClusterTestNestedStructListArgumentRequestParams; // inherited from NSObject

	static new(): MTRTestClusterClusterTestNestedStructListArgumentRequestParams; // inherited from NSObject
}

declare class MTRTestClusterClusterTestNotHandledParams extends MTRUnitTestingClusterTestNotHandledParams {

	static alloc(): MTRTestClusterClusterTestNotHandledParams; // inherited from NSObject

	static new(): MTRTestClusterClusterTestNotHandledParams; // inherited from NSObject
}

declare class MTRTestClusterClusterTestNullableOptionalRequestParams extends MTRUnitTestingClusterTestNullableOptionalRequestParams {

	static alloc(): MTRTestClusterClusterTestNullableOptionalRequestParams; // inherited from NSObject

	static new(): MTRTestClusterClusterTestNullableOptionalRequestParams; // inherited from NSObject
}

declare class MTRTestClusterClusterTestNullableOptionalResponseParams extends MTRUnitTestingClusterTestNullableOptionalResponseParams {

	static alloc(): MTRTestClusterClusterTestNullableOptionalResponseParams; // inherited from NSObject

	static new(): MTRTestClusterClusterTestNullableOptionalResponseParams; // inherited from NSObject
}

declare class MTRTestClusterClusterTestParams extends MTRUnitTestingClusterTestParams {

	static alloc(): MTRTestClusterClusterTestParams; // inherited from NSObject

	static new(): MTRTestClusterClusterTestParams; // inherited from NSObject
}

declare class MTRTestClusterClusterTestSimpleArgumentRequestParams extends MTRUnitTestingClusterTestSimpleArgumentRequestParams {

	static alloc(): MTRTestClusterClusterTestSimpleArgumentRequestParams; // inherited from NSObject

	static new(): MTRTestClusterClusterTestSimpleArgumentRequestParams; // inherited from NSObject
}

declare class MTRTestClusterClusterTestSimpleArgumentResponseParams extends MTRUnitTestingClusterTestSimpleArgumentResponseParams {

	static alloc(): MTRTestClusterClusterTestSimpleArgumentResponseParams; // inherited from NSObject

	static new(): MTRTestClusterClusterTestSimpleArgumentResponseParams; // inherited from NSObject
}

declare class MTRTestClusterClusterTestSimpleOptionalArgumentRequestParams extends MTRUnitTestingClusterTestSimpleOptionalArgumentRequestParams {

	static alloc(): MTRTestClusterClusterTestSimpleOptionalArgumentRequestParams; // inherited from NSObject

	static new(): MTRTestClusterClusterTestSimpleOptionalArgumentRequestParams; // inherited from NSObject
}

declare class MTRTestClusterClusterTestSpecificParams extends MTRUnitTestingClusterTestSpecificParams {

	static alloc(): MTRTestClusterClusterTestSpecificParams; // inherited from NSObject

	static new(): MTRTestClusterClusterTestSpecificParams; // inherited from NSObject
}

declare class MTRTestClusterClusterTestSpecificResponseParams extends MTRUnitTestingClusterTestSpecificResponseParams {

	static alloc(): MTRTestClusterClusterTestSpecificResponseParams; // inherited from NSObject

	static new(): MTRTestClusterClusterTestSpecificResponseParams; // inherited from NSObject
}

declare class MTRTestClusterClusterTestStructArgumentRequestParams extends MTRUnitTestingClusterTestStructArgumentRequestParams {

	static alloc(): MTRTestClusterClusterTestStructArgumentRequestParams; // inherited from NSObject

	static new(): MTRTestClusterClusterTestStructArgumentRequestParams; // inherited from NSObject
}

declare class MTRTestClusterClusterTestStructArrayArgumentRequestParams extends MTRUnitTestingClusterTestStructArrayArgumentRequestParams {

	static alloc(): MTRTestClusterClusterTestStructArrayArgumentRequestParams; // inherited from NSObject

	static new(): MTRTestClusterClusterTestStructArrayArgumentRequestParams; // inherited from NSObject
}

declare class MTRTestClusterClusterTestStructArrayArgumentResponseParams extends MTRUnitTestingClusterTestStructArrayArgumentResponseParams {

	static alloc(): MTRTestClusterClusterTestStructArrayArgumentResponseParams; // inherited from NSObject

	static new(): MTRTestClusterClusterTestStructArrayArgumentResponseParams; // inherited from NSObject
}

declare class MTRTestClusterClusterTestUnknownCommandParams extends MTRUnitTestingClusterTestUnknownCommandParams {

	static alloc(): MTRTestClusterClusterTestUnknownCommandParams; // inherited from NSObject

	static new(): MTRTestClusterClusterTestUnknownCommandParams; // inherited from NSObject
}

declare class MTRTestClusterClusterTimedInvokeRequestParams extends MTRUnitTestingClusterTimedInvokeRequestParams {

	static alloc(): MTRTestClusterClusterTimedInvokeRequestParams; // inherited from NSObject

	static new(): MTRTestClusterClusterTimedInvokeRequestParams; // inherited from NSObject
}

declare const enum MTRTestClusterSimple {

	Unspecified = 0,

	ValueA = 1,

	ValueB = 2,

	ValueC = 3
}

declare const enum MTRTestClusterSimpleBitmap {

	ValueA = 1,

	ValueB = 2,

	ValueC = 4
}

declare class MTRThermostatClusterClearWeeklyScheduleParams extends NSObject implements NSCopying {

	static alloc(): MTRThermostatClusterClearWeeklyScheduleParams; // inherited from NSObject

	static new(): MTRThermostatClusterClearWeeklyScheduleParams; // inherited from NSObject

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRThermostatClusterGetWeeklyScheduleParams extends NSObject implements NSCopying {

	static alloc(): MTRThermostatClusterGetWeeklyScheduleParams; // inherited from NSObject

	static new(): MTRThermostatClusterGetWeeklyScheduleParams; // inherited from NSObject

	daysToReturn: number;

	modeToReturn: number;

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRThermostatClusterGetWeeklyScheduleResponseParams extends NSObject implements NSCopying {

	static alloc(): MTRThermostatClusterGetWeeklyScheduleResponseParams; // inherited from NSObject

	static new(): MTRThermostatClusterGetWeeklyScheduleResponseParams; // inherited from NSObject

	dayOfWeekForSequence: number;

	modeForSequence: number;

	numberOfTransitionsForSequence: number;

	timedInvokeTimeoutMs: number;

	transitions: NSArray<any>;

	constructor(o: { responseValue: NSDictionary<string, any>; });

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;

	initWithResponseValueError(responseValue: NSDictionary<string, any>): this;
}

declare class MTRThermostatClusterSetWeeklyScheduleParams extends NSObject implements NSCopying {

	static alloc(): MTRThermostatClusterSetWeeklyScheduleParams; // inherited from NSObject

	static new(): MTRThermostatClusterSetWeeklyScheduleParams; // inherited from NSObject

	dayOfWeekForSequence: number;

	modeForSequence: number;

	numberOfTransitionsForSequence: number;

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	transitions: NSArray<any>;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRThermostatClusterSetpointRaiseLowerParams extends NSObject implements NSCopying {

	static alloc(): MTRThermostatClusterSetpointRaiseLowerParams; // inherited from NSObject

	static new(): MTRThermostatClusterSetpointRaiseLowerParams; // inherited from NSObject

	amount: number;

	mode: number;

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRThermostatClusterThermostatScheduleTransition extends MTRThermostatClusterWeeklyScheduleTransitionStruct {

	static alloc(): MTRThermostatClusterThermostatScheduleTransition; // inherited from NSObject

	static new(): MTRThermostatClusterThermostatScheduleTransition; // inherited from NSObject
}

declare class MTRThermostatClusterWeeklyScheduleTransitionStruct extends NSObject implements NSCopying {

	static alloc(): MTRThermostatClusterWeeklyScheduleTransitionStruct; // inherited from NSObject

	static new(): MTRThermostatClusterWeeklyScheduleTransitionStruct; // inherited from NSObject

	coolSetpoint: number;

	heatSetpoint: number;

	transitionTime: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare const enum MTRThermostatControlSequence {

	CoolingOnly = 0,

	CoolingWithReheat = 1,

	HeatingOnly = 2,

	HeatingWithReheat = 3,

	CoolingAndHeating = 4,

	CoolingAndHeatingWithReheat = 5
}

declare const enum MTRThermostatControlSequenceOfOperation {

	CoolingOnly = 0,

	CoolingWithReheat = 1,

	HeatingOnly = 2,

	HeatingWithReheat = 3,

	CoolingAndHeating = 4,

	CoolingAndHeatingWithReheat = 5
}

declare const enum MTRThermostatDayOfWeek {

	Sunday = 1,

	Monday = 2,

	Tuesday = 4,

	Wednesday = 8,

	Thursday = 16,

	Friday = 32,

	Saturday = 64,

	Away = 128,

	AwayOrVacation = 128
}

declare const enum MTRThermostatFeature {

	Heating = 1,

	Cooling = 2,

	Occupancy = 4,

	ScheduleConfiguration = 8,

	Schedule = 8,

	Setback = 16,

	AutoMode = 32,

	Automode = 32,

	LocalTemperatureNotExposed = 64
}

declare const enum MTRThermostatModeForSequence {

	HeatSetpointPresent = 1,

	HeatSetpointFieldPresent = 1,

	CoolSetpointPresent = 2,

	CoolSetpointFieldPresent = 2
}

declare const enum MTRThermostatRunningMode {

	Off = 0,

	Cool = 3,

	Heat = 4
}

declare const enum MTRThermostatScheduleDayOfWeekBitmap {

	Sunday = 1,

	Monday = 2,

	Tuesday = 4,

	Wednesday = 8,

	Thursday = 16,

	Friday = 32,

	Saturday = 64,

	Away = 128
}

declare const enum MTRThermostatScheduleModeBitmap {

	HeatSetpointPresent = 1,

	CoolSetpointPresent = 2
}

declare const enum MTRThermostatSetpointAdjustMode {

	Heat = 0,

	HeatSetpoint = 0,

	Cool = 1,

	CoolSetpoint = 1,

	Both = 2,

	HeatAndCoolSetpoints = 2
}

declare const enum MTRThermostatSetpointRaiseLowerMode {

	Heat = 0,

	Cool = 1,

	Both = 2
}

declare const enum MTRThermostatSystemMode {

	Off = 0,

	Auto = 1,

	Cool = 3,

	Heat = 4,

	EmergencyHeat = 5,

	EmergencyHeating = 5,

	Precooling = 6,

	FanOnly = 7,

	Dry = 8,

	Sleep = 9
}

declare const enum MTRThermostatUserInterfaceConfigurationKeypadLockout {

	NoLockout = 0,

	Lockout1 = 1,

	Lockout2 = 2,

	Lockout3 = 3,

	Lockout4 = 4,

	Lockout5 = 5
}

declare const enum MTRThermostatUserInterfaceConfigurationScheduleProgrammingVisibility {

	ScheduleProgrammingPermitted = 0,

	ScheduleProgrammingDenied = 1
}

declare const enum MTRThermostatUserInterfaceConfigurationTemperatureDisplayMode {

	Celsius = 0,

	Fahrenheit = 1
}

declare class MTRThreadNetworkDiagnosticsClusterConnectionStatusEvent extends NSObject implements NSCopying {

	static alloc(): MTRThreadNetworkDiagnosticsClusterConnectionStatusEvent; // inherited from NSObject

	static new(): MTRThreadNetworkDiagnosticsClusterConnectionStatusEvent; // inherited from NSObject

	connectionStatus: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRThreadNetworkDiagnosticsClusterNeighborTable extends MTRThreadNetworkDiagnosticsClusterNeighborTableStruct {

	static alloc(): MTRThreadNetworkDiagnosticsClusterNeighborTable; // inherited from NSObject

	static new(): MTRThreadNetworkDiagnosticsClusterNeighborTable; // inherited from NSObject
}

declare class MTRThreadNetworkDiagnosticsClusterNeighborTableStruct extends NSObject implements NSCopying {

	static alloc(): MTRThreadNetworkDiagnosticsClusterNeighborTableStruct; // inherited from NSObject

	static new(): MTRThreadNetworkDiagnosticsClusterNeighborTableStruct; // inherited from NSObject

	age: number;

	averageRssi: number;

	extAddress: number;

	frameErrorRate: number;

	fullNetworkData: number;

	fullThreadDevice: number;

	isChild: number;

	lastRssi: number;

	linkFrameCounter: number;

	lqi: number;

	messageErrorRate: number;

	mleFrameCounter: number;

	rloc16: number;

	rxOnWhenIdle: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRThreadNetworkDiagnosticsClusterNetworkFaultChangeEvent extends NSObject implements NSCopying {

	static alloc(): MTRThreadNetworkDiagnosticsClusterNetworkFaultChangeEvent; // inherited from NSObject

	static new(): MTRThreadNetworkDiagnosticsClusterNetworkFaultChangeEvent; // inherited from NSObject

	current: NSArray<any>;

	previous: NSArray<any>;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRThreadNetworkDiagnosticsClusterOperationalDatasetComponents extends NSObject implements NSCopying {

	static alloc(): MTRThreadNetworkDiagnosticsClusterOperationalDatasetComponents; // inherited from NSObject

	static new(): MTRThreadNetworkDiagnosticsClusterOperationalDatasetComponents; // inherited from NSObject

	activeTimestampPresent: number;

	channelMaskPresent: number;

	channelPresent: number;

	delayPresent: number;

	extendedPanIdPresent: number;

	masterKeyPresent: number;

	meshLocalPrefixPresent: number;

	networkNamePresent: number;

	panIdPresent: number;

	pendingTimestampPresent: number;

	pskcPresent: number;

	securityPolicyPresent: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRThreadNetworkDiagnosticsClusterResetCountsParams extends NSObject implements NSCopying {

	static alloc(): MTRThreadNetworkDiagnosticsClusterResetCountsParams; // inherited from NSObject

	static new(): MTRThreadNetworkDiagnosticsClusterResetCountsParams; // inherited from NSObject

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRThreadNetworkDiagnosticsClusterRouteTable extends MTRThreadNetworkDiagnosticsClusterRouteTableStruct {

	static alloc(): MTRThreadNetworkDiagnosticsClusterRouteTable; // inherited from NSObject

	static new(): MTRThreadNetworkDiagnosticsClusterRouteTable; // inherited from NSObject
}

declare class MTRThreadNetworkDiagnosticsClusterRouteTableStruct extends NSObject implements NSCopying {

	static alloc(): MTRThreadNetworkDiagnosticsClusterRouteTableStruct; // inherited from NSObject

	static new(): MTRThreadNetworkDiagnosticsClusterRouteTableStruct; // inherited from NSObject

	age: number;

	allocated: number;

	extAddress: number;

	linkEstablished: number;

	lqiIn: number;

	lqiOut: number;

	nextHop: number;

	pathCost: number;

	rloc16: number;

	routerId: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRThreadNetworkDiagnosticsClusterSecurityPolicy extends NSObject implements NSCopying {

	static alloc(): MTRThreadNetworkDiagnosticsClusterSecurityPolicy; // inherited from NSObject

	static new(): MTRThreadNetworkDiagnosticsClusterSecurityPolicy; // inherited from NSObject

	flags: number;

	rotationTime: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare const enum MTRThreadNetworkDiagnosticsConnectionStatus {

	Connected = 0,

	NotConnected = 1
}

declare const enum MTRThreadNetworkDiagnosticsFeature {

	PacketCounts = 1,

	ErrorCounts = 2,

	MLECounts = 4,

	MACCounts = 8
}

declare const enum MTRThreadNetworkDiagnosticsNetworkFault {

	Unspecified = 0,

	LinkDown = 1,

	HardwareFailure = 2,

	NetworkJammed = 3
}

declare const enum MTRThreadNetworkDiagnosticsRoutingRole {

	Unspecified = 0,

	Unassigned = 1,

	SleepyEndDevice = 2,

	EndDevice = 3,

	REED = 4,

	Router = 5,

	Leader = 6
}

declare const enum MTRThreadNetworkDiagnosticsThreadConnectionStatus {

	Connected = 0,

	NotConnected = 1
}

declare class MTRThreadOperationalDataset extends NSObject {

	static alloc(): MTRThreadOperationalDataset; // inherited from NSObject

	static new(): MTRThreadOperationalDataset; // inherited from NSObject

	readonly PSKc: NSData;

	channel: number;

	readonly channelNumber: number;

	readonly extendedPANID: NSData;

	readonly masterKey: NSData;

	readonly networkName: string;

	readonly panID: NSData;

	constructor(o: { data: NSData; });

	constructor(o: { networkName: string; extendedPANID: NSData; masterKey: NSData; PSKc: NSData; channelNumber: number; panID: NSData; });

	constructor(o: { networkName: string; extendedPANID: NSData; masterKey: NSData; PSKc: NSData; channel: number; panID: NSData; });

	data(): NSData;

	initWithData(data: NSData): this;

	initWithNetworkNameExtendedPANIDMasterKeyPSKcChannelNumberPanID(networkName: string, extendedPANID: NSData, masterKey: NSData, PSKc: NSData, channelNumber: number, panID: NSData): this;

	initWithNetworkNameExtendedPANIDMasterKeyPSKcChannelPanID(networkName: string, extendedPANID: NSData, masterKey: NSData, PSKc: NSData, channel: number, panID: NSData): this;
}

declare const enum MTRTimeFormatLocalizationCalendarType {

	Buddhist = 0,

	Chinese = 1,

	Coptic = 2,

	Ethiopian = 3,

	Gregorian = 4,

	Hebrew = 5,

	Indian = 6,

	Islamic = 7,

	Japanese = 8,

	Korean = 9,

	Persian = 10,

	Taiwanese = 11,

	UseActiveLocale = 255
}

declare const enum MTRTimeFormatLocalizationFeature {

	CalendarFormat = 1
}

declare const enum MTRTimeFormatLocalizationHourFormat {

	Format12hr = 0,

	Format24hr = 1,

	FormatUseActiveLocale = 255
}

declare class MTRTimeSynchronizationClusterDSTOffsetStruct extends NSObject implements NSCopying {

	static alloc(): MTRTimeSynchronizationClusterDSTOffsetStruct; // inherited from NSObject

	static new(): MTRTimeSynchronizationClusterDSTOffsetStruct; // inherited from NSObject

	offset: number;

	validStarting: number;

	validUntil: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRTimeSynchronizationClusterDstOffsetType extends MTRTimeSynchronizationClusterDSTOffsetStruct {

	static alloc(): MTRTimeSynchronizationClusterDstOffsetType; // inherited from NSObject

	static new(): MTRTimeSynchronizationClusterDstOffsetType; // inherited from NSObject
}

declare class MTRTimeSynchronizationClusterSetUTCTimeParams extends NSObject implements NSCopying {

	static alloc(): MTRTimeSynchronizationClusterSetUTCTimeParams; // inherited from NSObject

	static new(): MTRTimeSynchronizationClusterSetUTCTimeParams; // inherited from NSObject

	granularity: number;

	serverSideProcessingTimeout: number;

	timeSource: number;

	timedInvokeTimeoutMs: number;

	utcTime: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRTimeSynchronizationClusterSetUtcTimeParams extends MTRTimeSynchronizationClusterSetUTCTimeParams {

	static alloc(): MTRTimeSynchronizationClusterSetUtcTimeParams; // inherited from NSObject

	static new(): MTRTimeSynchronizationClusterSetUtcTimeParams; // inherited from NSObject
}

declare class MTRTimeSynchronizationClusterTimeZoneStruct extends NSObject implements NSCopying {

	static alloc(): MTRTimeSynchronizationClusterTimeZoneStruct; // inherited from NSObject

	static new(): MTRTimeSynchronizationClusterTimeZoneStruct; // inherited from NSObject

	name: string;

	offset: number;

	validAt: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRTimeSynchronizationClusterTimeZoneType extends MTRTimeSynchronizationClusterTimeZoneStruct {

	static alloc(): MTRTimeSynchronizationClusterTimeZoneType; // inherited from NSObject

	static new(): MTRTimeSynchronizationClusterTimeZoneType; // inherited from NSObject
}

declare const enum MTRTimeSynchronizationGranularity {

	NoTimeGranularity = 0,

	MinutesGranularity = 1,

	SecondsGranularity = 2,

	MillisecondsGranularity = 3,

	MicrosecondsGranularity = 4
}

declare const enum MTRTimeSynchronizationTimeSource {

	None = 0,

	Unknown = 1,

	Admin = 2,

	NodeTimeCluster = 3,

	NonMatterSNTP = 4,

	NonFabricSntp = 4,

	NonMatterNTP = 5,

	NonFabricNtp = 5,

	MatterSNTP = 6,

	FabricSntp = 6,

	MatterNTP = 7,

	FabricNtp = 7,

	MixedNTP = 8,

	MixedNtp = 8,

	NonMatterSNTPNTS = 9,

	NonFabricSntpNts = 9,

	NonMatterNTPNTS = 10,

	NonFabricNtpNts = 10,

	MatterSNTPNTS = 11,

	FabricSntpNts = 11,

	MatterNTPNTS = 12,

	FabricNtpNts = 12,

	MixedNTPNTS = 13,

	MixedNtpNts = 13,

	CloudSource = 14,

	PTP = 15,

	Ptp = 15,

	GNSS = 16,

	Gnss = 16
}

declare const enum MTRTransportType {

	Undefined = 0,

	UDP = 1,

	BLE = 2,

	TCP = 3
}

declare var MTRTypeKey: string;

declare var MTRUTF8StringValueType: string;

declare const enum MTRUnitLocalizationFeature {

	TemperatureUnit = 1
}

declare const enum MTRUnitLocalizationTempUnit {

	Fahrenheit = 0,

	Celsius = 1,

	Kelvin = 2
}

declare const enum MTRUnitTestingBitmap16MaskMap {

	MaskVal1 = 1,

	MaskVal2 = 2,

	MaskVal3 = 4,

	MaskVal4 = 16384
}

declare const enum MTRUnitTestingBitmap32MaskMap {

	MaskVal1 = 1,

	MaskVal2 = 2,

	MaskVal3 = 4,

	MaskVal4 = 1073741824
}

declare const enum MTRUnitTestingBitmap64MaskMap {

	MaskVal1 = 1,

	MaskVal2 = 2,

	MaskVal3 = 4,

	MaskVal4 = 4611686018427387904
}

declare const enum MTRUnitTestingBitmap8MaskMap {

	MaskVal1 = 1,

	MaskVal2 = 2,

	MaskVal3 = 4,

	MaskVal4 = 64
}

declare class MTRUnitTestingClusterBooleanResponseParams extends NSObject implements NSCopying {

	static alloc(): MTRUnitTestingClusterBooleanResponseParams; // inherited from NSObject

	static new(): MTRUnitTestingClusterBooleanResponseParams; // inherited from NSObject

	timedInvokeTimeoutMs: number;

	value: number;

	constructor(o: { responseValue: NSDictionary<string, any>; });

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;

	initWithResponseValueError(responseValue: NSDictionary<string, any>): this;
}

declare class MTRUnitTestingClusterDoubleNestedStructList extends NSObject implements NSCopying {

	static alloc(): MTRUnitTestingClusterDoubleNestedStructList; // inherited from NSObject

	static new(): MTRUnitTestingClusterDoubleNestedStructList; // inherited from NSObject

	a: NSArray<any>;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRUnitTestingClusterNestedStruct extends NSObject implements NSCopying {

	static alloc(): MTRUnitTestingClusterNestedStruct; // inherited from NSObject

	static new(): MTRUnitTestingClusterNestedStruct; // inherited from NSObject

	a: number;

	b: number;

	c: MTRUnitTestingClusterSimpleStruct;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRUnitTestingClusterNestedStructList extends NSObject implements NSCopying {

	static alloc(): MTRUnitTestingClusterNestedStructList; // inherited from NSObject

	static new(): MTRUnitTestingClusterNestedStructList; // inherited from NSObject

	a: number;

	b: number;

	c: MTRUnitTestingClusterSimpleStruct;

	d: NSArray<any>;

	e: NSArray<any>;

	f: NSArray<any>;

	g: NSArray<any>;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRUnitTestingClusterNullablesAndOptionalsStruct extends NSObject implements NSCopying {

	static alloc(): MTRUnitTestingClusterNullablesAndOptionalsStruct; // inherited from NSObject

	static new(): MTRUnitTestingClusterNullablesAndOptionalsStruct; // inherited from NSObject

	nullableInt: number;

	nullableList: NSArray<any>;

	nullableOptionalInt: number;

	nullableOptionalList: NSArray<any>;

	nullableOptionalString: string;

	nullableOptionalStruct: MTRUnitTestingClusterSimpleStruct;

	nullableString: string;

	nullableStruct: MTRUnitTestingClusterSimpleStruct;

	optionalInt: number;

	optionalList: NSArray<any>;

	optionalString: string;

	optionalStruct: MTRUnitTestingClusterSimpleStruct;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRUnitTestingClusterSimpleStruct extends NSObject implements NSCopying {

	static alloc(): MTRUnitTestingClusterSimpleStruct; // inherited from NSObject

	static new(): MTRUnitTestingClusterSimpleStruct; // inherited from NSObject

	a: number;

	b: number;

	c: number;

	d: NSData;

	e: string;

	f: number;

	g: number;

	h: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRUnitTestingClusterSimpleStructEchoRequestParams extends NSObject implements NSCopying {

	static alloc(): MTRUnitTestingClusterSimpleStructEchoRequestParams; // inherited from NSObject

	static new(): MTRUnitTestingClusterSimpleStructEchoRequestParams; // inherited from NSObject

	arg1: MTRUnitTestingClusterSimpleStruct;

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRUnitTestingClusterSimpleStructResponseParams extends NSObject implements NSCopying {

	static alloc(): MTRUnitTestingClusterSimpleStructResponseParams; // inherited from NSObject

	static new(): MTRUnitTestingClusterSimpleStructResponseParams; // inherited from NSObject

	arg1: MTRUnitTestingClusterSimpleStruct;

	timedInvokeTimeoutMs: number;

	constructor(o: { responseValue: NSDictionary<string, any>; });

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;

	initWithResponseValueError(responseValue: NSDictionary<string, any>): this;
}

declare class MTRUnitTestingClusterTestAddArgumentsParams extends NSObject implements NSCopying {

	static alloc(): MTRUnitTestingClusterTestAddArgumentsParams; // inherited from NSObject

	static new(): MTRUnitTestingClusterTestAddArgumentsParams; // inherited from NSObject

	arg1: number;

	arg2: number;

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRUnitTestingClusterTestAddArgumentsResponseParams extends NSObject implements NSCopying {

	static alloc(): MTRUnitTestingClusterTestAddArgumentsResponseParams; // inherited from NSObject

	static new(): MTRUnitTestingClusterTestAddArgumentsResponseParams; // inherited from NSObject

	returnValue: number;

	timedInvokeTimeoutMs: number;

	constructor(o: { responseValue: NSDictionary<string, any>; });

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;

	initWithResponseValueError(responseValue: NSDictionary<string, any>): this;
}

declare class MTRUnitTestingClusterTestComplexNullableOptionalRequestParams extends NSObject implements NSCopying {

	static alloc(): MTRUnitTestingClusterTestComplexNullableOptionalRequestParams; // inherited from NSObject

	static new(): MTRUnitTestingClusterTestComplexNullableOptionalRequestParams; // inherited from NSObject

	nullableInt: number;

	nullableList: NSArray<any>;

	nullableOptionalInt: number;

	nullableOptionalList: NSArray<any>;

	nullableOptionalString: string;

	nullableOptionalStruct: MTRUnitTestingClusterSimpleStruct;

	nullableString: string;

	nullableStruct: MTRUnitTestingClusterSimpleStruct;

	optionalInt: number;

	optionalList: NSArray<any>;

	optionalString: string;

	optionalStruct: MTRUnitTestingClusterSimpleStruct;

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRUnitTestingClusterTestComplexNullableOptionalResponseParams extends NSObject implements NSCopying {

	static alloc(): MTRUnitTestingClusterTestComplexNullableOptionalResponseParams; // inherited from NSObject

	static new(): MTRUnitTestingClusterTestComplexNullableOptionalResponseParams; // inherited from NSObject

	nullableIntValue: number;

	nullableIntWasNull: number;

	nullableListValue: NSArray<any>;

	nullableListWasNull: number;

	nullableOptionalIntValue: number;

	nullableOptionalIntWasNull: number;

	nullableOptionalIntWasPresent: number;

	nullableOptionalListValue: NSArray<any>;

	nullableOptionalListWasNull: number;

	nullableOptionalListWasPresent: number;

	nullableOptionalStringValue: string;

	nullableOptionalStringWasNull: number;

	nullableOptionalStringWasPresent: number;

	nullableOptionalStructValue: MTRUnitTestingClusterSimpleStruct;

	nullableOptionalStructWasNull: number;

	nullableOptionalStructWasPresent: number;

	nullableStringValue: string;

	nullableStringWasNull: number;

	nullableStructValue: MTRUnitTestingClusterSimpleStruct;

	nullableStructWasNull: number;

	optionalIntValue: number;

	optionalIntWasPresent: number;

	optionalListValue: NSArray<any>;

	optionalListWasPresent: number;

	optionalStringValue: string;

	optionalStringWasPresent: number;

	optionalStructValue: MTRUnitTestingClusterSimpleStruct;

	optionalStructWasPresent: number;

	timedInvokeTimeoutMs: number;

	constructor(o: { responseValue: NSDictionary<string, any>; });

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;

	initWithResponseValueError(responseValue: NSDictionary<string, any>): this;
}

declare class MTRUnitTestingClusterTestEmitTestEventRequestParams extends NSObject implements NSCopying {

	static alloc(): MTRUnitTestingClusterTestEmitTestEventRequestParams; // inherited from NSObject

	static new(): MTRUnitTestingClusterTestEmitTestEventRequestParams; // inherited from NSObject

	arg1: number;

	arg2: number;

	arg3: number;

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRUnitTestingClusterTestEmitTestEventResponseParams extends NSObject implements NSCopying {

	static alloc(): MTRUnitTestingClusterTestEmitTestEventResponseParams; // inherited from NSObject

	static new(): MTRUnitTestingClusterTestEmitTestEventResponseParams; // inherited from NSObject

	timedInvokeTimeoutMs: number;

	value: number;

	constructor(o: { responseValue: NSDictionary<string, any>; });

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;

	initWithResponseValueError(responseValue: NSDictionary<string, any>): this;
}

declare class MTRUnitTestingClusterTestEmitTestFabricScopedEventRequestParams extends NSObject implements NSCopying {

	static alloc(): MTRUnitTestingClusterTestEmitTestFabricScopedEventRequestParams; // inherited from NSObject

	static new(): MTRUnitTestingClusterTestEmitTestFabricScopedEventRequestParams; // inherited from NSObject

	arg1: number;

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRUnitTestingClusterTestEmitTestFabricScopedEventResponseParams extends NSObject implements NSCopying {

	static alloc(): MTRUnitTestingClusterTestEmitTestFabricScopedEventResponseParams; // inherited from NSObject

	static new(): MTRUnitTestingClusterTestEmitTestFabricScopedEventResponseParams; // inherited from NSObject

	timedInvokeTimeoutMs: number;

	value: number;

	constructor(o: { responseValue: NSDictionary<string, any>; });

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;

	initWithResponseValueError(responseValue: NSDictionary<string, any>): this;
}

declare class MTRUnitTestingClusterTestEnumsRequestParams extends NSObject implements NSCopying {

	static alloc(): MTRUnitTestingClusterTestEnumsRequestParams; // inherited from NSObject

	static new(): MTRUnitTestingClusterTestEnumsRequestParams; // inherited from NSObject

	arg1: number;

	arg2: number;

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRUnitTestingClusterTestEnumsResponseParams extends NSObject implements NSCopying {

	static alloc(): MTRUnitTestingClusterTestEnumsResponseParams; // inherited from NSObject

	static new(): MTRUnitTestingClusterTestEnumsResponseParams; // inherited from NSObject

	arg1: number;

	arg2: number;

	timedInvokeTimeoutMs: number;

	constructor(o: { responseValue: NSDictionary<string, any>; });

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;

	initWithResponseValueError(responseValue: NSDictionary<string, any>): this;
}

declare class MTRUnitTestingClusterTestEventEvent extends NSObject implements NSCopying {

	static alloc(): MTRUnitTestingClusterTestEventEvent; // inherited from NSObject

	static new(): MTRUnitTestingClusterTestEventEvent; // inherited from NSObject

	arg1: number;

	arg2: number;

	arg3: number;

	arg4: MTRUnitTestingClusterSimpleStruct;

	arg5: NSArray<any>;

	arg6: NSArray<any>;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRUnitTestingClusterTestFabricScoped extends NSObject implements NSCopying {

	static alloc(): MTRUnitTestingClusterTestFabricScoped; // inherited from NSObject

	static new(): MTRUnitTestingClusterTestFabricScoped; // inherited from NSObject

	fabricIndex: number;

	fabricSensitiveCharString: string;

	fabricSensitiveInt8u: number;

	fabricSensitiveInt8uList: NSArray<any>;

	fabricSensitiveStruct: MTRUnitTestingClusterSimpleStruct;

	nullableFabricSensitiveInt8u: number;

	nullableOptionalFabricSensitiveInt8u: number;

	optionalFabricSensitiveInt8u: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRUnitTestingClusterTestFabricScopedEventEvent extends NSObject implements NSCopying {

	static alloc(): MTRUnitTestingClusterTestFabricScopedEventEvent; // inherited from NSObject

	static new(): MTRUnitTestingClusterTestFabricScopedEventEvent; // inherited from NSObject

	fabricIndex: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRUnitTestingClusterTestListInt8UArgumentRequestParams extends NSObject implements NSCopying {

	static alloc(): MTRUnitTestingClusterTestListInt8UArgumentRequestParams; // inherited from NSObject

	static new(): MTRUnitTestingClusterTestListInt8UArgumentRequestParams; // inherited from NSObject

	arg1: NSArray<any>;

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRUnitTestingClusterTestListInt8UReverseRequestParams extends NSObject implements NSCopying {

	static alloc(): MTRUnitTestingClusterTestListInt8UReverseRequestParams; // inherited from NSObject

	static new(): MTRUnitTestingClusterTestListInt8UReverseRequestParams; // inherited from NSObject

	arg1: NSArray<any>;

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRUnitTestingClusterTestListInt8UReverseResponseParams extends NSObject implements NSCopying {

	static alloc(): MTRUnitTestingClusterTestListInt8UReverseResponseParams; // inherited from NSObject

	static new(): MTRUnitTestingClusterTestListInt8UReverseResponseParams; // inherited from NSObject

	arg1: NSArray<any>;

	timedInvokeTimeoutMs: number;

	constructor(o: { responseValue: NSDictionary<string, any>; });

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;

	initWithResponseValueError(responseValue: NSDictionary<string, any>): this;
}

declare class MTRUnitTestingClusterTestListNestedStructListArgumentRequestParams extends NSObject implements NSCopying {

	static alloc(): MTRUnitTestingClusterTestListNestedStructListArgumentRequestParams; // inherited from NSObject

	static new(): MTRUnitTestingClusterTestListNestedStructListArgumentRequestParams; // inherited from NSObject

	arg1: NSArray<any>;

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRUnitTestingClusterTestListStructArgumentRequestParams extends NSObject implements NSCopying {

	static alloc(): MTRUnitTestingClusterTestListStructArgumentRequestParams; // inherited from NSObject

	static new(): MTRUnitTestingClusterTestListStructArgumentRequestParams; // inherited from NSObject

	arg1: NSArray<any>;

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRUnitTestingClusterTestListStructOctet extends NSObject implements NSCopying {

	static alloc(): MTRUnitTestingClusterTestListStructOctet; // inherited from NSObject

	static new(): MTRUnitTestingClusterTestListStructOctet; // inherited from NSObject

	member1: number;

	member2: NSData;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRUnitTestingClusterTestNestedStructArgumentRequestParams extends NSObject implements NSCopying {

	static alloc(): MTRUnitTestingClusterTestNestedStructArgumentRequestParams; // inherited from NSObject

	static new(): MTRUnitTestingClusterTestNestedStructArgumentRequestParams; // inherited from NSObject

	arg1: MTRUnitTestingClusterNestedStruct;

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRUnitTestingClusterTestNestedStructListArgumentRequestParams extends NSObject implements NSCopying {

	static alloc(): MTRUnitTestingClusterTestNestedStructListArgumentRequestParams; // inherited from NSObject

	static new(): MTRUnitTestingClusterTestNestedStructListArgumentRequestParams; // inherited from NSObject

	arg1: MTRUnitTestingClusterNestedStructList;

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRUnitTestingClusterTestNotHandledParams extends NSObject implements NSCopying {

	static alloc(): MTRUnitTestingClusterTestNotHandledParams; // inherited from NSObject

	static new(): MTRUnitTestingClusterTestNotHandledParams; // inherited from NSObject

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRUnitTestingClusterTestNullableOptionalRequestParams extends NSObject implements NSCopying {

	static alloc(): MTRUnitTestingClusterTestNullableOptionalRequestParams; // inherited from NSObject

	static new(): MTRUnitTestingClusterTestNullableOptionalRequestParams; // inherited from NSObject

	arg1: number;

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRUnitTestingClusterTestNullableOptionalResponseParams extends NSObject implements NSCopying {

	static alloc(): MTRUnitTestingClusterTestNullableOptionalResponseParams; // inherited from NSObject

	static new(): MTRUnitTestingClusterTestNullableOptionalResponseParams; // inherited from NSObject

	originalValue: number;

	timedInvokeTimeoutMs: number;

	value: number;

	wasNull: number;

	wasPresent: number;

	constructor(o: { responseValue: NSDictionary<string, any>; });

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;

	initWithResponseValueError(responseValue: NSDictionary<string, any>): this;
}

declare class MTRUnitTestingClusterTestParams extends NSObject implements NSCopying {

	static alloc(): MTRUnitTestingClusterTestParams; // inherited from NSObject

	static new(): MTRUnitTestingClusterTestParams; // inherited from NSObject

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRUnitTestingClusterTestSimpleArgumentRequestParams extends NSObject implements NSCopying {

	static alloc(): MTRUnitTestingClusterTestSimpleArgumentRequestParams; // inherited from NSObject

	static new(): MTRUnitTestingClusterTestSimpleArgumentRequestParams; // inherited from NSObject

	arg1: number;

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRUnitTestingClusterTestSimpleArgumentResponseParams extends NSObject implements NSCopying {

	static alloc(): MTRUnitTestingClusterTestSimpleArgumentResponseParams; // inherited from NSObject

	static new(): MTRUnitTestingClusterTestSimpleArgumentResponseParams; // inherited from NSObject

	returnValue: number;

	timedInvokeTimeoutMs: number;

	constructor(o: { responseValue: NSDictionary<string, any>; });

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;

	initWithResponseValueError(responseValue: NSDictionary<string, any>): this;
}

declare class MTRUnitTestingClusterTestSimpleOptionalArgumentRequestParams extends NSObject implements NSCopying {

	static alloc(): MTRUnitTestingClusterTestSimpleOptionalArgumentRequestParams; // inherited from NSObject

	static new(): MTRUnitTestingClusterTestSimpleOptionalArgumentRequestParams; // inherited from NSObject

	arg1: number;

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRUnitTestingClusterTestSpecificParams extends NSObject implements NSCopying {

	static alloc(): MTRUnitTestingClusterTestSpecificParams; // inherited from NSObject

	static new(): MTRUnitTestingClusterTestSpecificParams; // inherited from NSObject

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRUnitTestingClusterTestSpecificResponseParams extends NSObject implements NSCopying {

	static alloc(): MTRUnitTestingClusterTestSpecificResponseParams; // inherited from NSObject

	static new(): MTRUnitTestingClusterTestSpecificResponseParams; // inherited from NSObject

	returnValue: number;

	timedInvokeTimeoutMs: number;

	constructor(o: { responseValue: NSDictionary<string, any>; });

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;

	initWithResponseValueError(responseValue: NSDictionary<string, any>): this;
}

declare class MTRUnitTestingClusterTestStructArgumentRequestParams extends NSObject implements NSCopying {

	static alloc(): MTRUnitTestingClusterTestStructArgumentRequestParams; // inherited from NSObject

	static new(): MTRUnitTestingClusterTestStructArgumentRequestParams; // inherited from NSObject

	arg1: MTRUnitTestingClusterSimpleStruct;

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRUnitTestingClusterTestStructArrayArgumentRequestParams extends NSObject implements NSCopying {

	static alloc(): MTRUnitTestingClusterTestStructArrayArgumentRequestParams; // inherited from NSObject

	static new(): MTRUnitTestingClusterTestStructArrayArgumentRequestParams; // inherited from NSObject

	arg1: NSArray<any>;

	arg2: NSArray<any>;

	arg3: NSArray<any>;

	arg4: NSArray<any>;

	arg5: number;

	arg6: number;

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRUnitTestingClusterTestStructArrayArgumentResponseParams extends NSObject implements NSCopying {

	static alloc(): MTRUnitTestingClusterTestStructArrayArgumentResponseParams; // inherited from NSObject

	static new(): MTRUnitTestingClusterTestStructArrayArgumentResponseParams; // inherited from NSObject

	arg1: NSArray<any>;

	arg2: NSArray<any>;

	arg3: NSArray<any>;

	arg4: NSArray<any>;

	arg5: number;

	arg6: number;

	timedInvokeTimeoutMs: number;

	constructor(o: { responseValue: NSDictionary<string, any>; });

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;

	initWithResponseValueError(responseValue: NSDictionary<string, any>): this;
}

declare class MTRUnitTestingClusterTestUnknownCommandParams extends NSObject implements NSCopying {

	static alloc(): MTRUnitTestingClusterTestUnknownCommandParams; // inherited from NSObject

	static new(): MTRUnitTestingClusterTestUnknownCommandParams; // inherited from NSObject

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRUnitTestingClusterTimedInvokeRequestParams extends NSObject implements NSCopying {

	static alloc(): MTRUnitTestingClusterTimedInvokeRequestParams; // inherited from NSObject

	static new(): MTRUnitTestingClusterTimedInvokeRequestParams; // inherited from NSObject

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare const enum MTRUnitTestingSimple {

	Unspecified = 0,

	ValueA = 1,

	ValueB = 2,

	ValueC = 3
}

declare const enum MTRUnitTestingSimpleBitmap {

	ValueA = 1,

	ValueB = 2,

	ValueC = 4
}

declare var MTRUnsignedIntegerValueType: string;

declare class MTRUserLabelClusterLabelStruct extends NSObject implements NSCopying {

	static alloc(): MTRUserLabelClusterLabelStruct; // inherited from NSObject

	static new(): MTRUserLabelClusterLabelStruct; // inherited from NSObject

	label: string;

	value: string;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare var MTRValueKey: string;

declare const enum MTRWiFiNetworkDiagnosticsAssociationFailureCause {

	Unknown = 0,

	AssociationFailed = 1,

	AuthenticationFailed = 2,

	SsidNotFound = 3
}

declare class MTRWiFiNetworkDiagnosticsClusterAssociationFailureEvent extends NSObject implements NSCopying {

	static alloc(): MTRWiFiNetworkDiagnosticsClusterAssociationFailureEvent; // inherited from NSObject

	static new(): MTRWiFiNetworkDiagnosticsClusterAssociationFailureEvent; // inherited from NSObject

	associationFailure: number;

	associationFailureCause: number;

	status: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRWiFiNetworkDiagnosticsClusterConnectionStatusEvent extends NSObject implements NSCopying {

	static alloc(): MTRWiFiNetworkDiagnosticsClusterConnectionStatusEvent; // inherited from NSObject

	static new(): MTRWiFiNetworkDiagnosticsClusterConnectionStatusEvent; // inherited from NSObject

	connectionStatus: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRWiFiNetworkDiagnosticsClusterDisconnectionEvent extends NSObject implements NSCopying {

	static alloc(): MTRWiFiNetworkDiagnosticsClusterDisconnectionEvent; // inherited from NSObject

	static new(): MTRWiFiNetworkDiagnosticsClusterDisconnectionEvent; // inherited from NSObject

	reasonCode: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRWiFiNetworkDiagnosticsClusterResetCountsParams extends NSObject implements NSCopying {

	static alloc(): MTRWiFiNetworkDiagnosticsClusterResetCountsParams; // inherited from NSObject

	static new(): MTRWiFiNetworkDiagnosticsClusterResetCountsParams; // inherited from NSObject

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare const enum MTRWiFiNetworkDiagnosticsConnectionStatus {

	Connected = 0,

	NotConnected = 1
}

declare const enum MTRWiFiNetworkDiagnosticsFeature {

	PacketCounts = 1,

	ErrorCounts = 2
}

declare const enum MTRWiFiNetworkDiagnosticsSecurityType {

	Unspecified = 0,

	None = 1,

	WEP = 2,

	WPA = 3,

	WPA2 = 4,

	WPA3 = 5
}

declare const enum MTRWiFiNetworkDiagnosticsWiFiConnectionStatus {

	Connected = 0,

	NotConnected = 1
}

declare const enum MTRWiFiNetworkDiagnosticsWiFiVersion {

	A = 0,

	B = 1,

	G = 2,

	N = 3,

	Ac = 4,

	Ax = 5,

	Ah = 6
}

declare const enum MTRWiFiNetworkDiagnosticsWiFiVersionType {

	TypeA = 0,

	Type80211a = 0,

	TypeB = 1,

	Type80211b = 1,

	TypeG = 2,

	Type80211g = 2,

	TypeN = 3,

	Type80211n = 3,

	TypeAc = 4,

	Type80211ac = 4,

	TypeAx = 5,

	Type80211ax = 5
}

declare class MTRWindowCoveringClusterDownOrCloseParams extends NSObject implements NSCopying {

	static alloc(): MTRWindowCoveringClusterDownOrCloseParams; // inherited from NSObject

	static new(): MTRWindowCoveringClusterDownOrCloseParams; // inherited from NSObject

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRWindowCoveringClusterGoToLiftPercentageParams extends NSObject implements NSCopying {

	static alloc(): MTRWindowCoveringClusterGoToLiftPercentageParams; // inherited from NSObject

	static new(): MTRWindowCoveringClusterGoToLiftPercentageParams; // inherited from NSObject

	liftPercent100thsValue: number;

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRWindowCoveringClusterGoToLiftValueParams extends NSObject implements NSCopying {

	static alloc(): MTRWindowCoveringClusterGoToLiftValueParams; // inherited from NSObject

	static new(): MTRWindowCoveringClusterGoToLiftValueParams; // inherited from NSObject

	liftValue: number;

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRWindowCoveringClusterGoToTiltPercentageParams extends NSObject implements NSCopying {

	static alloc(): MTRWindowCoveringClusterGoToTiltPercentageParams; // inherited from NSObject

	static new(): MTRWindowCoveringClusterGoToTiltPercentageParams; // inherited from NSObject

	serverSideProcessingTimeout: number;

	tiltPercent100thsValue: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRWindowCoveringClusterGoToTiltValueParams extends NSObject implements NSCopying {

	static alloc(): MTRWindowCoveringClusterGoToTiltValueParams; // inherited from NSObject

	static new(): MTRWindowCoveringClusterGoToTiltValueParams; // inherited from NSObject

	serverSideProcessingTimeout: number;

	tiltValue: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRWindowCoveringClusterStopMotionParams extends NSObject implements NSCopying {

	static alloc(): MTRWindowCoveringClusterStopMotionParams; // inherited from NSObject

	static new(): MTRWindowCoveringClusterStopMotionParams; // inherited from NSObject

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare class MTRWindowCoveringClusterUpOrOpenParams extends NSObject implements NSCopying {

	static alloc(): MTRWindowCoveringClusterUpOrOpenParams; // inherited from NSObject

	static new(): MTRWindowCoveringClusterUpOrOpenParams; // inherited from NSObject

	serverSideProcessingTimeout: number;

	timedInvokeTimeoutMs: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}

declare const enum MTRWindowCoveringConfigStatus {

	Operational = 1,

	OnlineReserved = 2,

	LiftMovementReversed = 4,

	LiftPositionAware = 8,

	TiltPositionAware = 16,

	LiftEncoderControlled = 32,

	TiltEncoderControlled = 64
}

declare const enum MTRWindowCoveringEndProductType {

	RollerShade = 0,

	RomanShade = 1,

	BalloonShade = 2,

	WovenWood = 3,

	PleatedShade = 4,

	CellularShade = 5,

	LayeredShade = 6,

	LayeredShade2D = 7,

	SheerShade = 8,

	TiltOnlyInteriorBlind = 9,

	InteriorBlind = 10,

	VerticalBlindStripCurtain = 11,

	InteriorVenetianBlind = 12,

	ExteriorVenetianBlind = 13,

	LateralLeftCurtain = 14,

	LateralRightCurtain = 15,

	CentralCurtain = 16,

	RollerShutter = 17,

	ExteriorVerticalScreen = 18,

	AwningTerracePatio = 19,

	AwningVerticalScreen = 20,

	TiltOnlyPergola = 21,

	SwingingShutter = 22,

	SlidingShutter = 23,

	Unknown = 255
}

declare const enum MTRWindowCoveringFeature {

	Lift = 1,

	Tilt = 2,

	PositionAwareLift = 4,

	AbsolutePosition = 8,

	PositionAwareTilt = 16
}

declare const enum MTRWindowCoveringMode {

	MotorDirectionReversed = 1,

	CalibrationMode = 2,

	MaintenanceMode = 4,

	LedFeedback = 8
}

declare const enum MTRWindowCoveringOperationalStatus {

	Global = 3,

	Lift = 12,

	Tilt = 48
}

declare const enum MTRWindowCoveringSafetyStatus {

	RemoteLockout = 1,

	TamperDetection = 2,

	FailedCommunication = 4,

	PositionFailure = 8,

	ThermalProtection = 16,

	ObstacleDetected = 32,

	Power = 64,

	StopInput = 128,

	MotorJammed = 256,

	HardwareFailure = 512,

	ManualOperation = 1024,

	Protection = 2048
}

declare const enum MTRWindowCoveringType {

	RollerShade = 0,

	RollerShade2Motor = 1,

	RollerShadeExterior = 2,

	RollerShadeExterior2Motor = 3,

	Drapery = 4,

	Awning = 5,

	Shutter = 6,

	TiltBlindTiltOnly = 7,

	TiltBlindLiftAndTilt = 8,

	ProjectorScreen = 9,

	Unknown = 255
}

declare class MTRWriteParams extends NSObject implements NSCopying {

	static alloc(): MTRWriteParams; // inherited from NSObject

	static new(): MTRWriteParams; // inherited from NSObject

	dataVersion: number;

	timedWriteTimeout: number;

	copyWithZone(zone: interop.Pointer | interop.Reference<any>): any;
}
